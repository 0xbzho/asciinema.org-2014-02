[[0.225456,{"lines":{"0":[["(food)                                                                          ",{}]],"1":[["%                                                                               ",{}]],"2":[["                                                                                ",{}]],"3":[["                                                                                ",{}]],"4":[["                                                                                ",{}]],"5":[["                                                                                ",{}]],"6":[["                                                                                ",{}]],"7":[["                                                                                ",{}]],"8":[["                                                                                ",{}]],"9":[["                                                                                ",{}]],"10":[["                                                                                ",{}]],"11":[["                                                                                ",{}]],"12":[["                                                                                ",{}]],"13":[["                                                                                ",{}]],"14":[["                                                                                ",{}]],"15":[["                                                                                ",{}]],"16":[["                                                                                ",{}]],"17":[["                                                                                ",{}]],"18":[["                                                                                ",{}]],"19":[["                                                                                ",{}]],"20":[["                                                                                ",{}]],"21":[["                                                                                ",{}]],"22":[["                                                                                ",{}]],"23":[["                                                                                ",{}]]},"cursor":{"x":0,"y":2,"visible":true}}],[0.007138,{"lines":{"2":[["I never pray before meals -- my mom's a good cook.                              ",{}]]},"cursor":{"y":3}}],[0.017174,{"lines":{"3":[["vinipsmaker ",{"fg":6}],["~/vinipsmaker labs ",{"fg":5}],["$                                                ",{}]]},"cursor":{"x":33}}],[8.7e-05,{}],[0.7162269999999999,{"lines":{"3":[["vinipsmaker ",{"fg":6}],["~/vinipsmaker labs ",{"fg":5}],["$ ",{}],["l",{"fg":3,"underline":true}],["                                              ",{}]]},"cursor":{"x":34}}],[0.135139,{"lines":{"3":[["vinipsmaker ",{"fg":6}],["~/vinipsmaker labs ",{"fg":5}],["$ ",{}],["ls",{"fg":2}],["                                             ",{}]]},"cursor":{"x":35}}],[0.8245440000000001,{"cursor":{"x":0,"y":4}}],[0.04848,{"lines":{"4":[["clientes.cpp                                                                    ",{}]]},"cursor":{"y":5}}],[0.010193,{"lines":{"5":[["vinipsmaker ",{"fg":6}],["~/vinipsmaker labs ",{"fg":5}],["$                                                ",{}]]},"cursor":{"x":33}}],[0.538994,{"lines":{"5":[["vinipsmaker ",{"fg":6}],["~/vinipsmaker labs ",{"fg":5}],["$ ",{}],["g",{"fg":3,"underline":true}],["                                              ",{}]]},"cursor":{"x":34}}],[0.364392,{"lines":{"5":[["vinipsmaker ",{"fg":6}],["~/vinipsmaker labs ",{"fg":5}],["$ ",{}],["g+",{"fg":1,"bold":true}],["                                             ",{}]]},"cursor":{"x":35}}],[0.130827,{"lines":{"5":[["vinipsmaker ",{"fg":6}],["~/vinipsmaker labs ",{"fg":5}],["$ ",{}],["g++",{"fg":2}],["                                            ",{}]]},"cursor":{"x":36}}],[0.366505,{"cursor":{"x":37}}],[0.645746,{"lines":{"5":[["vinipsmaker ",{"fg":6}],["~/vinipsmaker labs ",{"fg":5}],["$ ",{}],["g++",{"fg":2}],[" -                                          ",{}]]},"cursor":{"x":38}}],[0.116245,{"lines":{"5":[["vinipsmaker ",{"fg":6}],["~/vinipsmaker labs ",{"fg":5}],["$ ",{}],["g++",{"fg":2}],[" -g                                         ",{}]]},"cursor":{"x":39}}],[0.146095,{"cursor":{"x":40}}],[0.165295,{"lines":{"5":[["vinipsmaker ",{"fg":6}],["~/vinipsmaker labs ",{"fg":5}],["$ ",{}],["g++",{"fg":2}],[" -g ",{}],["c",{"underline":true}],["                                       ",{}]]},"cursor":{"x":41}}],[0.08963500000000001,{"lines":{"5":[["vinipsmaker ",{"fg":6}],["~/vinipsmaker labs ",{"fg":5}],["$ ",{}],["g++",{"fg":2}],[" -g ",{}],["cl",{"underline":true}],["                                      ",{}]]},"cursor":{"x":42}}],[0.07773099999999999,{"lines":{"5":[["vinipsmaker ",{"fg":6}],["~/vinipsmaker labs ",{"fg":5}],["$ ",{}],["g++",{"fg":2}],[" -g ",{}],["cli",{"underline":true}],["                                     ",{}]]},"cursor":{"x":43}}],[0.168104,{"lines":{"5":[["vinipsmaker ",{"fg":6}],["~/vinipsmaker labs ",{"fg":5}],["$ ",{}],["g++",{"fg":2}],[" -g ",{}],["clientes.cpp",{"underline":true}],["                            ",{}]]},"cursor":{"x":53}}],[0.66948,{"cursor":{"x":0,"y":6}}],[3.572623,{}],[0.007293,{"lines":{"6":[["vinipsmaker ",{"fg":6}],["~/vinipsmaker labs ",{"fg":5}],["$                                                ",{}]]},"cursor":{"x":33}}],[0.574354,{"lines":{"6":[["vinipsmaker ",{"fg":6}],["~/vinipsmaker labs ",{"fg":5}],["$ ",{}],["g",{"fg":3,"underline":true}],["                                              ",{}]]},"cursor":{"x":34}}],[0.126888,{"lines":{"6":[["vinipsmaker ",{"fg":6}],["~/vinipsmaker labs ",{"fg":5}],["$ ",{}],["gd",{"fg":1,"bold":true}],["                                             ",{}]]},"cursor":{"x":35}}],[0.108132,{"lines":{"6":[["vinipsmaker ",{"fg":6}],["~/vinipsmaker labs ",{"fg":5}],["$ ",{}],["gdb",{"fg":2}],["                                            ",{}]]},"cursor":{"x":36}}],[0.165186,{"cursor":{"x":37}}],[0.141622,{"lines":{"6":[["vinipsmaker ",{"fg":6}],["~/vinipsmaker labs ",{"fg":5}],["$ ",{}],["gdb",{"fg":2}],[" ",{}],["a",{"underline":true}],["                                          ",{}]]},"cursor":{"x":38}}],[0.119954,{"lines":{"6":[["vinipsmaker ",{"fg":6}],["~/vinipsmaker labs ",{"fg":5}],["$ ",{}],["gdb",{"fg":2}],[" ",{}],["a.",{"underline":true}],["                                         ",{}]]},"cursor":{"x":39}}],[0.306539,{"lines":{"6":[["vinipsmaker ",{"fg":6}],["~/vinipsmaker labs ",{"fg":5}],["$ ",{}],["gdb",{"fg":2}],[" ",{}],["a.o",{"underline":true}],["                                        ",{}]]},"cursor":{"x":40}}],[0.164043,{"lines":{"6":[["vinipsmaker ",{"fg":6}],["~/vinipsmaker labs ",{"fg":5}],["$ ",{}],["gdb",{"fg":2}],[" ",{}],["a.ou",{"underline":true}],["                                       ",{}]]},"cursor":{"x":41}}],[0.137078,{"lines":{"6":[["vinipsmaker ",{"fg":6}],["~/vinipsmaker labs ",{"fg":5}],["$ ",{}],["gdb",{"fg":2}],[" ",{}],["a.out",{"underline":true}],["                                      ",{}]]},"cursor":{"x":42}}],[0.589735,{"cursor":{"x":0,"y":7}}],[1.125157,{"lines":{"7":[["GNU gdb (GDB) 7.7                                                               ",{}]],"8":[["Copyright (C) 2014 Free Software Foundation, Inc.                               ",{}]],"9":[["License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>   ",{}]],"10":[["This is free software: you are free to change and redistribute it.              ",{}]]},"cursor":{"x":66,"y":10}}],[0.000401,{"lines":{"11":[["There is NO WARRANTY, to the extent permitted by law.  Type \"show copying\"      ",{}]],"12":[["and \"show warranty\" for details.                                                ",{}]],"13":[["This GDB was configured as \"i686-pc-linux-gnu\".                                 ",{}]],"14":[["Type \"show configuration\" for configuration details.                            ",{}]],"15":[["For bug reporting instructions, please see:                                     ",{}]],"16":[["<http://www.gnu.org/software/gdb/bugs/>.                                        ",{}]],"17":[["Find the GDB manual and other documentation resources online at:                ",{}]],"18":[["<http://www.gnu.org/software/gdb/documentation/>.                               ",{}]],"19":[["For help, type \"help\".                                                          ",{}]],"20":[["Type \"apropos word\" to search for commands related to \"word\"...                 ",{}]]},"cursor":{"x":0,"y":21}}],[0.020262,{"lines":{"21":[["Reading symbols from a.out...                                                   ",{}]]},"cursor":{"x":29}}],[0.025254,{"lines":{"21":[["Reading symbols from a.out...done.                                              ",{}]]},"cursor":{"x":0,"y":22}}],[0.028784,{"lines":{"22":[["(gdb)                                                                           ",{}]]},"cursor":{"x":6}}],[0.684979,{"lines":{"22":[["(gdb) r                                                                         ",{}]]},"cursor":{"x":7}}],[0.129802,{"lines":{"22":[["(gdb) ru                                                                        ",{}]]},"cursor":{"x":8}}],[0.054168,{"lines":{"22":[["(gdb) run                                                                       ",{}]]},"cursor":{"x":9}}],[0.519101,{"lines":{"0":[["%                                                                               ",{}]],"1":[["I never pray before meals -- my mom's a good cook.                              ",{}]],"2":[["vinipsmaker ",{"fg":6}],["~/vinipsmaker labs ",{"fg":5}],["$ ",{}],["ls",{"fg":2}],["                                             ",{}]],"3":[["clientes.cpp                                                                    ",{}]],"4":[["vinipsmaker ",{"fg":6}],["~/vinipsmaker labs ",{"fg":5}],["$ ",{}],["g++",{"fg":2}],[" -g ",{}],["clientes.cpp",{"underline":true}],["                            ",{}]],"5":[["vinipsmaker ",{"fg":6}],["~/vinipsmaker labs ",{"fg":5}],["$ ",{}],["gdb",{"fg":2}],[" ",{}],["a.out",{"underline":true}],["                                      ",{}]],"6":[["GNU gdb (GDB) 7.7                                                               ",{}]],"7":[["Copyright (C) 2014 Free Software Foundation, Inc.                               ",{}]],"8":[["License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>   ",{}]],"9":[["This is free software: you are free to change and redistribute it.              ",{}]],"10":[["There is NO WARRANTY, to the extent permitted by law.  Type \"show copying\"      ",{}]],"11":[["and \"show warranty\" for details.                                                ",{}]],"12":[["This GDB was configured as \"i686-pc-linux-gnu\".                                 ",{}]],"13":[["Type \"show configuration\" for configuration details.                            ",{}]],"14":[["For bug reporting instructions, please see:                                     ",{}]],"15":[["<http://www.gnu.org/software/gdb/bugs/>.                                        ",{}]],"16":[["Find the GDB manual and other documentation resources online at:                ",{}]],"17":[["<http://www.gnu.org/software/gdb/documentation/>.                               ",{}]],"18":[["For help, type \"help\".                                                          ",{}]],"19":[["Type \"apropos word\" to search for commands related to \"word\"...                 ",{}]],"20":[["Reading symbols from a.out...done.                                              ",{}]],"21":[["(gdb) run                                                                       ",{}]],"22":[["Starting program: /home/vinipsmaker/vinipsmaker labs/a.out                      ",{}]]},"cursor":{"x":0,"y":23}}],[0.107143,{"lines":{"0":[["vinipsmaker ",{"fg":6}],["~/vinipsmaker labs ",{"fg":5}],["$ ",{}],["ls",{"fg":2}],["                                             ",{}]],"1":[["clientes.cpp                                                                    ",{}]],"2":[["vinipsmaker ",{"fg":6}],["~/vinipsmaker labs ",{"fg":5}],["$ ",{}],["g++",{"fg":2}],[" -g ",{}],["clientes.cpp",{"underline":true}],["                            ",{}]],"3":[["vinipsmaker ",{"fg":6}],["~/vinipsmaker labs ",{"fg":5}],["$ ",{}],["gdb",{"fg":2}],[" ",{}],["a.out",{"underline":true}],["                                      ",{}]],"4":[["GNU gdb (GDB) 7.7                                                               ",{}]],"5":[["Copyright (C) 2014 Free Software Foundation, Inc.                               ",{}]],"6":[["License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>   ",{}]],"7":[["This is free software: you are free to change and redistribute it.              ",{}]],"8":[["There is NO WARRANTY, to the extent permitted by law.  Type \"show copying\"      ",{}]],"9":[["and \"show warranty\" for details.                                                ",{}]],"10":[["This GDB was configured as \"i686-pc-linux-gnu\".                                 ",{}]],"11":[["Type \"show configuration\" for configuration details.                            ",{}]],"12":[["For bug reporting instructions, please see:                                     ",{}]],"13":[["<http://www.gnu.org/software/gdb/bugs/>.                                        ",{}]],"14":[["Find the GDB manual and other documentation resources online at:                ",{}]],"15":[["<http://www.gnu.org/software/gdb/documentation/>.                               ",{}]],"16":[["For help, type \"help\".                                                          ",{}]],"17":[["Type \"apropos word\" to search for commands related to \"word\"...                 ",{}]],"18":[["Reading symbols from a.out...done.                                              ",{}]],"19":[["(gdb) run                                                                       ",{}]],"20":[["Starting program: /home/vinipsmaker/vinipsmaker labs/a.out                      ",{}]],"21":[["warning: Could not load shared library symbols for linux-gate.so.1.             ",{}]],"22":[["Do you need \"set solib-search-path\" or \"set sysroot\"?                           ",{}]]}}],[0.058908,{"lines":{"0":[["GNU gdb (GDB) 7.7                                                               ",{}]],"1":[["Copyright (C) 2014 Free Software Foundation, Inc.                               ",{}]],"2":[["License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>   ",{}]],"3":[["This is free software: you are free to change and redistribute it.              ",{}]],"4":[["There is NO WARRANTY, to the extent permitted by law.  Type \"show copying\"      ",{}]],"5":[["and \"show warranty\" for details.                                                ",{}]],"6":[["This GDB was configured as \"i686-pc-linux-gnu\".                                 ",{}]],"7":[["Type \"show configuration\" for configuration details.                            ",{}]],"8":[["For bug reporting instructions, please see:                                     ",{}]],"9":[["<http://www.gnu.org/software/gdb/bugs/>.                                        ",{}]],"10":[["Find the GDB manual and other documentation resources online at:                ",{}]],"11":[["<http://www.gnu.org/software/gdb/documentation/>.                               ",{}]],"12":[["For help, type \"help\".                                                          ",{}]],"13":[["Type \"apropos word\" to search for commands related to \"word\"...                 ",{}]],"14":[["Reading symbols from a.out...done.                                              ",{}]],"15":[["(gdb) run                                                                       ",{}]],"16":[["Starting program: /home/vinipsmaker/vinipsmaker labs/a.out                      ",{}]],"17":[["warning: Could not load shared library symbols for linux-gate.so.1.             ",{}]],"18":[["Do you need \"set solib-search-path\" or \"set sysroot\"?                           ",{}]],"19":[["warning: File \"/usr/lib/libstdc++.so.6.0.19-gdb.py\" auto-loading has been declin",{}]],"20":[["ed by your `auto-load safe-path' set to \"$debugdir:$datadir/auto-load\".         ",{}]],"21":[["To enable execution of this file add                                            ",{}]],"22":[["        add-auto-load-safe-path /usr/lib/libstdc++.so.6.0.19-gdb.py             ",{}]]}}],[0.000113,{"lines":{"0":[["Type \"show configuration\" for configuration details.                            ",{}]],"1":[["For bug reporting instructions, please see:                                     ",{}]],"2":[["<http://www.gnu.org/software/gdb/bugs/>.                                        ",{}]],"3":[["Find the GDB manual and other documentation resources online at:                ",{}]],"4":[["<http://www.gnu.org/software/gdb/documentation/>.                               ",{}]],"5":[["For help, type \"help\".                                                          ",{}]],"6":[["Type \"apropos word\" to search for commands related to \"word\"...                 ",{}]],"7":[["Reading symbols from a.out...done.                                              ",{}]],"8":[["(gdb) run                                                                       ",{}]],"9":[["Starting program: /home/vinipsmaker/vinipsmaker labs/a.out                      ",{}]],"10":[["warning: Could not load shared library symbols for linux-gate.so.1.             ",{}]],"11":[["Do you need \"set solib-search-path\" or \"set sysroot\"?                           ",{}]],"12":[["warning: File \"/usr/lib/libstdc++.so.6.0.19-gdb.py\" auto-loading has been declin",{}]],"13":[["ed by your `auto-load safe-path' set to \"$debugdir:$datadir/auto-load\".         ",{}]],"14":[["To enable execution of this file add                                            ",{}]],"15":[["        add-auto-load-safe-path /usr/lib/libstdc++.so.6.0.19-gdb.py             ",{}]],"16":[["line to your configuration file \"/home/vinipsmaker/.gdbinit\".                   ",{}]],"17":[["To completely disable this security protection add                              ",{}]],"18":[["        set auto-load safe-path /                                               ",{}]],"19":[["line to your configuration file \"/home/vinipsmaker/.gdbinit\".                   ",{}]],"20":[["For more information about this security protection see the                     ",{}]],"21":[["\"Auto-loading safe path\" section in the GDB manual.  E.g., run from the shell:  ",{}]],"22":[["        info \"(gdb)Auto-loading safe path\"                                      ",{}]]}}],[0.060821,{"lines":{"0":[["For help, type \"help\".                                                          ",{}]],"1":[["Type \"apropos word\" to search for commands related to \"word\"...                 ",{}]],"2":[["Reading symbols from a.out...done.                                              ",{}]],"3":[["(gdb) run                                                                       ",{}]],"4":[["Starting program: /home/vinipsmaker/vinipsmaker labs/a.out                      ",{}]],"5":[["warning: Could not load shared library symbols for linux-gate.so.1.             ",{}]],"6":[["Do you need \"set solib-search-path\" or \"set sysroot\"?                           ",{}]],"7":[["warning: File \"/usr/lib/libstdc++.so.6.0.19-gdb.py\" auto-loading has been declin",{}]],"8":[["ed by your `auto-load safe-path' set to \"$debugdir:$datadir/auto-load\".         ",{}]],"9":[["To enable execution of this file add                                            ",{}]],"10":[["        add-auto-load-safe-path /usr/lib/libstdc++.so.6.0.19-gdb.py             ",{}]],"11":[["line to your configuration file \"/home/vinipsmaker/.gdbinit\".                   ",{}]],"12":[["To completely disable this security protection add                              ",{}]],"13":[["        set auto-load safe-path /                                               ",{}]],"14":[["line to your configuration file \"/home/vinipsmaker/.gdbinit\".                   ",{}]],"15":[["For more information about this security protection see the                     ",{}]],"16":[["\"Auto-loading safe path\" section in the GDB manual.  E.g., run from the shell:  ",{}]],"17":[["        info \"(gdb)Auto-loading safe path\"                                      ",{}]],"18":[["Opções:                                                                         ",{}]],"19":[[" 1 - Ler clientes                                                               ",{}]],"20":[[" 2 - Cadastrar cliente                                                          ",{}]],"21":[[" 3 - Detalhar cliente                                                           ",{}]],"22":[[" Q - Sair                                                                       ",{}]]}}],[1.027235,{"lines":{"23":[["1                                                                               ",{}]]},"cursor":{"x":1}}],[0.218227,{"lines":{"0":[["Type \"apropos word\" to search for commands related to \"word\"...                 ",{}]],"1":[["Reading symbols from a.out...done.                                              ",{}]],"2":[["(gdb) run                                                                       ",{}]],"3":[["Starting program: /home/vinipsmaker/vinipsmaker labs/a.out                      ",{}]],"4":[["warning: Could not load shared library symbols for linux-gate.so.1.             ",{}]],"5":[["Do you need \"set solib-search-path\" or \"set sysroot\"?                           ",{}]],"6":[["warning: File \"/usr/lib/libstdc++.so.6.0.19-gdb.py\" auto-loading has been declin",{}]],"7":[["ed by your `auto-load safe-path' set to \"$debugdir:$datadir/auto-load\".         ",{}]],"8":[["To enable execution of this file add                                            ",{}]],"9":[["        add-auto-load-safe-path /usr/lib/libstdc++.so.6.0.19-gdb.py             ",{}]],"10":[["line to your configuration file \"/home/vinipsmaker/.gdbinit\".                   ",{}]],"11":[["To completely disable this security protection add                              ",{}]],"12":[["        set auto-load safe-path /                                               ",{}]],"13":[["line to your configuration file \"/home/vinipsmaker/.gdbinit\".                   ",{}]],"14":[["For more information about this security protection see the                     ",{}]],"15":[["\"Auto-loading safe path\" section in the GDB manual.  E.g., run from the shell:  ",{}]],"16":[["        info \"(gdb)Auto-loading safe path\"                                      ",{}]],"17":[["Opções:                                                                         ",{}]],"18":[[" 1 - Ler clientes                                                               ",{}]],"19":[[" 2 - Cadastrar cliente                                                          ",{}]],"20":[[" 3 - Detalhar cliente                                                           ",{}]],"21":[[" Q - Sair                                                                       ",{}]],"22":[["1                                                                               ",{}]],"23":[["                                                                                ",{}]]},"cursor":{"x":0}}],[0.000159,{"lines":{"0":[["warning: File \"/usr/lib/libstdc++.so.6.0.19-gdb.py\" auto-loading has been declin",{}]],"1":[["ed by your `auto-load safe-path' set to \"$debugdir:$datadir/auto-load\".         ",{}]],"2":[["To enable execution of this file add                                            ",{}]],"3":[["        add-auto-load-safe-path /usr/lib/libstdc++.so.6.0.19-gdb.py             ",{}]],"4":[["line to your configuration file \"/home/vinipsmaker/.gdbinit\".                   ",{}]],"5":[["To completely disable this security protection add                              ",{}]],"6":[["        set auto-load safe-path /                                               ",{}]],"7":[["line to your configuration file \"/home/vinipsmaker/.gdbinit\".                   ",{}]],"8":[["For more information about this security protection see the                     ",{}]],"9":[["\"Auto-loading safe path\" section in the GDB manual.  E.g., run from the shell:  ",{}]],"10":[["        info \"(gdb)Auto-loading safe path\"                                      ",{}]],"11":[["Opções:                                                                         ",{}]],"12":[[" 1 - Ler clientes                                                               ",{}]],"13":[[" 2 - Cadastrar cliente                                                          ",{}]],"14":[[" 3 - Detalhar cliente                                                           ",{}]],"15":[[" Q - Sair                                                                       ",{}]],"16":[["1                                                                               ",{}]],"17":[["Nenhum cliente cadastrado                                                       ",{}]],"18":[["Opções:                                                                         ",{}]],"19":[[" 1 - Ler clientes                                                               ",{}]],"20":[[" 2 - Cadastrar cliente                                                          ",{}]],"21":[[" 3 - Detalhar cliente                                                           ",{}]],"22":[[" Q - Sair                                                                       ",{}]]}}],[2.864771,{"lines":{"23":[["2                                                                               ",{}]]},"cursor":{"x":1}}],[0.525251,{"lines":{"0":[["ed by your `auto-load safe-path' set to \"$debugdir:$datadir/auto-load\".         ",{}]],"1":[["To enable execution of this file add                                            ",{}]],"2":[["        add-auto-load-safe-path /usr/lib/libstdc++.so.6.0.19-gdb.py             ",{}]],"3":[["line to your configuration file \"/home/vinipsmaker/.gdbinit\".                   ",{}]],"4":[["To completely disable this security protection add                              ",{}]],"5":[["        set auto-load safe-path /                                               ",{}]],"6":[["line to your configuration file \"/home/vinipsmaker/.gdbinit\".                   ",{}]],"7":[["For more information about this security protection see the                     ",{}]],"8":[["\"Auto-loading safe path\" section in the GDB manual.  E.g., run from the shell:  ",{}]],"9":[["        info \"(gdb)Auto-loading safe path\"                                      ",{}]],"10":[["Opções:                                                                         ",{}]],"11":[[" 1 - Ler clientes                                                               ",{}]],"12":[[" 2 - Cadastrar cliente                                                          ",{}]],"13":[[" 3 - Detalhar cliente                                                           ",{}]],"14":[[" Q - Sair                                                                       ",{}]],"15":[["1                                                                               ",{}]],"16":[["Nenhum cliente cadastrado                                                       ",{}]],"17":[["Opções:                                                                         ",{}]],"18":[[" 1 - Ler clientes                                                               ",{}]],"19":[[" 2 - Cadastrar cliente                                                          ",{}]],"20":[[" 3 - Detalhar cliente                                                           ",{}]],"21":[[" Q - Sair                                                                       ",{}]],"22":[["2                                                                               ",{}]],"23":[["                                                                                ",{}]]},"cursor":{"x":0}}],[0.000209,{"lines":{"0":[["To enable execution of this file add                                            ",{}]],"1":[["        add-auto-load-safe-path /usr/lib/libstdc++.so.6.0.19-gdb.py             ",{}]],"2":[["line to your configuration file \"/home/vinipsmaker/.gdbinit\".                   ",{}]],"3":[["To completely disable this security protection add                              ",{}]],"4":[["        set auto-load safe-path /                                               ",{}]],"5":[["line to your configuration file \"/home/vinipsmaker/.gdbinit\".                   ",{}]],"6":[["For more information about this security protection see the                     ",{}]],"7":[["\"Auto-loading safe path\" section in the GDB manual.  E.g., run from the shell:  ",{}]],"8":[["        info \"(gdb)Auto-loading safe path\"                                      ",{}]],"9":[["Opções:                                                                         ",{}]],"10":[[" 1 - Ler clientes                                                               ",{}]],"11":[[" 2 - Cadastrar cliente                                                          ",{}]],"12":[[" 3 - Detalhar cliente                                                           ",{}]],"13":[[" Q - Sair                                                                       ",{}]],"14":[["1                                                                               ",{}]],"15":[["Nenhum cliente cadastrado                                                       ",{}]],"16":[["Opções:                                                                         ",{}]],"17":[[" 1 - Ler clientes                                                               ",{}]],"18":[[" 2 - Cadastrar cliente                                                          ",{}]],"19":[[" 3 - Detalhar cliente                                                           ",{}]],"20":[[" Q - Sair                                                                       ",{}]],"21":[["2                                                                               ",{}]],"22":[["Digite o nome do cliente:                                                       ",{}]]}}],[0.908087,{"lines":{"23":[["C                                                                               ",{}]]},"cursor":{"x":1}}],[0.33448,{"lines":{"23":[["Ch                                                                              ",{}]]},"cursor":{"x":2}}],[0.216798,{"lines":{"23":[["Chu                                                                             ",{}]]},"cursor":{"x":3}}],[0.247092,{"lines":{"23":[["Chuc                                                                            ",{}]]},"cursor":{"x":4}}],[0.148728,{"lines":{"23":[["Chuck                                                                           ",{}]]},"cursor":{"x":5}}],[0.9172169999999999,{"lines":{"0":[["        add-auto-load-safe-path /usr/lib/libstdc++.so.6.0.19-gdb.py             ",{}]],"1":[["line to your configuration file \"/home/vinipsmaker/.gdbinit\".                   ",{}]],"2":[["To completely disable this security protection add                              ",{}]],"3":[["        set auto-load safe-path /                                               ",{}]],"4":[["line to your configuration file \"/home/vinipsmaker/.gdbinit\".                   ",{}]],"5":[["For more information about this security protection see the                     ",{}]],"6":[["\"Auto-loading safe path\" section in the GDB manual.  E.g., run from the shell:  ",{}]],"7":[["        info \"(gdb)Auto-loading safe path\"                                      ",{}]],"8":[["Opções:                                                                         ",{}]],"9":[[" 1 - Ler clientes                                                               ",{}]],"10":[[" 2 - Cadastrar cliente                                                          ",{}]],"11":[[" 3 - Detalhar cliente                                                           ",{}]],"12":[[" Q - Sair                                                                       ",{}]],"13":[["1                                                                               ",{}]],"14":[["Nenhum cliente cadastrado                                                       ",{}]],"15":[["Opções:                                                                         ",{}]],"16":[[" 1 - Ler clientes                                                               ",{}]],"17":[[" 2 - Cadastrar cliente                                                          ",{}]],"18":[[" 3 - Detalhar cliente                                                           ",{}]],"19":[[" Q - Sair                                                                       ",{}]],"20":[["2                                                                               ",{}]],"21":[["Digite o nome do cliente:                                                       ",{}]],"22":[["Chuck                                                                           ",{}]],"23":[["                                                                                ",{}]]},"cursor":{"x":0}}],[0.000495,{"lines":{"0":[["\"Auto-loading safe path\" section in the GDB manual.  E.g., run from the shell:  ",{}]],"1":[["        info \"(gdb)Auto-loading safe path\"                                      ",{}]],"2":[["Opções:                                                                         ",{}]],"3":[[" 1 - Ler clientes                                                               ",{}]],"4":[[" 2 - Cadastrar cliente                                                          ",{}]],"5":[[" 3 - Detalhar cliente                                                           ",{}]],"6":[[" Q - Sair                                                                       ",{}]],"7":[["1                                                                               ",{}]],"8":[["Nenhum cliente cadastrado                                                       ",{}]],"9":[["Opções:                                                                         ",{}]],"10":[[" 1 - Ler clientes                                                               ",{}]],"11":[[" 2 - Cadastrar cliente                                                          ",{}]],"12":[[" 3 - Detalhar cliente                                                           ",{}]],"13":[[" Q - Sair                                                                       ",{}]],"14":[["2                                                                               ",{}]],"15":[["Digite o nome do cliente:                                                       ",{}]],"16":[["Chuck                                                                           ",{}]],"17":[["Cliente \"Chuck\" inserido com sucesso                                            ",{}]],"18":[["Opções:                                                                         ",{}]],"19":[[" 1 - Ler clientes                                                               ",{}]],"20":[[" 2 - Cadastrar cliente                                                          ",{}]],"21":[[" 3 - Detalhar cliente                                                           ",{}]],"22":[[" Q - Sair                                                                       ",{}]]}}],[0.642711,{"lines":{"23":[["1                                                                               ",{}]]},"cursor":{"x":1}}],[0.616371,{"lines":{"0":[["Nenhum cliente cadastrado                                                       ",{}]],"1":[["Opções:                                                                         ",{}]],"2":[[" 1 - Ler clientes                                                               ",{}]],"3":[[" 2 - Cadastrar cliente                                                          ",{}]],"4":[[" 3 - Detalhar cliente                                                           ",{}]],"5":[[" Q - Sair                                                                       ",{}]],"6":[["2                                                                               ",{}]],"7":[["Digite o nome do cliente:                                                       ",{}]],"8":[["Chuck                                                                           ",{}]],"9":[["Cliente \"Chuck\" inserido com sucesso                                            ",{}]],"10":[["Opções:                                                                         ",{}]],"11":[[" 1 - Ler clientes                                                               ",{}]],"12":[[" 2 - Cadastrar cliente                                                          ",{}]],"13":[[" 3 - Detalhar cliente                                                           ",{}]],"14":[[" Q - Sair                                                                       ",{}]],"15":[["1                                                                               ",{}]],"16":[["Clientes:                                                                       ",{}]],"17":[["  Nome: Chuck                                                                   ",{}]],"18":[["                                                                                ",{}]],"19":[["Program received signal SIGSEGV, Segmentation fault.                            ",{}]],"20":[["0x08048d35 in ler_clientes () at clientes.cpp:42                                ",{}]],"21":[["42                  cout << \"  Primeira compra: \" << it->compras->preco  << endl",{}]],"22":[[";                                                                               ",{}]],"23":[["(gdb)                                                                           ",{}]]},"cursor":{"x":6}}],[2.407507,{"lines":{"23":[["(gdb) b                                                                         ",{}]]},"cursor":{"x":7}}],[0.15274,{"lines":{"23":[["(gdb) ba                                                                        ",{}]]},"cursor":{"x":8}}],[0.125163,{"lines":{"23":[["(gdb) bac                                                                       ",{}]]},"cursor":{"x":9}}],[0.139483,{"lines":{"23":[["(gdb) back                                                                      ",{}]]},"cursor":{"x":10}}],[0.172665,{"lines":{"23":[["(gdb) backt                                                                     ",{}]]},"cursor":{"x":11}}],[0.055732,{"lines":{"23":[["(gdb) backtr                                                                    ",{}]]},"cursor":{"x":12}}],[0.206223,{"lines":{"23":[["(gdb) backtra                                                                   ",{}]]},"cursor":{"x":13}}],[0.108687,{"lines":{"23":[["(gdb) backtrac                                                                  ",{}]]},"cursor":{"x":14}}],[0.139393,{"lines":{"23":[["(gdb) backtrace                                                                 ",{}]]},"cursor":{"x":15}}],[1.055469,{"lines":{"0":[[" 2 - Cadastrar cliente                                                          ",{}]],"1":[[" 3 - Detalhar cliente                                                           ",{}]],"2":[[" Q - Sair                                                                       ",{}]],"3":[["2                                                                               ",{}]],"4":[["Digite o nome do cliente:                                                       ",{}]],"5":[["Chuck                                                                           ",{}]],"6":[["Cliente \"Chuck\" inserido com sucesso                                            ",{}]],"7":[["Opções:                                                                         ",{}]],"8":[[" 1 - Ler clientes                                                               ",{}]],"9":[[" 2 - Cadastrar cliente                                                          ",{}]],"10":[[" 3 - Detalhar cliente                                                           ",{}]],"11":[[" Q - Sair                                                                       ",{}]],"12":[["1                                                                               ",{}]],"13":[["Clientes:                                                                       ",{}]],"14":[["  Nome: Chuck                                                                   ",{}]],"15":[["                                                                                ",{}]],"16":[["Program received signal SIGSEGV, Segmentation fault.                            ",{}]],"17":[["0x08048d35 in ler_clientes () at clientes.cpp:42                                ",{}]],"18":[["42                  cout << \"  Primeira compra: \" << it->compras->preco  << endl",{}]],"19":[[";                                                                               ",{}]],"20":[["(gdb) backtrace                                                                 ",{}]],"21":[["#0  0x08048d35 in ler_clientes () at clientes.cpp:42                            ",{}]],"22":[["#1  0x08048ef5 in main () at clientes.cpp:68                                    ",{}]],"23":[["(gdb)                                                                           ",{}]]},"cursor":{"x":6}}],[0.661644,{"lines":{"23":[["(gdb) f                                                                         ",{}]]},"cursor":{"x":7}}],[0.16978,{"lines":{"23":[["(gdb) fr                                                                        ",{}]]},"cursor":{"x":8}}],[0.217644,{"lines":{"23":[["(gdb) frm                                                                       ",{}]]},"cursor":{"x":9}}],[0.099428,{"lines":{"23":[["(gdb) frma                                                                      ",{}]]},"cursor":{"x":10}}],[0.271624,{"lines":{"23":[["(gdb) frmae                                                                     ",{}]]},"cursor":{"x":11}}],[0.346749,{"lines":{"23":[["(gdb) frma                                                                      ",{}]]},"cursor":{"x":10}}],[0.129718,{"lines":{"23":[["(gdb) frm                                                                       ",{}]]},"cursor":{"x":9}}],[0.129649,{"lines":{"23":[["(gdb) fr                                                                        ",{}]]},"cursor":{"x":8}}],[0.306556,{"lines":{"23":[["(gdb) fra                                                                       ",{}]]},"cursor":{"x":9}}],[0.203604,{"lines":{"23":[["(gdb) fram                                                                      ",{}]]},"cursor":{"x":10}}],[0.114937,{"lines":{"23":[["(gdb) frame                                                                     ",{}]]},"cursor":{"x":11}}],[0.183022,{"cursor":{"x":12}}],[0.213666,{"lines":{"23":[["(gdb) frame 0                                                                   ",{}]]},"cursor":{"x":13}}],[1.053999,{"lines":{"0":[["Digite o nome do cliente:                                                       ",{}]],"1":[["Chuck                                                                           ",{}]],"2":[["Cliente \"Chuck\" inserido com sucesso                                            ",{}]],"3":[["Opções:                                                                         ",{}]],"4":[[" 1 - Ler clientes                                                               ",{}]],"5":[[" 2 - Cadastrar cliente                                                          ",{}]],"6":[[" 3 - Detalhar cliente                                                           ",{}]],"7":[[" Q - Sair                                                                       ",{}]],"8":[["1                                                                               ",{}]],"9":[["Clientes:                                                                       ",{}]],"10":[["  Nome: Chuck                                                                   ",{}]],"11":[["                                                                                ",{}]],"12":[["Program received signal SIGSEGV, Segmentation fault.                            ",{}]],"13":[["0x08048d35 in ler_clientes () at clientes.cpp:42                                ",{}]],"14":[["42                  cout << \"  Primeira compra: \" << it->compras->preco  << endl",{}]],"15":[[";                                                                               ",{}]],"16":[["(gdb) backtrace                                                                 ",{}]],"17":[["#0  0x08048d35 in ler_clientes () at clientes.cpp:42                            ",{}]],"18":[["#1  0x08048ef5 in main () at clientes.cpp:68                                    ",{}]],"19":[["(gdb) frame 0                                                                   ",{}]],"20":[["#0  0x08048d35 in ler_clientes () at clientes.cpp:42                            ",{}]],"21":[["42                  cout << \"  Primeira compra: \" << it->compras->preco  << endl",{}]],"22":[[";                                                                               ",{}]],"23":[["(gdb)                                                                           ",{}]]},"cursor":{"x":6}}],[0.570116,{"lines":{"23":[["(gdb) l                                                                         ",{}]]},"cursor":{"x":7}}],[0.111439,{"lines":{"23":[["(gdb) li                                                                        ",{}]]},"cursor":{"x":8}}],[0.08099099999999999,{"lines":{"23":[["(gdb) lis                                                                       ",{}]]},"cursor":{"x":9}}],[0.24155,{"lines":{"23":[["(gdb) list                                                                      ",{}]]},"cursor":{"x":10}}],[0.940369,{"lines":{"0":[["0x08048d35 in ler_clientes () at clientes.cpp:42                                ",{}]],"1":[["42                  cout << \"  Primeira compra: \" << it->compras->preco  << endl",{}]],"2":[[";                                                                               ",{}]],"3":[["(gdb) backtrace                                                                 ",{}]],"4":[["#0  0x08048d35 in ler_clientes () at clientes.cpp:42                            ",{}]],"5":[["#1  0x08048ef5 in main () at clientes.cpp:68                                    ",{}]],"6":[["(gdb) frame 0                                                                   ",{}]],"7":[["#0  0x08048d35 in ler_clientes () at clientes.cpp:42                            ",{}]],"8":[["42                  cout << \"  Primeira compra: \" << it->compras->preco  << endl",{}]],"9":[[";                                                                               ",{}]],"10":[["(gdb) list                                                                      ",{}]],"11":[["37          cout << \"Clientes:\" << endl;                                        ",{}]],"12":[["38          for ( vector<Cliente>::iterator it = clientes.begin(), end = cliente",{}]],"13":[["s.end()                                                                         ",{}]],"14":[["39                    ; it != end ; ++it ) {                                    ",{}]],"15":[["40              cout << \"  Nome: \" << it->nome << endl;                         ",{}]],"16":[["41              if ( it->compras )                                              ",{}]],"17":[["42                  cout << \"  Primeira compra: \" << it->compras->preco  << endl",{}]],"18":[[";                                                                               ",{}]],"19":[["43              cout << \" --\" << endl;                                          ",{}]],"20":[["44          }                                                                   ",{}]],"21":[["45      }                                                                       ",{}]],"22":[["46                                                                              ",{}]],"23":[["(gdb)                                                                           ",{}]]},"cursor":{"x":6}}],[0.540326,{"lines":{"23":[["(gdb) p                                                                         ",{}]]},"cursor":{"x":7}}],[0.135003,{"lines":{"23":[["(gdb) pr                                                                        ",{}]]},"cursor":{"x":8}}],[0.151583,{"lines":{"23":[["(gdb) pri                                                                       ",{}]]},"cursor":{"x":9}}],[0.08487500000000001,{"lines":{"23":[["(gdb) prin                                                                      ",{}]]},"cursor":{"x":10}}],[0.124128,{"lines":{"23":[["(gdb) print                                                                     ",{}]]},"cursor":{"x":11}}],[0.133858,{"cursor":{"x":12}}],[0.361142,{"lines":{"23":[["(gdb) print i                                                                   ",{}]]},"cursor":{"x":13}}],[0.154782,{"lines":{"23":[["(gdb) print it                                                                  ",{}]]},"cursor":{"x":14}}],[0.226726,{"lines":{"23":[["(gdb) print it-                                                                 ",{}]]},"cursor":{"x":15}}],[0.559236,{"lines":{"23":[["(gdb) print it->                                                                ",{}]]},"cursor":{"x":16}}],[0.486104,{"lines":{"23":[["(gdb) print it->c                                                               ",{}]]},"cursor":{"x":17}}],[0.08908099999999999,{"lines":{"23":[["(gdb) print it->co                                                              ",{}]]},"cursor":{"x":18}}],[0.049839,{"lines":{"23":[["(gdb) print it->com                                                             ",{}]]},"cursor":{"x":19}}],[0.124066,{"lines":{"23":[["(gdb) print it->comp                                                            ",{}]]},"cursor":{"x":20}}],[0.129129,{"lines":{"23":[["(gdb) print it->compr                                                           ",{}]]},"cursor":{"x":21}}],[0.11407,{"lines":{"23":[["(gdb) print it->compra                                                          ",{}]]},"cursor":{"x":22}}],[0.137635,{"lines":{"23":[["(gdb) print it->compras                                                         ",{}]]},"cursor":{"x":23}}],[0.738553,{"lines":{"0":[["42                  cout << \"  Primeira compra: \" << it->compras->preco  << endl",{}]],"1":[[";                                                                               ",{}]],"2":[["(gdb) backtrace                                                                 ",{}]],"3":[["#0  0x08048d35 in ler_clientes () at clientes.cpp:42                            ",{}]],"4":[["#1  0x08048ef5 in main () at clientes.cpp:68                                    ",{}]],"5":[["(gdb) frame 0                                                                   ",{}]],"6":[["#0  0x08048d35 in ler_clientes () at clientes.cpp:42                            ",{}]],"7":[["42                  cout << \"  Primeira compra: \" << it->compras->preco  << endl",{}]],"8":[[";                                                                               ",{}]],"9":[["(gdb) list                                                                      ",{}]],"10":[["37          cout << \"Clientes:\" << endl;                                        ",{}]],"11":[["38          for ( vector<Cliente>::iterator it = clientes.begin(), end = cliente",{}]],"12":[["s.end()                                                                         ",{}]],"13":[["39                    ; it != end ; ++it ) {                                    ",{}]],"14":[["40              cout << \"  Nome: \" << it->nome << endl;                         ",{}]],"15":[["41              if ( it->compras )                                              ",{}]],"16":[["42                  cout << \"  Primeira compra: \" << it->compras->preco  << endl",{}]],"17":[[";                                                                               ",{}]],"18":[["43              cout << \" --\" << endl;                                          ",{}]],"19":[["44          }                                                                   ",{}]],"20":[["45      }                                                                       ",{}]],"21":[["46                                                                              ",{}]],"22":[["(gdb) print it->compras                                                         ",{}]],"23":[["                                                                                ",{}]]},"cursor":{"x":0}}],[0.037326,{"lines":{"0":[[";                                                                               ",{}]],"1":[["(gdb) backtrace                                                                 ",{}]],"2":[["#0  0x08048d35 in ler_clientes () at clientes.cpp:42                            ",{}]],"3":[["#1  0x08048ef5 in main () at clientes.cpp:68                                    ",{}]],"4":[["(gdb) frame 0                                                                   ",{}]],"5":[["#0  0x08048d35 in ler_clientes () at clientes.cpp:42                            ",{}]],"6":[["42                  cout << \"  Primeira compra: \" << it->compras->preco  << endl",{}]],"7":[[";                                                                               ",{}]],"8":[["(gdb) list                                                                      ",{}]],"9":[["37          cout << \"Clientes:\" << endl;                                        ",{}]],"10":[["38          for ( vector<Cliente>::iterator it = clientes.begin(), end = cliente",{}]],"11":[["s.end()                                                                         ",{}]],"12":[["39                    ; it != end ; ++it ) {                                    ",{}]],"13":[["40              cout << \"  Nome: \" << it->nome << endl;                         ",{}]],"14":[["41              if ( it->compras )                                              ",{}]],"15":[["42                  cout << \"  Primeira compra: \" << it->compras->preco  << endl",{}]],"16":[[";                                                                               ",{}]],"17":[["43              cout << \" --\" << endl;                                          ",{}]],"18":[["44          }                                                                   ",{}]],"19":[["45      }                                                                       ",{}]],"20":[["46                                                                              ",{}]],"21":[["(gdb) print it->compras                                                         ",{}]],"22":[["$1 = (Compra *) 0x1f2c4b0                                                       ",{}]],"23":[["(gdb)                                                                           ",{}]]},"cursor":{"x":6}}],[0.839201,{"lines":{"23":[["(gdb) p                                                                         ",{}]]},"cursor":{"x":7}}],[0.168668,{"lines":{"23":[["(gdb) pr                                                                        ",{}]]},"cursor":{"x":8}}],[0.097577,{"lines":{"23":[["(gdb) pri                                                                       ",{}]]},"cursor":{"x":9}}],[0.081258,{"lines":{"23":[["(gdb) prin                                                                      ",{}]]},"cursor":{"x":10}}],[0.080873,{"lines":{"23":[["(gdb) print                                                                     ",{}]]},"cursor":{"x":11}}],[0.150587,{"cursor":{"x":12}}],[0.373049,{"lines":{"23":[["(gdb) print i                                                                   ",{}]]},"cursor":{"x":13}}],[0.132159,{"lines":{"23":[["(gdb) print it                                                                  ",{}]]},"cursor":{"x":14}}],[0.165381,{"lines":{"23":[["(gdb) print it-                                                                 ",{}]]},"cursor":{"x":15}}],[0.70186,{"lines":{"23":[["(gdb) print it->                                                                ",{}]]},"cursor":{"x":16}}],[0.40031,{"lines":{"23":[["(gdb) print it->c                                                               ",{}]]},"cursor":{"x":17}}],[0.098027,{"lines":{"23":[["(gdb) print it->co                                                              ",{}]]},"cursor":{"x":18}}],[0.06490799999999999,{"lines":{"23":[["(gdb) print it->com                                                             ",{}]]},"cursor":{"x":19}}],[0.150443,{"lines":{"23":[["(gdb) print it->comp                                                            ",{}]]},"cursor":{"x":20}}],[0.057518,{"lines":{"23":[["(gdb) print it->compr                                                           ",{}]]},"cursor":{"x":21}}],[0.148604,{"lines":{"23":[["(gdb) print it->compra                                                          ",{}]]},"cursor":{"x":22}}],[0.071247,{"lines":{"23":[["(gdb) print it->compras                                                         ",{}]]},"cursor":{"x":23}}],[0.415807,{"lines":{"23":[["(gdb) print it->compras-                                                        ",{}]]},"cursor":{"x":24}}],[0.5828680000000001,{"lines":{"23":[["(gdb) print it->compras->                                                       ",{}]]},"cursor":{"x":25}}],[0.406214,{"lines":{"23":[["(gdb) print it->compras->p                                                      ",{}]]},"cursor":{"x":26}}],[0.175872,{"lines":{"23":[["(gdb) print it->compras->pr                                                     ",{}]]},"cursor":{"x":27}}],[0.056476,{"lines":{"23":[["(gdb) print it->compras->pre                                                    ",{}]]},"cursor":{"x":28}}],[0.263464,{"lines":{"23":[["(gdb) print it->compras->prec                                                   ",{}]]},"cursor":{"x":29}}],[0.103025,{"lines":{"23":[["(gdb) print it->compras->preco                                                  ",{}]]},"cursor":{"x":30}}],[0.32809,{"lines":{"0":[["#0  0x08048d35 in ler_clientes () at clientes.cpp:42                            ",{}]],"1":[["#1  0x08048ef5 in main () at clientes.cpp:68                                    ",{}]],"2":[["(gdb) frame 0                                                                   ",{}]],"3":[["#0  0x08048d35 in ler_clientes () at clientes.cpp:42                            ",{}]],"4":[["42                  cout << \"  Primeira compra: \" << it->compras->preco  << endl",{}]],"5":[[";                                                                               ",{}]],"6":[["(gdb) list                                                                      ",{}]],"7":[["37          cout << \"Clientes:\" << endl;                                        ",{}]],"8":[["38          for ( vector<Cliente>::iterator it = clientes.begin(), end = cliente",{}]],"9":[["s.end()                                                                         ",{}]],"10":[["39                    ; it != end ; ++it ) {                                    ",{}]],"11":[["40              cout << \"  Nome: \" << it->nome << endl;                         ",{}]],"12":[["41              if ( it->compras )                                              ",{}]],"13":[["42                  cout << \"  Primeira compra: \" << it->compras->preco  << endl",{}]],"14":[[";                                                                               ",{}]],"15":[["43              cout << \" --\" << endl;                                          ",{}]],"16":[["44          }                                                                   ",{}]],"17":[["45      }                                                                       ",{}]],"18":[["46                                                                              ",{}]],"19":[["(gdb) print it->compras                                                         ",{}]],"20":[["$1 = (Compra *) 0x1f2c4b0                                                       ",{}]],"21":[["(gdb) print it->compras->preco                                                  ",{}]],"22":[["Cannot access memory at address 0x1f2c4b0                                       ",{}]],"23":[["(gdb)                                                                           ",{}]]},"cursor":{"x":6}}],[4.368881,{"lines":{"23":[["(gdb) w                                                                         ",{}]]},"cursor":{"x":7}}],[0.070757,{"lines":{"23":[["(gdb) wa                                                                        ",{}]]},"cursor":{"x":8}}],[0.237098,{"lines":{"23":[["(gdb) wat                                                                       ",{}]]},"cursor":{"x":9}}],[0.263979,{"lines":{"23":[["(gdb) watc                                                                      ",{}]]},"cursor":{"x":10}}],[0.118882,{"lines":{"23":[["(gdb) watch                                                                     ",{}]]},"cursor":{"x":11}}],[0.79218,{"cursor":{"x":12}}],[0.20391,{"lines":{"23":[["(gdb) watch c                                                                   ",{}]]},"cursor":{"x":13}}],[0.11378,{"lines":{"23":[["(gdb) watch cl                                                                  ",{}]]},"cursor":{"x":14}}],[0.074333,{"lines":{"23":[["(gdb) watch cli                                                                 ",{}]]},"cursor":{"x":15}}],[0.149603,{"lines":{"23":[["(gdb) watch clie                                                                ",{}]]},"cursor":{"x":16}}],[0.134109,{"lines":{"23":[["(gdb) watch clien                                                               ",{}]]},"cursor":{"x":17}}],[0.055621,{"lines":{"23":[["(gdb) watch client                                                              ",{}]]},"cursor":{"x":18}}],[0.07764699999999999,{"lines":{"23":[["(gdb) watch cliente                                                             ",{}]]},"cursor":{"x":19}}],[0.184547,{"lines":{"23":[["(gdb) watch clientes                                                            ",{}]]},"cursor":{"x":20}}],[1.467723,{"lines":{"0":[["(gdb) frame 0                                                                   ",{}]],"1":[["#0  0x08048d35 in ler_clientes () at clientes.cpp:42                            ",{}]],"2":[["42                  cout << \"  Primeira compra: \" << it->compras->preco  << endl",{}]],"3":[[";                                                                               ",{}]],"4":[["(gdb) list                                                                      ",{}]],"5":[["37          cout << \"Clientes:\" << endl;                                        ",{}]],"6":[["38          for ( vector<Cliente>::iterator it = clientes.begin(), end = cliente",{}]],"7":[["s.end()                                                                         ",{}]],"8":[["39                    ; it != end ; ++it ) {                                    ",{}]],"9":[["40              cout << \"  Nome: \" << it->nome << endl;                         ",{}]],"10":[["41              if ( it->compras )                                              ",{}]],"11":[["42                  cout << \"  Primeira compra: \" << it->compras->preco  << endl",{}]],"12":[[";                                                                               ",{}]],"13":[["43              cout << \" --\" << endl;                                          ",{}]],"14":[["44          }                                                                   ",{}]],"15":[["45      }                                                                       ",{}]],"16":[["46                                                                              ",{}]],"17":[["(gdb) print it->compras                                                         ",{}]],"18":[["$1 = (Compra *) 0x1f2c4b0                                                       ",{}]],"19":[["(gdb) print it->compras->preco                                                  ",{}]],"20":[["Cannot access memory at address 0x1f2c4b0                                       ",{}]],"21":[["(gdb) watch clientes                                                            ",{}]],"22":[["Hardware watchpoint 1: clientes                                                 ",{}]],"23":[["(gdb)                                                                           ",{}]]},"cursor":{"x":6}}],[0.762861,{"lines":{"23":[["(gdb) r                                                                         ",{}]]},"cursor":{"x":7}}],[0.110074,{"lines":{"23":[["(gdb) ru                                                                        ",{}]]},"cursor":{"x":8}}],[0.066708,{"lines":{"23":[["(gdb) run                                                                       ",{}]]},"cursor":{"x":9}}],[0.706022,{"lines":{"0":[["42                  cout << \"  Primeira compra: \" << it->compras->preco  << endl",{}]],"1":[[";                                                                               ",{}]],"2":[["(gdb) list                                                                      ",{}]],"3":[["37          cout << \"Clientes:\" << endl;                                        ",{}]],"4":[["38          for ( vector<Cliente>::iterator it = clientes.begin(), end = cliente",{}]],"5":[["s.end()                                                                         ",{}]],"6":[["39                    ; it != end ; ++it ) {                                    ",{}]],"7":[["40              cout << \"  Nome: \" << it->nome << endl;                         ",{}]],"8":[["41              if ( it->compras )                                              ",{}]],"9":[["42                  cout << \"  Primeira compra: \" << it->compras->preco  << endl",{}]],"10":[[";                                                                               ",{}]],"11":[["43              cout << \" --\" << endl;                                          ",{}]],"12":[["44          }                                                                   ",{}]],"13":[["45      }                                                                       ",{}]],"14":[["46                                                                              ",{}]],"15":[["(gdb) print it->compras                                                         ",{}]],"16":[["$1 = (Compra *) 0x1f2c4b0                                                       ",{}]],"17":[["(gdb) print it->compras->preco                                                  ",{}]],"18":[["Cannot access memory at address 0x1f2c4b0                                       ",{}]],"19":[["(gdb) watch clientes                                                            ",{}]],"20":[["Hardware watchpoint 1: clientes                                                 ",{}]],"21":[["(gdb) run                                                                       ",{}]],"22":[["The program being debugged has been started already.                            ",{}]],"23":[["Start it from the beginning? (y or n)                                           ",{}]]},"cursor":{"x":38}}],[1.187691,{"lines":{"23":[["Start it from the beginning? (y or n) y                                         ",{}]]},"cursor":{"x":39}}],[0.490664,{"lines":{"0":[[";                                                                               ",{}]],"1":[["(gdb) list                                                                      ",{}]],"2":[["37          cout << \"Clientes:\" << endl;                                        ",{}]],"3":[["38          for ( vector<Cliente>::iterator it = clientes.begin(), end = cliente",{}]],"4":[["s.end()                                                                         ",{}]],"5":[["39                    ; it != end ; ++it ) {                                    ",{}]],"6":[["40              cout << \"  Nome: \" << it->nome << endl;                         ",{}]],"7":[["41              if ( it->compras )                                              ",{}]],"8":[["42                  cout << \"  Primeira compra: \" << it->compras->preco  << endl",{}]],"9":[[";                                                                               ",{}]],"10":[["43              cout << \" --\" << endl;                                          ",{}]],"11":[["44          }                                                                   ",{}]],"12":[["45      }                                                                       ",{}]],"13":[["46                                                                              ",{}]],"14":[["(gdb) print it->compras                                                         ",{}]],"15":[["$1 = (Compra *) 0x1f2c4b0                                                       ",{}]],"16":[["(gdb) print it->compras->preco                                                  ",{}]],"17":[["Cannot access memory at address 0x1f2c4b0                                       ",{}]],"18":[["(gdb) watch clientes                                                            ",{}]],"19":[["Hardware watchpoint 1: clientes                                                 ",{}]],"20":[["(gdb) run                                                                       ",{}]],"21":[["The program being debugged has been started already.                            ",{}]],"22":[["Start it from the beginning? (y or n) y                                         ",{}]],"23":[["                                                                                ",{}]]},"cursor":{"x":0}}],[0.002882,{"lines":{"0":[["37          cout << \"Clientes:\" << endl;                                        ",{}]],"1":[["38          for ( vector<Cliente>::iterator it = clientes.begin(), end = cliente",{}]],"2":[["s.end()                                                                         ",{}]],"3":[["39                    ; it != end ; ++it ) {                                    ",{}]],"4":[["40              cout << \"  Nome: \" << it->nome << endl;                         ",{}]],"5":[["41              if ( it->compras )                                              ",{}]],"6":[["42                  cout << \"  Primeira compra: \" << it->compras->preco  << endl",{}]],"7":[[";                                                                               ",{}]],"8":[["43              cout << \" --\" << endl;                                          ",{}]],"9":[["44          }                                                                   ",{}]],"10":[["45      }                                                                       ",{}]],"11":[["46                                                                              ",{}]],"12":[["(gdb) print it->compras                                                         ",{}]],"13":[["$1 = (Compra *) 0x1f2c4b0                                                       ",{}]],"14":[["(gdb) print it->compras->preco                                                  ",{}]],"15":[["Cannot access memory at address 0x1f2c4b0                                       ",{}]],"16":[["(gdb) watch clientes                                                            ",{}]],"17":[["Hardware watchpoint 1: clientes                                                 ",{}]],"18":[["(gdb) run                                                                       ",{}]],"19":[["The program being debugged has been started already.                            ",{}]],"20":[["Start it from the beginning? (y or n) y                                         ",{}]],"21":[["                                                                                ",{}]],"22":[["Starting program: /home/vinipsmaker/vinipsmaker labs/a.out                      ",{}]]}}],[0.023867,{"lines":{"0":[["s.end()                                                                         ",{}]],"1":[["39                    ; it != end ; ++it ) {                                    ",{}]],"2":[["40              cout << \"  Nome: \" << it->nome << endl;                         ",{}]],"3":[["41              if ( it->compras )                                              ",{}]],"4":[["42                  cout << \"  Primeira compra: \" << it->compras->preco  << endl",{}]],"5":[[";                                                                               ",{}]],"6":[["43              cout << \" --\" << endl;                                          ",{}]],"7":[["44          }                                                                   ",{}]],"8":[["45      }                                                                       ",{}]],"9":[["46                                                                              ",{}]],"10":[["(gdb) print it->compras                                                         ",{}]],"11":[["$1 = (Compra *) 0x1f2c4b0                                                       ",{}]],"12":[["(gdb) print it->compras->preco                                                  ",{}]],"13":[["Cannot access memory at address 0x1f2c4b0                                       ",{}]],"14":[["(gdb) watch clientes                                                            ",{}]],"15":[["Hardware watchpoint 1: clientes                                                 ",{}]],"16":[["(gdb) run                                                                       ",{}]],"17":[["The program being debugged has been started already.                            ",{}]],"18":[["Start it from the beginning? (y or n) y                                         ",{}]],"19":[["                                                                                ",{}]],"20":[["Starting program: /home/vinipsmaker/vinipsmaker labs/a.out                      ",{}]],"21":[["warning: Could not load shared library symbols for linux-gate.so.1.             ",{}]],"22":[["Do you need \"set solib-search-path\" or \"set sysroot\"?                           ",{}]]}}],[0.052596,{"lines":{"0":[["40              cout << \"  Nome: \" << it->nome << endl;                         ",{}]],"1":[["41              if ( it->compras )                                              ",{}]],"2":[["42                  cout << \"  Primeira compra: \" << it->compras->preco  << endl",{}]],"3":[[";                                                                               ",{}]],"4":[["43              cout << \" --\" << endl;                                          ",{}]],"5":[["44          }                                                                   ",{}]],"6":[["45      }                                                                       ",{}]],"7":[["46                                                                              ",{}]],"8":[["(gdb) print it->compras                                                         ",{}]],"9":[["$1 = (Compra *) 0x1f2c4b0                                                       ",{}]],"10":[["(gdb) print it->compras->preco                                                  ",{}]],"11":[["Cannot access memory at address 0x1f2c4b0                                       ",{}]],"12":[["(gdb) watch clientes                                                            ",{}]],"13":[["Hardware watchpoint 1: clientes                                                 ",{}]],"14":[["(gdb) run                                                                       ",{}]],"15":[["The program being debugged has been started already.                            ",{}]],"16":[["Start it from the beginning? (y or n) y                                         ",{}]],"17":[["                                                                                ",{}]],"18":[["Starting program: /home/vinipsmaker/vinipsmaker labs/a.out                      ",{}]],"19":[["warning: Could not load shared library symbols for linux-gate.so.1.             ",{}]],"20":[["Do you need \"set solib-search-path\" or \"set sysroot\"?                           ",{}]],"21":[["warning: File \"/usr/lib/libstdc++.so.6.0.19-gdb.py\" auto-loading has been declin",{}]],"22":[["ed by your `auto-load safe-path' set to \"$debugdir:$datadir/auto-load\".         ",{}]]}}],[0.042579,{"lines":{"0":[["44          }                                                                   ",{}]],"1":[["45      }                                                                       ",{}]],"2":[["46                                                                              ",{}]],"3":[["(gdb) print it->compras                                                         ",{}]],"4":[["$1 = (Compra *) 0x1f2c4b0                                                       ",{}]],"5":[["(gdb) print it->compras->preco                                                  ",{}]],"6":[["Cannot access memory at address 0x1f2c4b0                                       ",{}]],"7":[["(gdb) watch clientes                                                            ",{}]],"8":[["Hardware watchpoint 1: clientes                                                 ",{}]],"9":[["(gdb) run                                                                       ",{}]],"10":[["The program being debugged has been started already.                            ",{}]],"11":[["Start it from the beginning? (y or n) y                                         ",{}]],"12":[["                                                                                ",{}]],"13":[["Starting program: /home/vinipsmaker/vinipsmaker labs/a.out                      ",{}]],"14":[["warning: Could not load shared library symbols for linux-gate.so.1.             ",{}]],"15":[["Do you need \"set solib-search-path\" or \"set sysroot\"?                           ",{}]],"16":[["warning: File \"/usr/lib/libstdc++.so.6.0.19-gdb.py\" auto-loading has been declin",{}]],"17":[["ed by your `auto-load safe-path' set to \"$debugdir:$datadir/auto-load\".         ",{}]],"18":[["Opções:                                                                         ",{}]],"19":[[" 1 - Ler clientes                                                               ",{}]],"20":[[" 2 - Cadastrar cliente                                                          ",{}]],"21":[[" 3 - Detalhar cliente                                                           ",{}]],"22":[[" Q - Sair                                                                       ",{}]]}}],[1.869809,{"lines":{"23":[["2                                                                               ",{}]]},"cursor":{"x":1}}],[0.49374,{"lines":{"0":[["45      }                                                                       ",{}]],"1":[["46                                                                              ",{}]],"2":[["(gdb) print it->compras                                                         ",{}]],"3":[["$1 = (Compra *) 0x1f2c4b0                                                       ",{}]],"4":[["(gdb) print it->compras->preco                                                  ",{}]],"5":[["Cannot access memory at address 0x1f2c4b0                                       ",{}]],"6":[["(gdb) watch clientes                                                            ",{}]],"7":[["Hardware watchpoint 1: clientes                                                 ",{}]],"8":[["(gdb) run                                                                       ",{}]],"9":[["The program being debugged has been started already.                            ",{}]],"10":[["Start it from the beginning? (y or n) y                                         ",{}]],"11":[["                                                                                ",{}]],"12":[["Starting program: /home/vinipsmaker/vinipsmaker labs/a.out                      ",{}]],"13":[["warning: Could not load shared library symbols for linux-gate.so.1.             ",{}]],"14":[["Do you need \"set solib-search-path\" or \"set sysroot\"?                           ",{}]],"15":[["warning: File \"/usr/lib/libstdc++.so.6.0.19-gdb.py\" auto-loading has been declin",{}]],"16":[["ed by your `auto-load safe-path' set to \"$debugdir:$datadir/auto-load\".         ",{}]],"17":[["Opções:                                                                         ",{}]],"18":[[" 1 - Ler clientes                                                               ",{}]],"19":[[" 2 - Cadastrar cliente                                                          ",{}]],"20":[[" 3 - Detalhar cliente                                                           ",{}]],"21":[[" Q - Sair                                                                       ",{}]],"22":[["2                                                                               ",{}]],"23":[["                                                                                ",{}]]},"cursor":{"x":0}}],[0.000307,{"lines":{"0":[["46                                                                              ",{}]],"1":[["(gdb) print it->compras                                                         ",{}]],"2":[["$1 = (Compra *) 0x1f2c4b0                                                       ",{}]],"3":[["(gdb) print it->compras->preco                                                  ",{}]],"4":[["Cannot access memory at address 0x1f2c4b0                                       ",{}]],"5":[["(gdb) watch clientes                                                            ",{}]],"6":[["Hardware watchpoint 1: clientes                                                 ",{}]],"7":[["(gdb) run                                                                       ",{}]],"8":[["The program being debugged has been started already.                            ",{}]],"9":[["Start it from the beginning? (y or n) y                                         ",{}]],"10":[["                                                                                ",{}]],"11":[["Starting program: /home/vinipsmaker/vinipsmaker labs/a.out                      ",{}]],"12":[["warning: Could not load shared library symbols for linux-gate.so.1.             ",{}]],"13":[["Do you need \"set solib-search-path\" or \"set sysroot\"?                           ",{}]],"14":[["warning: File \"/usr/lib/libstdc++.so.6.0.19-gdb.py\" auto-loading has been declin",{}]],"15":[["ed by your `auto-load safe-path' set to \"$debugdir:$datadir/auto-load\".         ",{}]],"16":[["Opções:                                                                         ",{}]],"17":[[" 1 - Ler clientes                                                               ",{}]],"18":[[" 2 - Cadastrar cliente                                                          ",{}]],"19":[[" 3 - Detalhar cliente                                                           ",{}]],"20":[[" Q - Sair                                                                       ",{}]],"21":[["2                                                                               ",{}]],"22":[["Digite o nome do cliente:                                                       ",{}]]}}],[0.822727,{"lines":{"23":[["C                                                                               ",{}]]},"cursor":{"x":1}}],[0.327951,{"lines":{"23":[["Ch                                                                              ",{}]]},"cursor":{"x":2}}],[0.198029,{"lines":{"23":[["Chu                                                                             ",{}]]},"cursor":{"x":3}}],[0.20711,{"lines":{"23":[["Chuc                                                                            ",{}]]},"cursor":{"x":4}}],[0.143159,{"lines":{"23":[["Chuck                                                                           ",{}]]},"cursor":{"x":5}}],[1.190177,{"lines":{"0":[["(gdb) print it->compras->preco                                                  ",{}]],"1":[["Cannot access memory at address 0x1f2c4b0                                       ",{}]],"2":[["(gdb) watch clientes                                                            ",{}]],"3":[["Hardware watchpoint 1: clientes                                                 ",{}]],"4":[["(gdb) run                                                                       ",{}]],"5":[["The program being debugged has been started already.                            ",{}]],"6":[["Start it from the beginning? (y or n) y                                         ",{}]],"7":[["                                                                                ",{}]],"8":[["Starting program: /home/vinipsmaker/vinipsmaker labs/a.out                      ",{}]],"9":[["warning: Could not load shared library symbols for linux-gate.so.1.             ",{}]],"10":[["Do you need \"set solib-search-path\" or \"set sysroot\"?                           ",{}]],"11":[["warning: File \"/usr/lib/libstdc++.so.6.0.19-gdb.py\" auto-loading has been declin",{}]],"12":[["ed by your `auto-load safe-path' set to \"$debugdir:$datadir/auto-load\".         ",{}]],"13":[["Opções:                                                                         ",{}]],"14":[[" 1 - Ler clientes                                                               ",{}]],"15":[[" 2 - Cadastrar cliente                                                          ",{}]],"16":[[" 3 - Detalhar cliente                                                           ",{}]],"17":[[" Q - Sair                                                                       ",{}]],"18":[["2                                                                               ",{}]],"19":[["Digite o nome do cliente:                                                       ",{}]],"20":[["Chuck                                                                           ",{}]],"21":[["Hardware watchpoint 1: clientes                                                 ",{}]],"22":[["                                                                                ",{}]],"23":[["                                                                                ",{}]]},"cursor":{"x":0}}],[0.004467,{"lines":{"0":[[" 1 - Ler clientes                                                               ",{}]],"1":[[" 2 - Cadastrar cliente                                                          ",{}]],"2":[[" 3 - Detalhar cliente                                                           ",{}]],"3":[[" Q - Sair                                                                       ",{}]],"4":[["2                                                                               ",{}]],"5":[["Digite o nome do cliente:                                                       ",{}]],"6":[["Chuck                                                                           ",{}]],"7":[["Hardware watchpoint 1: clientes                                                 ",{}]],"8":[["                                                                                ",{}]],"9":[["Old value =                                                                     ",{}]],"10":[["      {<std::_Vector_base<Cliente, std::allocator<Cliente> >> = {_M_impl = {<std",{}]],"11":[["::allocator<Cliente>> = {<__gnu_cxx::new_allocator<Cliente>> = {<No data fields>",{}]],"12":[["}, <No data fields>}, _M_start = 0x0, _M_finish = 0x0, _M_end_of_storage = 0x0}}",{}]],"13":[[", <No data fields>}                                                             ",{}]],"14":[["New value =                                                                     ",{}]],"15":[["      {<std::_Vector_base<Cliente, std::allocator<Cliente> >> = {_M_impl = {<std",{}]],"16":[["::allocator<Cliente>> = {<__gnu_cxx::new_allocator<Cliente>> = {<No data fields>",{}]],"17":[["}, <No data fields>}, _M_start = 0x804c058, _M_finish = 0x0, _M_end_of_storage =",{}]],"18":[[" 0x0}}, <No data fields>}                                                       ",{}]],"19":[["std::vector<Cliente, std::allocator<Cliente> >::_M_insert_aux (                 ",{}]],"20":[["    this=0x804bbf0 <clientes>, __position=..., __x=...)                         ",{}]],"21":[["    at /usr/include/c++/4.8.2/bits/vector.tcc:390                               ",{}]],"22":[["390               this->_M_impl._M_finish = __new_finish;                       ",{}]],"23":[["(gdb)                                                                           ",{}]]},"cursor":{"x":6}}],[1.664809,{"lines":{"23":[["(gdb) l                                                                         ",{}]]},"cursor":{"x":7}}],[0.102387,{"lines":{"23":[["(gdb) li                                                                        ",{}]]},"cursor":{"x":8}}],[0.154051,{"lines":{"23":[["(gdb) lis                                                                       ",{}]]},"cursor":{"x":9}}],[0.234018,{"lines":{"23":[["(gdb) list                                                                      ",{}]]},"cursor":{"x":10}}],[0.198683,{"lines":{"0":[["::allocator<Cliente>> = {<__gnu_cxx::new_allocator<Cliente>> = {<No data fields>",{}]],"1":[["}, <No data fields>}, _M_start = 0x0, _M_finish = 0x0, _M_end_of_storage = 0x0}}",{}]],"2":[[", <No data fields>}                                                             ",{}]],"3":[["New value =                                                                     ",{}]],"4":[["      {<std::_Vector_base<Cliente, std::allocator<Cliente> >> = {_M_impl = {<std",{}]],"5":[["::allocator<Cliente>> = {<__gnu_cxx::new_allocator<Cliente>> = {<No data fields>",{}]],"6":[["}, <No data fields>}, _M_start = 0x804c058, _M_finish = 0x0, _M_end_of_storage =",{}]],"7":[[" 0x0}}, <No data fields>}                                                       ",{}]],"8":[["std::vector<Cliente, std::allocator<Cliente> >::_M_insert_aux (                 ",{}]],"9":[["    this=0x804bbf0 <clientes>, __position=..., __x=...)                         ",{}]],"10":[["    at /usr/include/c++/4.8.2/bits/vector.tcc:390                               ",{}]],"11":[["390               this->_M_impl._M_finish = __new_finish;                       ",{}]],"12":[["(gdb) list                                                                      ",{}]],"13":[["385                             _M_get_Tp_allocator());                         ",{}]],"14":[["386               _M_deallocate(this->_M_impl._M_start,                         ",{}]],"15":[["387                             this->_M_impl._M_end_of_storage                 ",{}]],"16":[["388                             - this->_M_impl._M_start);                      ",{}]],"17":[["389               this->_M_impl._M_start = __new_start;                         ",{}]],"18":[["390               this->_M_impl._M_finish = __new_finish;                       ",{}]],"19":[["391               this->_M_impl._M_end_of_storage = __new_start + __len;        ",{}]],"20":[["392             }                                                               ",{}]],"21":[["393         }                                                                   ",{}]],"22":[["394                                                                             ",{}]],"23":[["(gdb)                                                                           ",{}]]},"cursor":{"x":6}}],[0.558527,{"lines":{"23":[["(gdb) b                                                                         ",{}]]},"cursor":{"x":7}}],[0.093154,{"lines":{"23":[["(gdb) ba                                                                        ",{}]]},"cursor":{"x":8}}],[0.138716,{"lines":{"23":[["(gdb) bac                                                                       ",{}]]},"cursor":{"x":9}}],[0.164745,{"lines":{"23":[["(gdb) back                                                                      ",{}]]},"cursor":{"x":10}}],[0.216824,{"lines":{"23":[["(gdb) backt                                                                     ",{}]]},"cursor":{"x":11}}],[0.080142,{"lines":{"23":[["(gdb) backtr                                                                    ",{}]]},"cursor":{"x":12}}],[0.211687,{"lines":{"23":[["(gdb) backtra                                                                   ",{}]]},"cursor":{"x":13}}],[0.168599,{"lines":{"23":[["(gdb) backtrac                                                                  ",{}]]},"cursor":{"x":14}}],[0.197546,{"lines":{"23":[["(gdb) backtrace                                                                 ",{}]]},"cursor":{"x":15}}],[1.0622,{"lines":{"0":[["    this=0x804bbf0 <clientes>, __position=..., __x=...)                         ",{}]],"1":[["    at /usr/include/c++/4.8.2/bits/vector.tcc:390                               ",{}]],"2":[["390               this->_M_impl._M_finish = __new_finish;                       ",{}]],"3":[["(gdb) list                                                                      ",{}]],"4":[["385                             _M_get_Tp_allocator());                         ",{}]],"5":[["386               _M_deallocate(this->_M_impl._M_start,                         ",{}]],"6":[["387                             this->_M_impl._M_end_of_storage                 ",{}]],"7":[["388                             - this->_M_impl._M_start);                      ",{}]],"8":[["389               this->_M_impl._M_start = __new_start;                         ",{}]],"9":[["390               this->_M_impl._M_finish = __new_finish;                       ",{}]],"10":[["391               this->_M_impl._M_end_of_storage = __new_start + __len;        ",{}]],"11":[["392             }                                                               ",{}]],"12":[["393         }                                                                   ",{}]],"13":[["394                                                                             ",{}]],"14":[["(gdb) backtrace                                                                 ",{}]],"15":[["#0  std::vector<Cliente, std::allocator<Cliente> >::_M_insert_aux (             ",{}]],"16":[["    this=0x804bbf0 <clientes>, __position=..., __x=...)                         ",{}]],"17":[["    at /usr/include/c++/4.8.2/bits/vector.tcc:390                               ",{}]],"18":[["#1  0x08049135 in std::vector<Cliente, std::allocator<Cliente> >::push_back (   ",{}]],"19":[["    this=0x804bbf0 <clientes>, __x=...)                                         ",{}]],"20":[["    at /usr/include/c++/4.8.2/bits/stl_vector.h:913                             ",{}]],"21":[["#2  0x08048e1b in cadastrar_cliente () at clientes.cpp:52                       ",{}]],"22":[["#3  0x08048efc in main () at clientes.cpp:71                                    ",{}]],"23":[["(gdb)                                                                           ",{}]]},"cursor":{"x":6}}],[0.651021,{"lines":{"23":[["(gdb) l                                                                         ",{}]]},"cursor":{"x":7}}],[0.223085,{"lines":{"23":[["(gdb) li                                                                        ",{}]]},"cursor":{"x":8}}],[0.438922,{"lines":{"23":[["(gdb) l                                                                         ",{}]]},"cursor":{"x":7}}],[0.115952,{"lines":{"23":[["(gdb)                                                                           ",{}]]},"cursor":{"x":6}}],[0.402149,{"lines":{"23":[["(gdb) f                                                                         ",{}]]},"cursor":{"x":7}}],[0.162669,{"lines":{"23":[["(gdb) fr                                                                        ",{}]]},"cursor":{"x":8}}],[0.236994,{"lines":{"23":[["(gdb) frm                                                                       ",{}]]},"cursor":{"x":9}}],[0.312193,{"lines":{"23":[["(gdb) fr                                                                        ",{}]]},"cursor":{"x":8}}],[0.098774,{"lines":{"23":[["(gdb) fra                                                                       ",{}]]},"cursor":{"x":9}}],[0.134521,{"lines":{"23":[["(gdb) fram                                                                      ",{}]]},"cursor":{"x":10}}],[0.09247900000000001,{"lines":{"23":[["(gdb) frame                                                                     ",{}]]},"cursor":{"x":11}}],[0.330839,{"cursor":{"x":12}}],[0.6518969999999999,{"lines":{"23":[["(gdb) frame 2                                                                   ",{}]]},"cursor":{"x":13}}],[0.94381,{"lines":{"0":[["(gdb) list                                                                      ",{}]],"1":[["385                             _M_get_Tp_allocator());                         ",{}]],"2":[["386               _M_deallocate(this->_M_impl._M_start,                         ",{}]],"3":[["387                             this->_M_impl._M_end_of_storage                 ",{}]],"4":[["388                             - this->_M_impl._M_start);                      ",{}]],"5":[["389               this->_M_impl._M_start = __new_start;                         ",{}]],"6":[["390               this->_M_impl._M_finish = __new_finish;                       ",{}]],"7":[["391               this->_M_impl._M_end_of_storage = __new_start + __len;        ",{}]],"8":[["392             }                                                               ",{}]],"9":[["393         }                                                                   ",{}]],"10":[["394                                                                             ",{}]],"11":[["(gdb) backtrace                                                                 ",{}]],"12":[["#0  std::vector<Cliente, std::allocator<Cliente> >::_M_insert_aux (             ",{}]],"13":[["    this=0x804bbf0 <clientes>, __position=..., __x=...)                         ",{}]],"14":[["    at /usr/include/c++/4.8.2/bits/vector.tcc:390                               ",{}]],"15":[["#1  0x08049135 in std::vector<Cliente, std::allocator<Cliente> >::push_back (   ",{}]],"16":[["    this=0x804bbf0 <clientes>, __x=...)                                         ",{}]],"17":[["    at /usr/include/c++/4.8.2/bits/stl_vector.h:913                             ",{}]],"18":[["#2  0x08048e1b in cadastrar_cliente () at clientes.cpp:52                       ",{}]],"19":[["#3  0x08048efc in main () at clientes.cpp:71                                    ",{}]],"20":[["(gdb) frame 2                                                                   ",{}]],"22":[["52          clientes.push_back(cliente);                                        ",{}]],"23":[["(gdb)                                                                           ",{}]]},"cursor":{"x":6}}],[2.048095,{"lines":{"23":[["(gdb) l                                                                         ",{}]]},"cursor":{"x":7}}],[0.109639,{"lines":{"23":[["(gdb) li                                                                        ",{}]]},"cursor":{"x":8}}],[0.1639,{"lines":{"23":[["(gdb) lis                                                                       ",{}]]},"cursor":{"x":9}}],[0.172434,{"lines":{"23":[["(gdb) list                                                                      ",{}]]},"cursor":{"x":10}}],[1.493402,{"lines":{"0":[["#0  std::vector<Cliente, std::allocator<Cliente> >::_M_insert_aux (             ",{}]],"1":[["    this=0x804bbf0 <clientes>, __position=..., __x=...)                         ",{}]],"2":[["    at /usr/include/c++/4.8.2/bits/vector.tcc:390                               ",{}]],"3":[["#1  0x08049135 in std::vector<Cliente, std::allocator<Cliente> >::push_back (   ",{}]],"4":[["    this=0x804bbf0 <clientes>, __x=...)                                         ",{}]],"5":[["    at /usr/include/c++/4.8.2/bits/stl_vector.h:913                             ",{}]],"6":[["#2  0x08048e1b in cadastrar_cliente () at clientes.cpp:52                       ",{}]],"7":[["#3  0x08048efc in main () at clientes.cpp:71                                    ",{}]],"8":[["(gdb) frame 2                                                                   ",{}]],"9":[["#2  0x08048e1b in cadastrar_cliente () at clientes.cpp:52                       ",{}]],"10":[["52          clientes.push_back(cliente);                                        ",{}]],"11":[["(gdb) list                                                                      ",{}]],"12":[["47      void cadastrar_cliente()                                                ",{}]],"13":[["48      {                                                                       ",{}]],"14":[["49          cout << \"Digite o nome do cliente:\" << endl;                        ",{}]],"15":[["50          Cliente cliente;                                                    ",{}]],"16":[["51          cin >> cliente.nome;                                                ",{}]],"17":[["52          clientes.push_back(cliente);                                        ",{}]],"18":[["53          cout << \"Cliente \\\"\" << cliente.nome << \"\\\" inserido com sucesso\" <<",{}]],"19":[[" endl;                                                                          ",{}]],"20":[["54      }                                                                       ",{}]],"21":[["55                                                                              ",{}]],"22":[["56      void detalhar_cliente()                                                 ",{}]],"23":[["(gdb)                                                                           ",{}]]},"cursor":{"x":6}}],[0.603843,{"lines":{"23":[["(gdb) p                                                                         ",{}]]},"cursor":{"x":7}}],[0.143211,{"lines":{"23":[["(gdb) pr                                                                        ",{}]]},"cursor":{"x":8}}],[0.142503,{"lines":{"23":[["(gdb) pri                                                                       ",{}]]},"cursor":{"x":9}}],[0.098537,{"lines":{"23":[["(gdb) prin                                                                      ",{}]]},"cursor":{"x":10}}],[0.120065,{"lines":{"23":[["(gdb) print                                                                     ",{}]]},"cursor":{"x":11}}],[0.135085,{"cursor":{"x":12}}],[0.312065,{"lines":{"23":[["(gdb) print c                                                                   ",{}]]},"cursor":{"x":13}}],[0.114747,{"lines":{"23":[["(gdb) print cl                                                                  ",{}]]},"cursor":{"x":14}}],[0.067423,{"lines":{"23":[["(gdb) print cli                                                                 ",{}]]},"cursor":{"x":15}}],[0.163834,{"lines":{"23":[["(gdb) print clie                                                                ",{}]]},"cursor":{"x":16}}],[0.103539,{"lines":{"23":[["(gdb) print clien                                                               ",{}]]},"cursor":{"x":17}}],[0.118813,{"lines":{"23":[["(gdb) print client                                                              ",{}]]},"cursor":{"x":18}}],[0.065305,{"lines":{"23":[["(gdb) print cliente                                                             ",{}]]},"cursor":{"x":19}}],[1.485422,{"lines":{"0":[["    at /usr/include/c++/4.8.2/bits/vector.tcc:390                               ",{}]],"1":[["#1  0x08049135 in std::vector<Cliente, std::allocator<Cliente> >::push_back (   ",{}]],"2":[["    this=0x804bbf0 <clientes>, __x=...)                                         ",{}]],"3":[["    at /usr/include/c++/4.8.2/bits/stl_vector.h:913                             ",{}]],"4":[["#2  0x08048e1b in cadastrar_cliente () at clientes.cpp:52                       ",{}]],"5":[["#3  0x08048efc in main () at clientes.cpp:71                                    ",{}]],"6":[["(gdb) frame 2                                                                   ",{}]],"7":[["#2  0x08048e1b in cadastrar_cliente () at clientes.cpp:52                       ",{}]],"8":[["52          clientes.push_back(cliente);                                        ",{}]],"9":[["(gdb) list                                                                      ",{}]],"10":[["47      void cadastrar_cliente()                                                ",{}]],"11":[["48      {                                                                       ",{}]],"12":[["49          cout << \"Digite o nome do cliente:\" << endl;                        ",{}]],"13":[["50          Cliente cliente;                                                    ",{}]],"14":[["51          cin >> cliente.nome;                                                ",{}]],"15":[["52          clientes.push_back(cliente);                                        ",{}]],"16":[["53          cout << \"Cliente \\\"\" << cliente.nome << \"\\\" inserido com sucesso\" <<",{}]],"17":[[" endl;                                                                          ",{}]],"18":[["54      }                                                                       ",{}]],"19":[["55                                                                              ",{}]],"20":[["56      void detalhar_cliente()                                                 ",{}]],"21":[["(gdb) print cliente                                                             ",{}]],"22":[["$2 = {nome = {static npos = <optimized out>,                                    ",{}]],"23":[["                                                                                ",{}]]},"cursor":{"x":0}}],[0.336983,{"lines":{"0":[["#2  0x08048e1b in cadastrar_cliente () at clientes.cpp:52                       ",{}]],"1":[["#3  0x08048efc in main () at clientes.cpp:71                                    ",{}]],"2":[["(gdb) frame 2                                                                   ",{}]],"3":[["#2  0x08048e1b in cadastrar_cliente () at clientes.cpp:52                       ",{}]],"4":[["52          clientes.push_back(cliente);                                        ",{}]],"5":[["(gdb) list                                                                      ",{}]],"6":[["47      void cadastrar_cliente()                                                ",{}]],"7":[["48      {                                                                       ",{}]],"8":[["49          cout << \"Digite o nome do cliente:\" << endl;                        ",{}]],"9":[["50          Cliente cliente;                                                    ",{}]],"10":[["51          cin >> cliente.nome;                                                ",{}]],"11":[["52          clientes.push_back(cliente);                                        ",{}]],"12":[["53          cout << \"Cliente \\\"\" << cliente.nome << \"\\\" inserido com sucesso\" <<",{}]],"13":[[" endl;                                                                          ",{}]],"14":[["54      }                                                                       ",{}]],"15":[["55                                                                              ",{}]],"16":[["56      void detalhar_cliente()                                                 ",{}]],"17":[["(gdb) print cliente                                                             ",{}]],"18":[["$2 = {nome = {static npos = <optimized out>,                                    ",{}]],"19":[["    _M_dataplus = {<std::allocator<char>> = {<__gnu_cxx::new_allocator<char>> = ",{}]],"20":[["{<No data fields>}, <No data fields>}, _M_p = 0x804c044 \"Chuck\"}},              ",{}]],"21":[["  compras = 0xb7f2c4b0 <std::basic_ios<char, std::char_traits<char> >::operator ",{}]],"22":[["void*() const>}                                                                 ",{}]],"23":[["(gdb)                                                                           ",{}]]},"cursor":{"x":6}}],[5.967734,{"lines":{"0":[["(gdb) list                                                                      ",{}]],"1":[["47      void cadastrar_cliente()                                                ",{}]],"2":[["48      {                                                                       ",{}]],"3":[["49          cout << \"Digite o nome do cliente:\" << endl;                        ",{}]],"4":[["50          Cliente cliente;                                                    ",{}]],"5":[["51          cin >> cliente.nome;                                                ",{}]],"6":[["52          clientes.push_back(cliente);                                        ",{}]],"7":[["53          cout << \"Cliente \\\"\" << cliente.nome << \"\\\" inserido com sucesso\" <<",{}]],"8":[[" endl;                                                                          ",{}]],"9":[["54      }                                                                       ",{}]],"10":[["55                                                                              ",{}]],"11":[["56      void detalhar_cliente()                                                 ",{}]],"12":[["(gdb) print cliente                                                             ",{}]],"13":[["$2 = {nome = {static npos = <optimized out>,                                    ",{}]],"14":[["    _M_dataplus = {<std::allocator<char>> = {<__gnu_cxx::new_allocator<char>> = ",{}]],"15":[["{<No data fields>}, <No data fields>}, _M_p = 0x804c044 \"Chuck\"}},              ",{}]],"16":[["  compras = 0xb7f2c4b0 <std::basic_ios<char, std::char_traits<char> >::operator ",{}]],"17":[["void*() const>}                                                                 ",{}]],"18":[["(gdb) quit                                                                      ",{}]],"19":[["A debugging session is active.                                                  ",{}]],"20":[["                                                                                ",{}]],"21":[["        Inferior 1 [process 9642] will be killed.                               ",{}]],"22":[["                                                                                ",{}]],"23":[["Quit anyway? (y or n)                                                           ",{}]]},"cursor":{"x":22}}],[1.470123,{"lines":{"23":[["Quit anyway? (y or n) y                                                         ",{}]]},"cursor":{"x":23}}],[0.405957,{"lines":{"0":[["47      void cadastrar_cliente()                                                ",{}]],"1":[["48      {                                                                       ",{}]],"2":[["49          cout << \"Digite o nome do cliente:\" << endl;                        ",{}]],"3":[["50          Cliente cliente;                                                    ",{}]],"4":[["51          cin >> cliente.nome;                                                ",{}]],"5":[["52          clientes.push_back(cliente);                                        ",{}]],"6":[["53          cout << \"Cliente \\\"\" << cliente.nome << \"\\\" inserido com sucesso\" <<",{}]],"7":[[" endl;                                                                          ",{}]],"8":[["54      }                                                                       ",{}]],"9":[["55                                                                              ",{}]],"10":[["56      void detalhar_cliente()                                                 ",{}]],"11":[["(gdb) print cliente                                                             ",{}]],"12":[["$2 = {nome = {static npos = <optimized out>,                                    ",{}]],"13":[["    _M_dataplus = {<std::allocator<char>> = {<__gnu_cxx::new_allocator<char>> = ",{}]],"14":[["{<No data fields>}, <No data fields>}, _M_p = 0x804c044 \"Chuck\"}},              ",{}]],"15":[["  compras = 0xb7f2c4b0 <std::basic_ios<char, std::char_traits<char> >::operator ",{}]],"16":[["void*() const>}                                                                 ",{}]],"17":[["(gdb) quit                                                                      ",{}]],"18":[["A debugging session is active.                                                  ",{}]],"19":[["                                                                                ",{}]],"20":[["        Inferior 1 [process 9642] will be killed.                               ",{}]],"21":[["                                                                                ",{}]],"22":[["Quit anyway? (y or n) y                                                         ",{}]],"23":[["                                                                                ",{}]]},"cursor":{"x":0}}],[0.018349,{}],[0.005960999999999999,{"lines":{"23":[["vinipsmaker ",{"fg":6}],["~/vinipsmaker labs ",{"fg":5}],["$                                                ",{}]]},"cursor":{"x":33}}],[0.93614,{"lines":{"23":[["vinipsmaker ",{"fg":6}],["~/vinipsmaker labs ",{"fg":5}],["$ ",{}],["@",{"fg":3,"underline":true}],["                                              ",{}]]},"cursor":{"x":34}}],[0.350706,{"lines":{"23":[["vinipsmaker ",{"fg":6}],["~/vinipsmaker labs ",{"fg":5}],["$                                                ",{}]]},"cursor":{"x":33}}],[0.20353,{"lines":{"23":[["vinipsmaker ",{"fg":6}],["~/vinipsmaker labs ",{"fg":5}],["$ ",{}],["#",{"fg":3,"underline":true}],["                                              ",{}]]},"cursor":{"x":34}}],[0.53344,{"lines":{"23":[["vinipsmaker ",{"fg":6}],["~/vinipsmaker labs ",{"fg":5}],["$ ",{}],["#w",{"fg":1,"bold":true}],["                                             ",{}]]},"cursor":{"x":35}}],[0.07146,{"lines":{"23":[["vinipsmaker ",{"fg":6}],["~/vinipsmaker labs ",{"fg":5}],["$ ",{}],["#we",{"fg":1,"bold":true}],["                                            ",{}]]},"cursor":{"x":36}}],[0.702858,{"cursor":{"x":37}}],[0.130297,{"lines":{"23":[["vinipsmaker ",{"fg":6}],["~/vinipsmaker labs ",{"fg":5}],["$ ",{}],["#we",{"fg":1,"bold":true}],[" ",{}],["a",{"underline":true}],["                                          ",{}]]},"cursor":{"x":38}}],[0.108469,{"lines":{"23":[["vinipsmaker ",{"fg":6}],["~/vinipsmaker labs ",{"fg":5}],["$ ",{}],["#we",{"fg":1,"bold":true}],[" ",{}],["ar",{"fg":3,"underline":true}],["                                         ",{}]]},"cursor":{"x":39}}],[0.056708,{"lines":{"23":[["vinipsmaker ",{"fg":6}],["~/vinipsmaker labs ",{"fg":5}],["$ ",{}],["#we",{"fg":1,"bold":true}],[" are                                        ",{}]]},"cursor":{"x":40}}],[0.123883,{"cursor":{"x":41}}],[0.131664,{"lines":{"23":[["vinipsmaker ",{"fg":6}],["~/vinipsmaker labs ",{"fg":5}],["$ ",{}],["#we",{"fg":1,"bold":true}],[" are ",{}],["d",{"fg":3,"underline":true}],["                                      ",{}]]},"cursor":{"x":42}}],[0.094378,{"lines":{"23":[["vinipsmaker ",{"fg":6}],["~/vinipsmaker labs ",{"fg":5}],["$ ",{}],["#we",{"fg":1,"bold":true}],[" are do                                     ",{}]]},"cursor":{"x":43}}],[0.047771,{"lines":{"23":[["vinipsmaker ",{"fg":6}],["~/vinipsmaker labs ",{"fg":5}],["$ ",{}],["#we",{"fg":1,"bold":true}],[" are don                                    ",{}]]},"cursor":{"x":44}}],[0.110782,{"lines":{"23":[["vinipsmaker ",{"fg":6}],["~/vinipsmaker labs ",{"fg":5}],["$ ",{}],["#we",{"fg":1,"bold":true}],[" are done                                   ",{}]]},"cursor":{"x":45}}],[0.374686,{"lines":{"0":[["48      {                                                                       ",{}]],"1":[["49          cout << \"Digite o nome do cliente:\" << endl;                        ",{}]],"2":[["50          Cliente cliente;                                                    ",{}]],"3":[["51          cin >> cliente.nome;                                                ",{}]],"4":[["52          clientes.push_back(cliente);                                        ",{}]],"5":[["53          cout << \"Cliente \\\"\" << cliente.nome << \"\\\" inserido com sucesso\" <<",{}]],"6":[[" endl;                                                                          ",{}]],"7":[["54      }                                                                       ",{}]],"8":[["55                                                                              ",{}]],"9":[["56      void detalhar_cliente()                                                 ",{}]],"10":[["(gdb) print cliente                                                             ",{}]],"11":[["$2 = {nome = {static npos = <optimized out>,                                    ",{}]],"12":[["    _M_dataplus = {<std::allocator<char>> = {<__gnu_cxx::new_allocator<char>> = ",{}]],"13":[["{<No data fields>}, <No data fields>}, _M_p = 0x804c044 \"Chuck\"}},              ",{}]],"14":[["  compras = 0xb7f2c4b0 <std::basic_ios<char, std::char_traits<char> >::operator ",{}]],"15":[["void*() const>}                                                                 ",{}]],"16":[["(gdb) quit                                                                      ",{}]],"17":[["A debugging session is active.                                                  ",{}]],"18":[["                                                                                ",{}]],"19":[["        Inferior 1 [process 9642] will be killed.                               ",{}]],"20":[["                                                                                ",{}]],"21":[["Quit anyway? (y or n) y                                                         ",{}]],"22":[["vinipsmaker ",{"fg":6}],["~/vinipsmaker labs ",{"fg":5}],["$ ",{}],["#we",{"fg":1,"bold":true}],[" are done                                   ",{}]],"23":[["                                                                                ",{}]]},"cursor":{"x":0}}],[0.011086,{"lines":{"23":[["vinipsmaker ",{"fg":6}],["~/vinipsmaker labs ",{"fg":5}],["$                                                ",{}]]},"cursor":{"x":33}}],[1.524351,{"lines":{"0":[["49          cout << \"Digite o nome do cliente:\" << endl;                        ",{}]],"1":[["50          Cliente cliente;                                                    ",{}]],"2":[["51          cin >> cliente.nome;                                                ",{}]],"3":[["52          clientes.push_back(cliente);                                        ",{}]],"4":[["53          cout << \"Cliente \\\"\" << cliente.nome << \"\\\" inserido com sucesso\" <<",{}]],"5":[[" endl;                                                                          ",{}]],"6":[["54      }                                                                       ",{}]],"7":[["55                                                                              ",{}]],"8":[["56      void detalhar_cliente()                                                 ",{}]],"9":[["(gdb) print cliente                                                             ",{}]],"10":[["$2 = {nome = {static npos = <optimized out>,                                    ",{}]],"11":[["    _M_dataplus = {<std::allocator<char>> = {<__gnu_cxx::new_allocator<char>> = ",{}]],"12":[["{<No data fields>}, <No data fields>}, _M_p = 0x804c044 \"Chuck\"}},              ",{}]],"13":[["  compras = 0xb7f2c4b0 <std::basic_ios<char, std::char_traits<char> >::operator ",{}]],"14":[["void*() const>}                                                                 ",{}]],"15":[["(gdb) quit                                                                      ",{}]],"16":[["A debugging session is active.                                                  ",{}]],"17":[["                                                                                ",{}]],"18":[["        Inferior 1 [process 9642] will be killed.                               ",{}]],"19":[["                                                                                ",{}]],"20":[["Quit anyway? (y or n) y                                                         ",{}]],"21":[["vinipsmaker ",{"fg":6}],["~/vinipsmaker labs ",{"fg":5}],["$ ",{}],["#we",{"fg":1,"bold":true}],[" are done                                   ",{}]],"22":[["vinipsmaker ",{"fg":6}],["~/vinipsmaker labs ",{"fg":5}],["$                                                ",{}]],"23":[["                                                                                ",{}]]},"cursor":{"x":0}}]]