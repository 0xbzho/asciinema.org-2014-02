[[0.104666,{"lines":{"0":[["                                                                                          ",{}]],"1":[["                                                                                          ",{}]],"2":[["                                                                                          ",{}]],"3":[["                                                                                          ",{}]],"4":[["                                                                                          ",{}]],"5":[["                                                                                          ",{}]],"6":[["                                                                                          ",{}]],"7":[["                                                                                          ",{}]],"8":[["                                                                                          ",{}]],"9":[["                                                                                          ",{}]],"10":[["                                                                                          ",{}]],"11":[["                                                                                          ",{}]],"12":[["                                                                                          ",{}]],"13":[["                                                                                          ",{}]],"14":[["                                                                                          ",{}]],"15":[["                                                                                          ",{}]],"16":[["                                                                                          ",{}]],"17":[["                                                                                          ",{}]],"18":[["                                                                                          ",{}]],"19":[["                                                                                          ",{}]],"20":[["                                                                                          ",{}]],"21":[["                                                                                          ",{}]],"22":[["                                                                                          ",{}]],"23":[["                                                                                          ",{}]],"24":[["                                                                                          ",{}]],"25":[["                                                                                          ",{}]],"26":[["                                                                                          ",{}]],"27":[["                                                                                          ",{}]]},"cursor":{"x":0,"y":0,"visible":true}}],[0.000405,{"lines":{"0":[["r1x@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],["                                                                           ",{}]]},"cursor":{"x":16}}],[1.517134,{"lines":{"0":[["r1x@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],[" .                                                                         ",{}]]},"cursor":{"x":17}}],[0.177234,{"lines":{"0":[["r1x@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],[" ./                                                                        ",{}]]},"cursor":{"x":18}}],[1.233645,{"lines":{"0":[["r1x@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],[" .                                                                         ",{}]]},"cursor":{"x":17}}],[0.158713,{"lines":{"0":[["r1x@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],["                                                                           ",{}]]},"cursor":{"x":16}}],[0.120209,{}],[0.535249,{"lines":{"0":[["r1x@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],[" c                                                                         ",{}]]},"cursor":{"x":17}}],[0.063309,{"lines":{"0":[["r1x@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],[" cd                                                                        ",{}]]},"cursor":{"x":18}}],[0.12864,{"cursor":{"x":19}}],[0.216029,{"lines":{"0":[["r1x@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],[" cd g                                                                      ",{}]]},"cursor":{"x":20}}],[0.182756,{"lines":{"0":[["r1x@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],[" cd gd                                                                     ",{}]]},"cursor":{"x":21}}],[0.339443,{"lines":{"0":[["r1x@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],[" cd gdb                                                                    ",{}]]},"cursor":{"x":22}}],[0.407733,{"cursor":{"x":0,"y":1}}],[0.000621,{"lines":{"1":[["r1x@testbed",{"fg":2,"bold":true}],[" ~/gdb $",{"fg":4,"bold":true}],["                                                                       ",{}]]},"cursor":{"x":20}}],[1.173248,{"lines":{"1":[["r1x@testbed",{"fg":2,"bold":true}],[" ~/gdb $",{"fg":4,"bold":true}],[" .                                                                     ",{}]]},"cursor":{"x":21}}],[0.159266,{"lines":{"1":[["r1x@testbed",{"fg":2,"bold":true}],[" ~/gdb $",{"fg":4,"bold":true}],[" ./                                                                    ",{}]]},"cursor":{"x":22}}],[0.192884,{"lines":{"1":[["r1x@testbed",{"fg":2,"bold":true}],[" ~/gdb $",{"fg":4,"bold":true}],[" ./p                                                                   ",{}]]},"cursor":{"x":23}}],[0.136332,{"lines":{"1":[["r1x@testbed",{"fg":2,"bold":true}],[" ~/gdb $",{"fg":4,"bold":true}],[" ./pa                                                                  ",{}]]},"cursor":{"x":24}}],[0.022561,{"lines":{"1":[["r1x@testbed",{"fg":2,"bold":true}],[" ~/gdb $",{"fg":4,"bold":true}],[" ./pas                                                                 ",{}]]},"cursor":{"x":25}}],[0.208178,{"lines":{"1":[["r1x@testbed",{"fg":2,"bold":true}],[" ~/gdb $",{"fg":4,"bold":true}],[" ./password                                                            ",{}]]},"cursor":{"x":31}}],[0.691613,{"cursor":{"x":0,"y":2}}],[0.001676,{"lines":{"2":[["Please specify a password                                                                 ",{}]],"3":[["r1x@testbed",{"fg":2,"bold":true}],[" ~/gdb $",{"fg":4,"bold":true}],["                                                                       ",{}]]},"cursor":{"x":20,"y":3}}],[1.236839,{"lines":{"3":[["r1x@testbed",{"fg":2,"bold":true}],[" ~/gdb $",{"fg":4,"bold":true}],[" .                                                                     ",{}]]},"cursor":{"x":21}}],[0.150301,{"lines":{"3":[["r1x@testbed",{"fg":2,"bold":true}],[" ~/gdb $",{"fg":4,"bold":true}],[" ./                                                                    ",{}]]},"cursor":{"x":22}}],[0.8019810000000001,{"lines":{"3":[["r1x@testbed",{"fg":2,"bold":true}],[" ~/gdb $",{"fg":4,"bold":true}],[" ./p                                                                   ",{}]]},"cursor":{"x":23}}],[0.352799,{"lines":{"3":[["r1x@testbed",{"fg":2,"bold":true}],[" ~/gdb $",{"fg":4,"bold":true}],[" ./pa                                                                  ",{}]]},"cursor":{"x":24}}],[0.100832,{"lines":{"3":[["r1x@testbed",{"fg":2,"bold":true}],[" ~/gdb $",{"fg":4,"bold":true}],[" ./pas                                                                 ",{}]]},"cursor":{"x":25}}],[0.224145,{"lines":{"3":[["r1x@testbed",{"fg":2,"bold":true}],[" ~/gdb $",{"fg":4,"bold":true}],[" ./password                                                            ",{}]]},"cursor":{"x":31}}],[0.77796,{"lines":{"3":[["r1x@testbed",{"fg":2,"bold":true}],[" ~/gdb $",{"fg":4,"bold":true}],[" ./password 1                                                          ",{}]]},"cursor":{"x":32}}],[0.045974,{"lines":{"3":[["r1x@testbed",{"fg":2,"bold":true}],[" ~/gdb $",{"fg":4,"bold":true}],[" ./password 12                                                         ",{}]]},"cursor":{"x":33}}],[0.112765,{"lines":{"3":[["r1x@testbed",{"fg":2,"bold":true}],[" ~/gdb $",{"fg":4,"bold":true}],[" ./password 123                                                        ",{}]]},"cursor":{"x":34}}],[0.222883,{"lines":{"3":[["r1x@testbed",{"fg":2,"bold":true}],[" ~/gdb $",{"fg":4,"bold":true}],[" ./password 1234                                                       ",{}]]},"cursor":{"x":35}}],[0.152484,{"cursor":{"x":0,"y":4}}],[0.001715,{"lines":{"4":[["Wrong password!                                                                           ",{}]],"5":[["r1x@testbed",{"fg":2,"bold":true}],[" ~/gdb $",{"fg":4,"bold":true}],["                                                                       ",{}]]},"cursor":{"x":20,"y":5}}],[1.192876,{"lines":{"5":[["r1x@testbed",{"fg":2,"bold":true}],[" ~/gdb $",{"fg":4,"bold":true}],[" #                                                                     ",{}]]},"cursor":{"x":21}}],[0.09314,{"cursor":{"x":22}}],[0.789674,{"lines":{"5":[["r1x@testbed",{"fg":2,"bold":true}],[" ~/gdb $",{"fg":4,"bold":true}],[" # M                                                                   ",{}]]},"cursor":{"x":23}}],[0.003655,{"lines":{"5":[["r1x@testbed",{"fg":2,"bold":true}],[" ~/gdb $",{"fg":4,"bold":true}],[" # MH                                                                  ",{}]]},"cursor":{"x":24}}],[0.990935,{"lines":{"5":[["r1x@testbed",{"fg":2,"bold":true}],[" ~/gdb $",{"fg":4,"bold":true}],[" # MH!                                                                 ",{}]]},"cursor":{"x":25}}],[0.1597,{"cursor":{"x":26}}],[0.330004,{"lines":{"5":[["r1x@testbed",{"fg":2,"bold":true}],[" ~/gdb $",{"fg":4,"bold":true}],[" # MH! l                                                               ",{}]]},"cursor":{"x":27}}],[0.133125,{"lines":{"5":[["r1x@testbed",{"fg":2,"bold":true}],[" ~/gdb $",{"fg":4,"bold":true}],[" # MH! le                                                              ",{}]]},"cursor":{"x":28}}],[0.628044,{"lines":{"5":[["r1x@testbed",{"fg":2,"bold":true}],[" ~/gdb $",{"fg":4,"bold":true}],[" # MH! let                                                             ",{}]]},"cursor":{"x":29}}],[0.100848,{"lines":{"5":[["r1x@testbed",{"fg":2,"bold":true}],[" ~/gdb $",{"fg":4,"bold":true}],[" # MH! let'                                                            ",{}]]},"cursor":{"x":30}}],[0.13491,{"lines":{"5":[["r1x@testbed",{"fg":2,"bold":true}],[" ~/gdb $",{"fg":4,"bold":true}],[" # MH! let's                                                           ",{}]]},"cursor":{"x":31}}],[0.184223,{"cursor":{"x":32}}],[0.618668,{"lines":{"5":[["r1x@testbed",{"fg":2,"bold":true}],[" ~/gdb $",{"fg":4,"bold":true}],[" # MH! let's f                                                         ",{}]]},"cursor":{"x":33}}],[0.069697,{"lines":{"5":[["r1x@testbed",{"fg":2,"bold":true}],[" ~/gdb $",{"fg":4,"bold":true}],[" # MH! let's fi                                                        ",{}]]},"cursor":{"x":34}}],[0.040564,{"lines":{"5":[["r1x@testbed",{"fg":2,"bold":true}],[" ~/gdb $",{"fg":4,"bold":true}],[" # MH! let's fin                                                       ",{}]]},"cursor":{"x":35}}],[0.095903,{"lines":{"5":[["r1x@testbed",{"fg":2,"bold":true}],[" ~/gdb $",{"fg":4,"bold":true}],[" # MH! let's find                                                      ",{}]]},"cursor":{"x":36}}],[0.095918,{"cursor":{"x":37}}],[0.111881,{"lines":{"5":[["r1x@testbed",{"fg":2,"bold":true}],[" ~/gdb $",{"fg":4,"bold":true}],[" # MH! let's find t                                                    ",{}]]},"cursor":{"x":38}}],[0.06315800000000001,{"lines":{"5":[["r1x@testbed",{"fg":2,"bold":true}],[" ~/gdb $",{"fg":4,"bold":true}],[" # MH! let's find th                                                   ",{}]]},"cursor":{"x":39}}],[0.07330200000000001,{"lines":{"5":[["r1x@testbed",{"fg":2,"bold":true}],[" ~/gdb $",{"fg":4,"bold":true}],[" # MH! let's find the                                                  ",{}]]},"cursor":{"x":40}}],[0.104009,{"cursor":{"x":41}}],[0.127866,{"lines":{"5":[["r1x@testbed",{"fg":2,"bold":true}],[" ~/gdb $",{"fg":4,"bold":true}],[" # MH! let's find the p                                                ",{}]]},"cursor":{"x":42}}],[0.063334,{"lines":{"5":[["r1x@testbed",{"fg":2,"bold":true}],[" ~/gdb $",{"fg":4,"bold":true}],[" # MH! let's find the pw                                               ",{}]]},"cursor":{"x":43}}],[0.135657,{"lines":{"5":[["r1x@testbed",{"fg":2,"bold":true}],[" ~/gdb $",{"fg":4,"bold":true}],[" # MH! let's find the pwd                                              ",{}]]},"cursor":{"x":44}}],[0.24923,{"lines":{"5":[["r1x@testbed",{"fg":2,"bold":true}],[" ~/gdb $",{"fg":4,"bold":true}],[" # MH! let's find the pwd!                                             ",{}]]},"cursor":{"x":45}}],[0.442824,{"cursor":{"x":0,"y":6}}],[0.000646,{"lines":{"6":[["r1x@testbed",{"fg":2,"bold":true}],[" ~/gdb $",{"fg":4,"bold":true}],["                                                                       ",{}]]},"cursor":{"x":20}}],[1.438784,{"lines":{"6":[["r1x@testbed",{"fg":2,"bold":true}],[" ~/gdb $",{"fg":4,"bold":true}],[" g                                                                     ",{}]]},"cursor":{"x":21}}],[0.204995,{"lines":{"6":[["r1x@testbed",{"fg":2,"bold":true}],[" ~/gdb $",{"fg":4,"bold":true}],[" gd                                                                    ",{}]]},"cursor":{"x":22}}],[0.07239900000000001,{"lines":{"6":[["r1x@testbed",{"fg":2,"bold":true}],[" ~/gdb $",{"fg":4,"bold":true}],[" gdb                                                                   ",{}]]},"cursor":{"x":23}}],[0.24008,{"cursor":{"x":24}}],[1.68174,{"lines":{"6":[["r1x@testbed",{"fg":2,"bold":true}],[" ~/gdb $",{"fg":4,"bold":true}],[" gdb .                                                                 ",{}]]},"cursor":{"x":25}}],[0.15001,{"lines":{"6":[["r1x@testbed",{"fg":2,"bold":true}],[" ~/gdb $",{"fg":4,"bold":true}],[" gdb ./                                                                ",{}]]},"cursor":{"x":26}}],[0.167982,{"lines":{"6":[["r1x@testbed",{"fg":2,"bold":true}],[" ~/gdb $",{"fg":4,"bold":true}],[" gdb ./p                                                               ",{}]]},"cursor":{"x":27}}],[0.063183,{"lines":{"6":[["r1x@testbed",{"fg":2,"bold":true}],[" ~/gdb $",{"fg":4,"bold":true}],[" gdb ./pa                                                              ",{}]]},"cursor":{"x":28}}],[0.07185800000000001,{"lines":{"6":[["r1x@testbed",{"fg":2,"bold":true}],[" ~/gdb $",{"fg":4,"bold":true}],[" gdb ./pas                                                             ",{}]]},"cursor":{"x":29}}],[0.22819,{"lines":{"6":[["r1x@testbed",{"fg":2,"bold":true}],[" ~/gdb $",{"fg":4,"bold":true}],[" gdb ./password                                                        ",{}]]},"cursor":{"x":35}}],[2.508793,{"cursor":{"x":0,"y":7}}],[0.033921,{"lines":{"7":[["GNU gdb (Gentoo 7.5.1 p2) 7.5.1                                                           ",{}]]},"cursor":{"x":31}}],[0.002311,{"lines":{"8":[["Copyright (C) 2012 Free Software Foundation, Inc.                                         ",{}]],"9":[["License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>             ",{}]],"10":[["This is free software: you are free to change and redistribute it.                        ",{}]],"11":[["There is NO WARRANTY, to the extent permitted by law.  Type \"show copying\"                ",{}]],"12":[["and \"show warranty\" for details.                                                          ",{}]],"13":[["This GDB was configured as \"i686-pc-linux-gnu\".                                           ",{}]],"14":[["For bug reporting instructions, please see:                                               ",{}]],"15":[["<http://bugs.gentoo.org/>...                                                              ",{}]],"16":[["Reading symbols from /home/r1x/gdb/password...(no debugging symbols found)...done.        ",{}]],"17":[["(gdb)                                                                                     ",{}]]},"cursor":{"x":6,"y":17}}],[1.756928,{"lines":{"17":[["(gdb) d                                                                                   ",{}]]},"cursor":{"x":7}}],[0.093654,{"lines":{"17":[["(gdb) di                                                                                  ",{}]]},"cursor":{"x":8}}],[0.095584,{"lines":{"17":[["(gdb) dis                                                                                 ",{}]]},"cursor":{"x":9}}],[0.063948,{"lines":{"17":[["(gdb) disa                                                                                ",{}]]},"cursor":{"x":10}}],[0.120629,{"lines":{"17":[["(gdb) disas                                                                               ",{}]]},"cursor":{"x":11}}],[0.135456,{"lines":{"17":[["(gdb) disass                                                                              ",{}]]},"cursor":{"x":12}}],[0.098802,{"cursor":{"x":13}}],[0.118186,{"lines":{"17":[["(gdb) disass m                                                                            ",{}]]},"cursor":{"x":14}}],[0.135356,{"lines":{"17":[["(gdb) disass ma                                                                           ",{}]]},"cursor":{"x":15}}],[0.057,{"lines":{"17":[["(gdb) disass mai                                                                          ",{}]]},"cursor":{"x":16}}],[0.071797,{"lines":{"17":[["(gdb) disass main                                                                         ",{}]]},"cursor":{"x":17}}],[0.425867,{"cursor":{"x":0,"y":18}}],[0.010399,{"lines":{"0":[["Dump of assembler code for function main:                                                 ",{}]],"1":[["   0x08048567 <+0>:     push   ebp                                                        ",{}]],"2":[["   0x08048568 <+1>:     mov    ebp,esp                                                    ",{}]],"3":[["   0x0804856a <+3>:     and    esp,0xfffffff0                                             ",{}]],"4":[["   0x0804856d <+6>:     sub    esp,0x20                                                   ",{}]],"5":[["   0x08048570 <+9>:     cmp    DWORD PTR [ebp+0x8],0x2                                    ",{}]],"6":[["   0x08048574 <+13>:    je     0x8048589 <main+34>                                        ",{}]],"7":[["   0x08048576 <+15>:    mov    DWORD PTR [esp],0x804867b                                  ",{}]],"8":[["   0x0804857d <+22>:    call   0x80483a0 <puts@plt>                                       ",{}]],"9":[["   0x08048582 <+27>:    mov    eax,0x1                                                    ",{}]],"10":[["   0x08048587 <+32>:    jmp    0x80485d3 <main+108>                                       ",{}]],"11":[["   0x08048589 <+34>:    mov    eax,DWORD PTR [ebp+0xc]                                    ",{}]],"12":[["   0x0804858c <+37>:    mov    eax,DWORD PTR [eax+0x4]                                    ",{}]],"13":[["   0x0804858f <+40>:    mov    DWORD PTR [esp+0x1c],eax                                   ",{}]],"14":[["   0x08048593 <+44>:    call   0x80484dc <getpassword>                                    ",{}]],"15":[["   0x08048598 <+49>:    mov    DWORD PTR [esp+0x18],eax                                   ",{}]],"16":[["   0x0804859c <+53>:    mov    eax,DWORD PTR [esp+0x18]                                   ",{}]],"17":[["   0x080485a0 <+57>:    mov    DWORD PTR [esp+0x4],eax                                    ",{}]],"18":[["   0x080485a4 <+61>:    mov    eax,DWORD PTR [esp+0x1c]                                   ",{}]],"19":[["   0x080485a8 <+65>:    mov    DWORD PTR [esp],eax                                        ",{}]],"20":[["   0x080485ab <+68>:    call   0x8048380 <strcmp@plt>                                     ",{}]],"21":[["   0x080485b0 <+73>:    test   eax,eax                                                    ",{}]],"22":[["   0x080485b2 <+75>:    jne    0x80485c2 <main+91>                                        ",{}]],"23":[["   0x080485b4 <+77>:    mov    DWORD PTR [esp],0x8048695                                  ",{}]],"24":[["   0x080485bb <+84>:    call   0x80483a0 <puts@plt>                                       ",{}]],"25":[["   0x080485c0 <+89>:    jmp    0x80485ce <main+103>                                       ",{}]],"26":[["   0x080485c2 <+91>:    mov    DWORD PTR [esp],0x80486a8                                  ",{}]],"27":[["---Type <return> to continue, or q <return> to quit---                                    ",{}]]},"cursor":{"x":54,"y":27}}],[3.757332,{"lines":{"0":[["   0x08048567 <+0>:     push   ebp                                                        ",{}]],"1":[["   0x08048568 <+1>:     mov    ebp,esp                                                    ",{}]],"2":[["   0x0804856a <+3>:     and    esp,0xfffffff0                                             ",{}]],"3":[["   0x0804856d <+6>:     sub    esp,0x20                                                   ",{}]],"4":[["   0x08048570 <+9>:     cmp    DWORD PTR [ebp+0x8],0x2                                    ",{}]],"5":[["   0x08048574 <+13>:    je     0x8048589 <main+34>                                        ",{}]],"6":[["   0x08048576 <+15>:    mov    DWORD PTR [esp],0x804867b                                  ",{}]],"7":[["   0x0804857d <+22>:    call   0x80483a0 <puts@plt>                                       ",{}]],"8":[["   0x08048582 <+27>:    mov    eax,0x1                                                    ",{}]],"9":[["   0x08048587 <+32>:    jmp    0x80485d3 <main+108>                                       ",{}]],"10":[["   0x08048589 <+34>:    mov    eax,DWORD PTR [ebp+0xc]                                    ",{}]],"11":[["   0x0804858c <+37>:    mov    eax,DWORD PTR [eax+0x4]                                    ",{}]],"12":[["   0x0804858f <+40>:    mov    DWORD PTR [esp+0x1c],eax                                   ",{}]],"13":[["   0x08048593 <+44>:    call   0x80484dc <getpassword>                                    ",{}]],"14":[["   0x08048598 <+49>:    mov    DWORD PTR [esp+0x18],eax                                   ",{}]],"15":[["   0x0804859c <+53>:    mov    eax,DWORD PTR [esp+0x18]                                   ",{}]],"16":[["   0x080485a0 <+57>:    mov    DWORD PTR [esp+0x4],eax                                    ",{}]],"17":[["   0x080485a4 <+61>:    mov    eax,DWORD PTR [esp+0x1c]                                   ",{}]],"18":[["   0x080485a8 <+65>:    mov    DWORD PTR [esp],eax                                        ",{}]],"19":[["   0x080485ab <+68>:    call   0x8048380 <strcmp@plt>                                     ",{}]],"20":[["   0x080485b0 <+73>:    test   eax,eax                                                    ",{}]],"21":[["   0x080485b2 <+75>:    jne    0x80485c2 <main+91>                                        ",{}]],"22":[["   0x080485b4 <+77>:    mov    DWORD PTR [esp],0x8048695                                  ",{}]],"23":[["   0x080485bb <+84>:    call   0x80483a0 <puts@plt>                                       ",{}]],"24":[["   0x080485c0 <+89>:    jmp    0x80485ce <main+103>                                       ",{}]],"25":[["   0x080485c2 <+91>:    mov    DWORD PTR [esp],0x80486a8                                  ",{}]],"26":[["---Type <return> to continue, or q <return> to quit---                                    ",{}]],"27":[["                                                                                          ",{}]]},"cursor":{"x":0}}],[0.001562,{"lines":{"0":[["   0x08048574 <+13>:    je     0x8048589 <main+34>                                        ",{}]],"1":[["   0x08048576 <+15>:    mov    DWORD PTR [esp],0x804867b                                  ",{}]],"2":[["   0x0804857d <+22>:    call   0x80483a0 <puts@plt>                                       ",{}]],"3":[["   0x08048582 <+27>:    mov    eax,0x1                                                    ",{}]],"4":[["   0x08048587 <+32>:    jmp    0x80485d3 <main+108>                                       ",{}]],"5":[["   0x08048589 <+34>:    mov    eax,DWORD PTR [ebp+0xc]                                    ",{}]],"6":[["   0x0804858c <+37>:    mov    eax,DWORD PTR [eax+0x4]                                    ",{}]],"7":[["   0x0804858f <+40>:    mov    DWORD PTR [esp+0x1c],eax                                   ",{}]],"8":[["   0x08048593 <+44>:    call   0x80484dc <getpassword>                                    ",{}]],"9":[["   0x08048598 <+49>:    mov    DWORD PTR [esp+0x18],eax                                   ",{}]],"10":[["   0x0804859c <+53>:    mov    eax,DWORD PTR [esp+0x18]                                   ",{}]],"11":[["   0x080485a0 <+57>:    mov    DWORD PTR [esp+0x4],eax                                    ",{}]],"12":[["   0x080485a4 <+61>:    mov    eax,DWORD PTR [esp+0x1c]                                   ",{}]],"13":[["   0x080485a8 <+65>:    mov    DWORD PTR [esp],eax                                        ",{}]],"14":[["   0x080485ab <+68>:    call   0x8048380 <strcmp@plt>                                     ",{}]],"15":[["   0x080485b0 <+73>:    test   eax,eax                                                    ",{}]],"16":[["   0x080485b2 <+75>:    jne    0x80485c2 <main+91>                                        ",{}]],"17":[["   0x080485b4 <+77>:    mov    DWORD PTR [esp],0x8048695                                  ",{}]],"18":[["   0x080485bb <+84>:    call   0x80483a0 <puts@plt>                                       ",{}]],"19":[["   0x080485c0 <+89>:    jmp    0x80485ce <main+103>                                       ",{}]],"20":[["   0x080485c2 <+91>:    mov    DWORD PTR [esp],0x80486a8                                  ",{}]],"21":[["---Type <return> to continue, or q <return> to quit---                                    ",{}]],"22":[["   0x080485c9 <+98>:    call   0x80483a0 <puts@plt>                                       ",{}]],"23":[["   0x080485ce <+103>:   mov    eax,0x0                                                    ",{}]],"24":[["   0x080485d3 <+108>:   leave                                                             ",{}]],"25":[["   0x080485d4 <+109>:   ret                                                               ",{}]],"26":[["End of assembler dump.                                                                    ",{}]],"27":[["(gdb)                                                                                     ",{}]]},"cursor":{"x":6}}],[1.503298,{"lines":{"27":[["(gdb) #                                                                                   ",{}]]},"cursor":{"x":7}}],[0.141274,{"cursor":{"x":8}}],[0.362127,{"lines":{"27":[["(gdb) # q                                                                                 ",{}]]},"cursor":{"x":9}}],[0.124819,{"lines":{"27":[["(gdb) # qu                                                                                ",{}]]},"cursor":{"x":10}}],[0.032554,{"lines":{"27":[["(gdb) # qui                                                                               ",{}]]},"cursor":{"x":11}}],[0.151701,{"lines":{"27":[["(gdb) # quit                                                                              ",{}]]},"cursor":{"x":12}}],[0.047857,{"lines":{"27":[["(gdb) # quite                                                                             ",{}]]},"cursor":{"x":13}}],[0.080216,{"cursor":{"x":14}}],[0.12868,{"lines":{"27":[["(gdb) # quite s                                                                           ",{}]]},"cursor":{"x":15}}],[0.111035,{"lines":{"27":[["(gdb) # quite st                                                                          ",{}]]},"cursor":{"x":16}}],[0.45918,{"lines":{"27":[["(gdb) # quite s                                                                           ",{}]]},"cursor":{"x":15}}],[0.149157,{"lines":{"27":[["(gdb) # quite sm                                                                          ",{}]]},"cursor":{"x":16}}],[0.112523,{"lines":{"27":[["(gdb) # quite sma                                                                         ",{}]]},"cursor":{"x":17}}],[0.095142,{"lines":{"27":[["(gdb) # quite smal                                                                        ",{}]]},"cursor":{"x":18}}],[0.112295,{"lines":{"27":[["(gdb) # quite small                                                                       ",{}]]},"cursor":{"x":19}}],[1.267377,{"lines":{"27":[["(gdb) # quite small!                                                                      ",{}]]},"cursor":{"x":20}}],[0.172236,{"cursor":{"x":21}}],[0.1845,{"lines":{"27":[["(gdb) # quite small! l                                                                    ",{}]]},"cursor":{"x":22}}],[0.056295,{"lines":{"27":[["(gdb) # quite small! le                                                                   ",{}]]},"cursor":{"x":23}}],[0.191105,{"lines":{"27":[["(gdb) # quite small! let                                                                  ",{}]]},"cursor":{"x":24}}],[0.151911,{"lines":{"27":[["(gdb) # quite small! let'                                                                 ",{}]]},"cursor":{"x":25}}],[0.112635,{"lines":{"27":[["(gdb) # quite small! let's                                                                ",{}]]},"cursor":{"x":26}}],[0.143429,{"cursor":{"x":27}}],[0.192883,{"lines":{"27":[["(gdb) # quite small! let's e                                                              ",{}]]},"cursor":{"x":28}}],[0.1758,{"lines":{"27":[["(gdb) # quite small! let's ex                                                             ",{}]]},"cursor":{"x":29}}],[0.167293,{"lines":{"27":[["(gdb) # quite small! let's exe                                                            ",{}]]},"cursor":{"x":30}}],[0.13676,{"lines":{"27":[["(gdb) # quite small! let's exec                                                           ",{}]]},"cursor":{"x":31}}],[0.119248,{"lines":{"27":[["(gdb) # quite small! let's execu                                                          ",{}]]},"cursor":{"x":32}}],[0.104007,{"lines":{"27":[["(gdb) # quite small! let's execut                                                         ",{}]]},"cursor":{"x":33}}],[0.040975,{"lines":{"27":[["(gdb) # quite small! let's execute                                                        ",{}]]},"cursor":{"x":34}}],[0.095515,{"cursor":{"x":35}}],[0.136555,{"lines":{"27":[["(gdb) # quite small! let's execute s                                                      ",{}]]},"cursor":{"x":36}}],[0.175571,{"lines":{"27":[["(gdb) # quite small! let's execute st                                                     ",{}]]},"cursor":{"x":37}}],[0.056478,{"lines":{"27":[["(gdb) # quite small! let's execute ste                                                    ",{}]]},"cursor":{"x":38}}],[0.5543169999999999,{"lines":{"27":[["(gdb) # quite small! let's execute step                                                   ",{}]]},"cursor":{"x":39}}],[0.189143,{"lines":{"27":[["(gdb) # quite small! let's execute step-                                                  ",{}]]},"cursor":{"x":40}}],[0.207388,{"lines":{"27":[["(gdb) # quite small! let's execute step-b                                                 ",{}]]},"cursor":{"x":41}}],[0.122607,{"lines":{"27":[["(gdb) # quite small! let's execute step-by                                                ",{}]]},"cursor":{"x":42}}],[0.303826,{"lines":{"27":[["(gdb) # quite small! let's execute step-by-                                               ",{}]]},"cursor":{"x":43}}],[0.206553,{"lines":{"27":[["(gdb) # quite small! let's execute step-by-s                                              ",{}]]},"cursor":{"x":44}}],[0.175776,{"lines":{"27":[["(gdb) # quite small! let's execute step-by-st                                             ",{}]]},"cursor":{"x":45}}],[0.031394,{"lines":{"27":[["(gdb) # quite small! let's execute step-by-ste                                            ",{}]]},"cursor":{"x":46}}],[0.072364,{"lines":{"27":[["(gdb) # quite small! let's execute step-by-step                                           ",{}]]},"cursor":{"x":47}}],[0.474596,{"lines":{"0":[["   0x08048576 <+15>:    mov    DWORD PTR [esp],0x804867b                                  ",{}]],"1":[["   0x0804857d <+22>:    call   0x80483a0 <puts@plt>                                       ",{}]],"2":[["   0x08048582 <+27>:    mov    eax,0x1                                                    ",{}]],"3":[["   0x08048587 <+32>:    jmp    0x80485d3 <main+108>                                       ",{}]],"4":[["   0x08048589 <+34>:    mov    eax,DWORD PTR [ebp+0xc]                                    ",{}]],"5":[["   0x0804858c <+37>:    mov    eax,DWORD PTR [eax+0x4]                                    ",{}]],"6":[["   0x0804858f <+40>:    mov    DWORD PTR [esp+0x1c],eax                                   ",{}]],"7":[["   0x08048593 <+44>:    call   0x80484dc <getpassword>                                    ",{}]],"8":[["   0x08048598 <+49>:    mov    DWORD PTR [esp+0x18],eax                                   ",{}]],"9":[["   0x0804859c <+53>:    mov    eax,DWORD PTR [esp+0x18]                                   ",{}]],"10":[["   0x080485a0 <+57>:    mov    DWORD PTR [esp+0x4],eax                                    ",{}]],"11":[["   0x080485a4 <+61>:    mov    eax,DWORD PTR [esp+0x1c]                                   ",{}]],"12":[["   0x080485a8 <+65>:    mov    DWORD PTR [esp],eax                                        ",{}]],"13":[["   0x080485ab <+68>:    call   0x8048380 <strcmp@plt>                                     ",{}]],"14":[["   0x080485b0 <+73>:    test   eax,eax                                                    ",{}]],"15":[["   0x080485b2 <+75>:    jne    0x80485c2 <main+91>                                        ",{}]],"16":[["   0x080485b4 <+77>:    mov    DWORD PTR [esp],0x8048695                                  ",{}]],"17":[["   0x080485bb <+84>:    call   0x80483a0 <puts@plt>                                       ",{}]],"18":[["   0x080485c0 <+89>:    jmp    0x80485ce <main+103>                                       ",{}]],"19":[["   0x080485c2 <+91>:    mov    DWORD PTR [esp],0x80486a8                                  ",{}]],"20":[["---Type <return> to continue, or q <return> to quit---                                    ",{}]],"21":[["   0x080485c9 <+98>:    call   0x80483a0 <puts@plt>                                       ",{}]],"22":[["   0x080485ce <+103>:   mov    eax,0x0                                                    ",{}]],"23":[["   0x080485d3 <+108>:   leave                                                             ",{}]],"24":[["   0x080485d4 <+109>:   ret                                                               ",{}]],"25":[["End of assembler dump.                                                                    ",{}]],"26":[["(gdb) # quite small! let's execute step-by-step                                           ",{}]],"27":[["(gdb)                                                                                     ",{}]]},"cursor":{"x":6}}],[2.527907,{"lines":{"27":[["(gdb) b                                                                                   ",{}]]},"cursor":{"x":7}}],[0.070369,{"lines":{"27":[["(gdb) br                                                                                  ",{}]]},"cursor":{"x":8}}],[0.030153,{"lines":{"27":[["(gdb) bre                                                                                 ",{}]]},"cursor":{"x":9}}],[0.200875,{"lines":{"27":[["(gdb) brea                                                                                ",{}]]},"cursor":{"x":10}}],[0.055122,{"lines":{"27":[["(gdb) break                                                                               ",{}]]},"cursor":{"x":11}}],[0.11279,{"cursor":{"x":12}}],[0.127819,{"lines":{"27":[["(gdb) break m                                                                             ",{}]]},"cursor":{"x":13}}],[0.104032,{"lines":{"27":[["(gdb) break ma                                                                            ",{}]]},"cursor":{"x":14}}],[0.079541,{"lines":{"27":[["(gdb) break mai                                                                           ",{}]]},"cursor":{"x":15}}],[0.072473,{"lines":{"27":[["(gdb) break main                                                                          ",{}]]},"cursor":{"x":16}}],[0.33125,{"lines":{"0":[["   0x08048582 <+27>:    mov    eax,0x1                                                    ",{}]],"1":[["   0x08048587 <+32>:    jmp    0x80485d3 <main+108>                                       ",{}]],"2":[["   0x08048589 <+34>:    mov    eax,DWORD PTR [ebp+0xc]                                    ",{}]],"3":[["   0x0804858c <+37>:    mov    eax,DWORD PTR [eax+0x4]                                    ",{}]],"4":[["   0x0804858f <+40>:    mov    DWORD PTR [esp+0x1c],eax                                   ",{}]],"5":[["   0x08048593 <+44>:    call   0x80484dc <getpassword>                                    ",{}]],"6":[["   0x08048598 <+49>:    mov    DWORD PTR [esp+0x18],eax                                   ",{}]],"7":[["   0x0804859c <+53>:    mov    eax,DWORD PTR [esp+0x18]                                   ",{}]],"8":[["   0x080485a0 <+57>:    mov    DWORD PTR [esp+0x4],eax                                    ",{}]],"9":[["   0x080485a4 <+61>:    mov    eax,DWORD PTR [esp+0x1c]                                   ",{}]],"10":[["   0x080485a8 <+65>:    mov    DWORD PTR [esp],eax                                        ",{}]],"11":[["   0x080485ab <+68>:    call   0x8048380 <strcmp@plt>                                     ",{}]],"12":[["   0x080485b0 <+73>:    test   eax,eax                                                    ",{}]],"13":[["   0x080485b2 <+75>:    jne    0x80485c2 <main+91>                                        ",{}]],"14":[["   0x080485b4 <+77>:    mov    DWORD PTR [esp],0x8048695                                  ",{}]],"15":[["   0x080485bb <+84>:    call   0x80483a0 <puts@plt>                                       ",{}]],"16":[["   0x080485c0 <+89>:    jmp    0x80485ce <main+103>                                       ",{}]],"17":[["   0x080485c2 <+91>:    mov    DWORD PTR [esp],0x80486a8                                  ",{}]],"18":[["---Type <return> to continue, or q <return> to quit---                                    ",{}]],"19":[["   0x080485c9 <+98>:    call   0x80483a0 <puts@plt>                                       ",{}]],"20":[["   0x080485ce <+103>:   mov    eax,0x0                                                    ",{}]],"21":[["   0x080485d3 <+108>:   leave                                                             ",{}]],"22":[["   0x080485d4 <+109>:   ret                                                               ",{}]],"23":[["End of assembler dump.                                                                    ",{}]],"24":[["(gdb) # quite small! let's execute step-by-step                                           ",{}]],"25":[["(gdb) break main                                                                          ",{}]],"26":[["Breakpoint 1 at 0x804856a                                                                 ",{}]],"27":[["(gdb)                                                                                     ",{}]]},"cursor":{"x":6}}],[1.447839,{"lines":{"27":[["(gdb) r                                                                                   ",{}]]},"cursor":{"x":7}}],[0.16492,{"cursor":{"x":8}}],[0.282817,{"lines":{"27":[["(gdb) r 1                                                                                 ",{}]]},"cursor":{"x":9}}],[0.013152,{"lines":{"27":[["(gdb) r 12                                                                                ",{}]]},"cursor":{"x":10}}],[0.103799,{"lines":{"27":[["(gdb) r 123                                                                               ",{}]]},"cursor":{"x":11}}],[0.264038,{"lines":{"27":[["(gdb) r 1234                                                                              ",{}]]},"cursor":{"x":12}}],[0.145595,{"cursor":{"x":13}}],[0.768938,{"lines":{"27":[["(gdb) r 1234 #                                                                            ",{}]]},"cursor":{"x":14}}],[0.12505,{"cursor":{"x":15}}],[0.288408,{"lines":{"27":[["(gdb) r 1234 # y                                                                          ",{}]]},"cursor":{"x":16}}],[0.024206,{"lines":{"27":[["(gdb) r 1234 # ye                                                                         ",{}]]},"cursor":{"x":17}}],[0.176118,{"lines":{"27":[["(gdb) r 1234 # yes                                                                        ",{}]]},"cursor":{"x":18}}],[0.127738,{"cursor":{"x":19}}],[0.144412,{"lines":{"27":[["(gdb) r 1234 # yes w                                                                      ",{}]]},"cursor":{"x":20}}],[0.159682,{"lines":{"27":[["(gdb) r 1234 # yes we                                                                     ",{}]]},"cursor":{"x":21}}],[0.09633899999999999,{"cursor":{"x":22}}],[0.095531,{"lines":{"27":[["(gdb) r 1234 # yes we c                                                                   ",{}]]},"cursor":{"x":23}}],[0.056311,{"lines":{"27":[["(gdb) r 1234 # yes we ca                                                                  ",{}]]},"cursor":{"x":24}}],[0.070941,{"lines":{"27":[["(gdb) r 1234 # yes we can                                                                 ",{}]]},"cursor":{"x":25}}],[0.072522,{"cursor":{"x":26}}],[0.50658,{"lines":{"27":[["(gdb) r 1234 # yes we can g                                                               ",{}]]},"cursor":{"x":27}}],[0.02155,{"lines":{"27":[["(gdb) r 1234 # yes we can gi                                                              ",{}]]},"cursor":{"x":28}}],[0.184212,{"lines":{"27":[["(gdb) r 1234 # yes we can giv                                                             ",{}]]},"cursor":{"x":29}}],[0.048818,{"lines":{"27":[["(gdb) r 1234 # yes we can give                                                            ",{}]]},"cursor":{"x":30}}],[0.086135,{"cursor":{"x":31}}],[0.779655,{"lines":{"27":[["(gdb) r 1234 # yes we can give p                                                          ",{}]]},"cursor":{"x":32}}],[0.060826,{"lines":{"27":[["(gdb) r 1234 # yes we can give pa                                                         ",{}]]},"cursor":{"x":33}}],[0.177522,{"lines":{"27":[["(gdb) r 1234 # yes we can give par                                                        ",{}]]},"cursor":{"x":34}}],[0.06700299999999999,{"lines":{"27":[["(gdb) r 1234 # yes we can give para                                                       ",{}]]},"cursor":{"x":35}}],[0.12328,{"lines":{"27":[["(gdb) r 1234 # yes we can give param                                                      ",{}]]},"cursor":{"x":36}}],[0.088643,{"lines":{"27":[["(gdb) r 1234 # yes we can give parame                                                     ",{}]]},"cursor":{"x":37}}],[0.09582599999999999,{"lines":{"27":[["(gdb) r 1234 # yes we can give paramet                                                    ",{}]]},"cursor":{"x":38}}],[0.144027,{"lines":{"27":[["(gdb) r 1234 # yes we can give paramete                                                   ",{}]]},"cursor":{"x":39}}],[0.08777600000000001,{"lines":{"27":[["(gdb) r 1234 # yes we can give parameter                                                  ",{}]]},"cursor":{"x":40}}],[0.962655,{"lines":{"27":[["(gdb) r 1234 # yes we can give parameters                                                 ",{}]]},"cursor":{"x":41}}],[0.141735,{"cursor":{"x":42}}],[0.232955,{"lines":{"27":[["(gdb) r 1234 # yes we can give parameters h                                               ",{}]]},"cursor":{"x":43}}],[0.073035,{"lines":{"27":[["(gdb) r 1234 # yes we can give parameters he                                              ",{}]]},"cursor":{"x":44}}],[0.078085,{"lines":{"27":[["(gdb) r 1234 # yes we can give parameters her                                             ",{}]]},"cursor":{"x":45}}],[0.06322999999999999,{"lines":{"27":[["(gdb) r 1234 # yes we can give parameters here                                            ",{}]]},"cursor":{"x":46}}],[0.224401,{"lines":{"27":[["(gdb) r 1234 # yes we can give parameters here!                                           ",{}]]},"cursor":{"x":47}}],[0.642494,{"lines":{"0":[["   0x08048589 <+34>:    mov    eax,DWORD PTR [ebp+0xc]                                    ",{}]],"1":[["   0x0804858c <+37>:    mov    eax,DWORD PTR [eax+0x4]                                    ",{}]],"2":[["   0x0804858f <+40>:    mov    DWORD PTR [esp+0x1c],eax                                   ",{}]],"3":[["   0x08048593 <+44>:    call   0x80484dc <getpassword>                                    ",{}]],"4":[["   0x08048598 <+49>:    mov    DWORD PTR [esp+0x18],eax                                   ",{}]],"5":[["   0x0804859c <+53>:    mov    eax,DWORD PTR [esp+0x18]                                   ",{}]],"6":[["   0x080485a0 <+57>:    mov    DWORD PTR [esp+0x4],eax                                    ",{}]],"7":[["   0x080485a4 <+61>:    mov    eax,DWORD PTR [esp+0x1c]                                   ",{}]],"8":[["   0x080485a8 <+65>:    mov    DWORD PTR [esp],eax                                        ",{}]],"9":[["   0x080485ab <+68>:    call   0x8048380 <strcmp@plt>                                     ",{}]],"10":[["   0x080485b0 <+73>:    test   eax,eax                                                    ",{}]],"11":[["   0x080485b2 <+75>:    jne    0x80485c2 <main+91>                                        ",{}]],"12":[["   0x080485b4 <+77>:    mov    DWORD PTR [esp],0x8048695                                  ",{}]],"13":[["   0x080485bb <+84>:    call   0x80483a0 <puts@plt>                                       ",{}]],"14":[["   0x080485c0 <+89>:    jmp    0x80485ce <main+103>                                       ",{}]],"15":[["   0x080485c2 <+91>:    mov    DWORD PTR [esp],0x80486a8                                  ",{}]],"16":[["---Type <return> to continue, or q <return> to quit---                                    ",{}]],"17":[["   0x080485c9 <+98>:    call   0x80483a0 <puts@plt>                                       ",{}]],"18":[["   0x080485ce <+103>:   mov    eax,0x0                                                    ",{}]],"19":[["   0x080485d3 <+108>:   leave                                                             ",{}]],"20":[["   0x080485d4 <+109>:   ret                                                               ",{}]],"21":[["End of assembler dump.                                                                    ",{}]],"22":[["(gdb) # quite small! let's execute step-by-step                                           ",{}]],"23":[["(gdb) break main                                                                          ",{}]],"24":[["Breakpoint 1 at 0x804856a                                                                 ",{}]],"25":[["(gdb) r 1234 # yes we can give parameters here!                                           ",{}]],"26":[["Starting program: /home/r1x/gdb/password 1234 # yes we can give parameters here!          ",{}]],"27":[["                                                                                          ",{}]]},"cursor":{"x":0}}],[0.013768,{"lines":{"0":[["   0x0804858f <+40>:    mov    DWORD PTR [esp+0x1c],eax                                   ",{}]],"1":[["   0x08048593 <+44>:    call   0x80484dc <getpassword>                                    ",{}]],"2":[["   0x08048598 <+49>:    mov    DWORD PTR [esp+0x18],eax                                   ",{}]],"3":[["   0x0804859c <+53>:    mov    eax,DWORD PTR [esp+0x18]                                   ",{}]],"4":[["   0x080485a0 <+57>:    mov    DWORD PTR [esp+0x4],eax                                    ",{}]],"5":[["   0x080485a4 <+61>:    mov    eax,DWORD PTR [esp+0x1c]                                   ",{}]],"6":[["   0x080485a8 <+65>:    mov    DWORD PTR [esp],eax                                        ",{}]],"7":[["   0x080485ab <+68>:    call   0x8048380 <strcmp@plt>                                     ",{}]],"8":[["   0x080485b0 <+73>:    test   eax,eax                                                    ",{}]],"9":[["   0x080485b2 <+75>:    jne    0x80485c2 <main+91>                                        ",{}]],"10":[["   0x080485b4 <+77>:    mov    DWORD PTR [esp],0x8048695                                  ",{}]],"11":[["   0x080485bb <+84>:    call   0x80483a0 <puts@plt>                                       ",{}]],"12":[["   0x080485c0 <+89>:    jmp    0x80485ce <main+103>                                       ",{}]],"13":[["   0x080485c2 <+91>:    mov    DWORD PTR [esp],0x80486a8                                  ",{}]],"14":[["---Type <return> to continue, or q <return> to quit---                                    ",{}]],"15":[["   0x080485c9 <+98>:    call   0x80483a0 <puts@plt>                                       ",{}]],"16":[["   0x080485ce <+103>:   mov    eax,0x0                                                    ",{}]],"17":[["   0x080485d3 <+108>:   leave                                                             ",{}]],"18":[["   0x080485d4 <+109>:   ret                                                               ",{}]],"19":[["End of assembler dump.                                                                    ",{}]],"20":[["(gdb) # quite small! let's execute step-by-step                                           ",{}]],"21":[["(gdb) break main                                                                          ",{}]],"22":[["Breakpoint 1 at 0x804856a                                                                 ",{}]],"23":[["(gdb) r 1234 # yes we can give parameters here!                                           ",{}]],"24":[["Starting program: /home/r1x/gdb/password 1234 # yes we can give parameters here!          ",{}]],"25":[["warning: Could not load shared library symbols for linux-gate.so.1.                       ",{}]],"26":[["Do you need \"set solib-search-path\" or \"set sysroot\"?                                     ",{}]]}}],[0.019106,{"lines":{"0":[["   0x08048593 <+44>:    call   0x80484dc <getpassword>                                    ",{}]],"1":[["   0x08048598 <+49>:    mov    DWORD PTR [esp+0x18],eax                                   ",{}]],"2":[["   0x0804859c <+53>:    mov    eax,DWORD PTR [esp+0x18]                                   ",{}]],"3":[["   0x080485a0 <+57>:    mov    DWORD PTR [esp+0x4],eax                                    ",{}]],"4":[["   0x080485a4 <+61>:    mov    eax,DWORD PTR [esp+0x1c]                                   ",{}]],"5":[["   0x080485a8 <+65>:    mov    DWORD PTR [esp],eax                                        ",{}]],"6":[["   0x080485ab <+68>:    call   0x8048380 <strcmp@plt>                                     ",{}]],"7":[["   0x080485b0 <+73>:    test   eax,eax                                                    ",{}]],"8":[["   0x080485b2 <+75>:    jne    0x80485c2 <main+91>                                        ",{}]],"9":[["   0x080485b4 <+77>:    mov    DWORD PTR [esp],0x8048695                                  ",{}]],"10":[["   0x080485bb <+84>:    call   0x80483a0 <puts@plt>                                       ",{}]],"11":[["   0x080485c0 <+89>:    jmp    0x80485ce <main+103>                                       ",{}]],"12":[["   0x080485c2 <+91>:    mov    DWORD PTR [esp],0x80486a8                                  ",{}]],"13":[["---Type <return> to continue, or q <return> to quit---                                    ",{}]],"14":[["   0x080485c9 <+98>:    call   0x80483a0 <puts@plt>                                       ",{}]],"15":[["   0x080485ce <+103>:   mov    eax,0x0                                                    ",{}]],"16":[["   0x080485d3 <+108>:   leave                                                             ",{}]],"17":[["   0x080485d4 <+109>:   ret                                                               ",{}]],"18":[["End of assembler dump.                                                                    ",{}]],"19":[["(gdb) # quite small! let's execute step-by-step                                           ",{}]],"20":[["(gdb) break main                                                                          ",{}]],"21":[["Breakpoint 1 at 0x804856a                                                                 ",{}]],"22":[["(gdb) r 1234 # yes we can give parameters here!                                           ",{}]],"23":[["Starting program: /home/r1x/gdb/password 1234 # yes we can give parameters here!          ",{}]],"24":[["warning: Could not load shared library symbols for linux-gate.so.1.                       ",{}]],"25":[["Do you need \"set solib-search-path\" or \"set sysroot\"?                                     ",{}]],"26":[["                                                                                          ",{}]]}}],[0.000372,{"lines":{"0":[["   0x08048598 <+49>:    mov    DWORD PTR [esp+0x18],eax                                   ",{}]],"1":[["   0x0804859c <+53>:    mov    eax,DWORD PTR [esp+0x18]                                   ",{}]],"2":[["   0x080485a0 <+57>:    mov    DWORD PTR [esp+0x4],eax                                    ",{}]],"3":[["   0x080485a4 <+61>:    mov    eax,DWORD PTR [esp+0x1c]                                   ",{}]],"4":[["   0x080485a8 <+65>:    mov    DWORD PTR [esp],eax                                        ",{}]],"5":[["   0x080485ab <+68>:    call   0x8048380 <strcmp@plt>                                     ",{}]],"6":[["   0x080485b0 <+73>:    test   eax,eax                                                    ",{}]],"7":[["   0x080485b2 <+75>:    jne    0x80485c2 <main+91>                                        ",{}]],"8":[["   0x080485b4 <+77>:    mov    DWORD PTR [esp],0x8048695                                  ",{}]],"9":[["   0x080485bb <+84>:    call   0x80483a0 <puts@plt>                                       ",{}]],"10":[["   0x080485c0 <+89>:    jmp    0x80485ce <main+103>                                       ",{}]],"11":[["   0x080485c2 <+91>:    mov    DWORD PTR [esp],0x80486a8                                  ",{}]],"12":[["---Type <return> to continue, or q <return> to quit---                                    ",{}]],"13":[["   0x080485c9 <+98>:    call   0x80483a0 <puts@plt>                                       ",{}]],"14":[["   0x080485ce <+103>:   mov    eax,0x0                                                    ",{}]],"15":[["   0x080485d3 <+108>:   leave                                                             ",{}]],"16":[["   0x080485d4 <+109>:   ret                                                               ",{}]],"17":[["End of assembler dump.                                                                    ",{}]],"18":[["(gdb) # quite small! let's execute step-by-step                                           ",{}]],"19":[["(gdb) break main                                                                          ",{}]],"20":[["Breakpoint 1 at 0x804856a                                                                 ",{}]],"21":[["(gdb) r 1234 # yes we can give parameters here!                                           ",{}]],"22":[["Starting program: /home/r1x/gdb/password 1234 # yes we can give parameters here!          ",{}]],"23":[["warning: Could not load shared library symbols for linux-gate.so.1.                       ",{}]],"24":[["Do you need \"set solib-search-path\" or \"set sysroot\"?                                     ",{}]],"25":[["                                                                                          ",{}]],"26":[["Breakpoint 1, 0x0804856a in main ()                                                       ",{}]],"27":[["(gdb)                                                                                     ",{}]]},"cursor":{"x":6}}],[3.766689,{"lines":{"27":[["(gdb) x                                                                                   ",{}]]},"cursor":{"x":7}}],[0.237254,{"lines":{"27":[["(gdb) x/                                                                                  ",{}]]},"cursor":{"x":8}}],[0.248306,{"lines":{"27":[["(gdb) x/i                                                                                 ",{}]]},"cursor":{"x":9}}],[0.128553,{"cursor":{"x":10}}],[0.354166,{"lines":{"27":[["(gdb) x/i $                                                                               ",{}]]},"cursor":{"x":11}}],[0.672475,{"lines":{"27":[["(gdb) x/i $e                                                                              ",{}]]},"cursor":{"x":12}}],[0.027368,{"lines":{"27":[["(gdb) x/i $ei                                                                             ",{}]]},"cursor":{"x":13}}],[0.042595,{"lines":{"27":[["(gdb) x/i $eip                                                                            ",{}]]},"cursor":{"x":14}}],[0.417343,{"lines":{"0":[["   0x0804859c <+53>:    mov    eax,DWORD PTR [esp+0x18]                                   ",{}]],"1":[["   0x080485a0 <+57>:    mov    DWORD PTR [esp+0x4],eax                                    ",{}]],"2":[["   0x080485a4 <+61>:    mov    eax,DWORD PTR [esp+0x1c]                                   ",{}]],"3":[["   0x080485a8 <+65>:    mov    DWORD PTR [esp],eax                                        ",{}]],"4":[["   0x080485ab <+68>:    call   0x8048380 <strcmp@plt>                                     ",{}]],"5":[["   0x080485b0 <+73>:    test   eax,eax                                                    ",{}]],"6":[["   0x080485b2 <+75>:    jne    0x80485c2 <main+91>                                        ",{}]],"7":[["   0x080485b4 <+77>:    mov    DWORD PTR [esp],0x8048695                                  ",{}]],"8":[["   0x080485bb <+84>:    call   0x80483a0 <puts@plt>                                       ",{}]],"9":[["   0x080485c0 <+89>:    jmp    0x80485ce <main+103>                                       ",{}]],"10":[["   0x080485c2 <+91>:    mov    DWORD PTR [esp],0x80486a8                                  ",{}]],"11":[["---Type <return> to continue, or q <return> to quit---                                    ",{}]],"12":[["   0x080485c9 <+98>:    call   0x80483a0 <puts@plt>                                       ",{}]],"13":[["   0x080485ce <+103>:   mov    eax,0x0                                                    ",{}]],"14":[["   0x080485d3 <+108>:   leave                                                             ",{}]],"15":[["   0x080485d4 <+109>:   ret                                                               ",{}]],"16":[["End of assembler dump.                                                                    ",{}]],"17":[["(gdb) # quite small! let's execute step-by-step                                           ",{}]],"18":[["(gdb) break main                                                                          ",{}]],"19":[["Breakpoint 1 at 0x804856a                                                                 ",{}]],"20":[["(gdb) r 1234 # yes we can give parameters here!                                           ",{}]],"21":[["Starting program: /home/r1x/gdb/password 1234 # yes we can give parameters here!          ",{}]],"22":[["warning: Could not load shared library symbols for linux-gate.so.1.                       ",{}]],"23":[["Do you need \"set solib-search-path\" or \"set sysroot\"?                                     ",{}]],"24":[["                                                                                          ",{}]],"25":[["Breakpoint 1, 0x0804856a in main ()                                                       ",{}]],"26":[["(gdb) x/i $eip                                                                            ",{}]],"27":[["                                                                                          ",{}]]},"cursor":{"x":0}}],[0.000417,{"lines":{"0":[["   0x080485a0 <+57>:    mov    DWORD PTR [esp+0x4],eax                                    ",{}]],"1":[["   0x080485a4 <+61>:    mov    eax,DWORD PTR [esp+0x1c]                                   ",{}]],"2":[["   0x080485a8 <+65>:    mov    DWORD PTR [esp],eax                                        ",{}]],"3":[["   0x080485ab <+68>:    call   0x8048380 <strcmp@plt>                                     ",{}]],"4":[["   0x080485b0 <+73>:    test   eax,eax                                                    ",{}]],"5":[["   0x080485b2 <+75>:    jne    0x80485c2 <main+91>                                        ",{}]],"6":[["   0x080485b4 <+77>:    mov    DWORD PTR [esp],0x8048695                                  ",{}]],"7":[["   0x080485bb <+84>:    call   0x80483a0 <puts@plt>                                       ",{}]],"8":[["   0x080485c0 <+89>:    jmp    0x80485ce <main+103>                                       ",{}]],"9":[["   0x080485c2 <+91>:    mov    DWORD PTR [esp],0x80486a8                                  ",{}]],"10":[["---Type <return> to continue, or q <return> to quit---                                    ",{}]],"11":[["   0x080485c9 <+98>:    call   0x80483a0 <puts@plt>                                       ",{}]],"12":[["   0x080485ce <+103>:   mov    eax,0x0                                                    ",{}]],"13":[["   0x080485d3 <+108>:   leave                                                             ",{}]],"14":[["   0x080485d4 <+109>:   ret                                                               ",{}]],"15":[["End of assembler dump.                                                                    ",{}]],"16":[["(gdb) # quite small! let's execute step-by-step                                           ",{}]],"17":[["(gdb) break main                                                                          ",{}]],"18":[["Breakpoint 1 at 0x804856a                                                                 ",{}]],"19":[["(gdb) r 1234 # yes we can give parameters here!                                           ",{}]],"20":[["Starting program: /home/r1x/gdb/password 1234 # yes we can give parameters here!          ",{}]],"21":[["warning: Could not load shared library symbols for linux-gate.so.1.                       ",{}]],"22":[["Do you need \"set solib-search-path\" or \"set sysroot\"?                                     ",{}]],"23":[["                                                                                          ",{}]],"24":[["Breakpoint 1, 0x0804856a in main ()                                                       ",{}]],"25":[["(gdb) x/i $eip                                                                            ",{}]],"26":[["=> 0x804856a <main+3>:  and    esp,0xfffffff0                                             ",{}]],"27":[["(gdb)                                                                                     ",{}]]},"cursor":{"x":6}}],[2.367831,{"lines":{"27":[["(gdb) n                                                                                   ",{}]]},"cursor":{"x":7}}],[0.076583,{"lines":{"27":[["(gdb) ne                                                                                  ",{}]]},"cursor":{"x":8}}],[0.176149,{"lines":{"27":[["(gdb) nex                                                                                 ",{}]]},"cursor":{"x":9}}],[0.24062,{"lines":{"27":[["(gdb) next                                                                                ",{}]]},"cursor":{"x":10}}],[0.136547,{"lines":{"27":[["(gdb) nexti                                                                               ",{}]]},"cursor":{"x":11}}],[0.577453,{"lines":{"0":[["   0x080485a4 <+61>:    mov    eax,DWORD PTR [esp+0x1c]                                   ",{}]],"1":[["   0x080485a8 <+65>:    mov    DWORD PTR [esp],eax                                        ",{}]],"2":[["   0x080485ab <+68>:    call   0x8048380 <strcmp@plt>                                     ",{}]],"3":[["   0x080485b0 <+73>:    test   eax,eax                                                    ",{}]],"4":[["   0x080485b2 <+75>:    jne    0x80485c2 <main+91>                                        ",{}]],"5":[["   0x080485b4 <+77>:    mov    DWORD PTR [esp],0x8048695                                  ",{}]],"6":[["   0x080485bb <+84>:    call   0x80483a0 <puts@plt>                                       ",{}]],"7":[["   0x080485c0 <+89>:    jmp    0x80485ce <main+103>                                       ",{}]],"8":[["   0x080485c2 <+91>:    mov    DWORD PTR [esp],0x80486a8                                  ",{}]],"9":[["---Type <return> to continue, or q <return> to quit---                                    ",{}]],"10":[["   0x080485c9 <+98>:    call   0x80483a0 <puts@plt>                                       ",{}]],"11":[["   0x080485ce <+103>:   mov    eax,0x0                                                    ",{}]],"12":[["   0x080485d3 <+108>:   leave                                                             ",{}]],"13":[["   0x080485d4 <+109>:   ret                                                               ",{}]],"14":[["End of assembler dump.                                                                    ",{}]],"15":[["(gdb) # quite small! let's execute step-by-step                                           ",{}]],"16":[["(gdb) break main                                                                          ",{}]],"17":[["Breakpoint 1 at 0x804856a                                                                 ",{}]],"18":[["(gdb) r 1234 # yes we can give parameters here!                                           ",{}]],"19":[["Starting program: /home/r1x/gdb/password 1234 # yes we can give parameters here!          ",{}]],"20":[["warning: Could not load shared library symbols for linux-gate.so.1.                       ",{}]],"21":[["Do you need \"set solib-search-path\" or \"set sysroot\"?                                     ",{}]],"22":[["                                                                                          ",{}]],"23":[["Breakpoint 1, 0x0804856a in main ()                                                       ",{}]],"24":[["(gdb) x/i $eip                                                                            ",{}]],"25":[["=> 0x804856a <main+3>:  and    esp,0xfffffff0                                             ",{}]],"26":[["(gdb) nexti                                                                               ",{}]],"27":[["                                                                                          ",{}]]},"cursor":{"x":0}}],[0.000665,{"lines":{"0":[["   0x080485a8 <+65>:    mov    DWORD PTR [esp],eax                                        ",{}]],"1":[["   0x080485ab <+68>:    call   0x8048380 <strcmp@plt>                                     ",{}]],"2":[["   0x080485b0 <+73>:    test   eax,eax                                                    ",{}]],"3":[["   0x080485b2 <+75>:    jne    0x80485c2 <main+91>                                        ",{}]],"4":[["   0x080485b4 <+77>:    mov    DWORD PTR [esp],0x8048695                                  ",{}]],"5":[["   0x080485bb <+84>:    call   0x80483a0 <puts@plt>                                       ",{}]],"6":[["   0x080485c0 <+89>:    jmp    0x80485ce <main+103>                                       ",{}]],"7":[["   0x080485c2 <+91>:    mov    DWORD PTR [esp],0x80486a8                                  ",{}]],"8":[["---Type <return> to continue, or q <return> to quit---                                    ",{}]],"9":[["   0x080485c9 <+98>:    call   0x80483a0 <puts@plt>                                       ",{}]],"10":[["   0x080485ce <+103>:   mov    eax,0x0                                                    ",{}]],"11":[["   0x080485d3 <+108>:   leave                                                             ",{}]],"12":[["   0x080485d4 <+109>:   ret                                                               ",{}]],"13":[["End of assembler dump.                                                                    ",{}]],"14":[["(gdb) # quite small! let's execute step-by-step                                           ",{}]],"15":[["(gdb) break main                                                                          ",{}]],"16":[["Breakpoint 1 at 0x804856a                                                                 ",{}]],"17":[["(gdb) r 1234 # yes we can give parameters here!                                           ",{}]],"18":[["Starting program: /home/r1x/gdb/password 1234 # yes we can give parameters here!          ",{}]],"19":[["warning: Could not load shared library symbols for linux-gate.so.1.                       ",{}]],"20":[["Do you need \"set solib-search-path\" or \"set sysroot\"?                                     ",{}]],"21":[["                                                                                          ",{}]],"22":[["Breakpoint 1, 0x0804856a in main ()                                                       ",{}]],"23":[["(gdb) x/i $eip                                                                            ",{}]],"24":[["=> 0x804856a <main+3>:  and    esp,0xfffffff0                                             ",{}]],"25":[["(gdb) nexti                                                                               ",{}]],"26":[["0x0804856d in main ()                                                                     ",{}]],"27":[["(gdb)                                                                                     ",{}]]},"cursor":{"x":6}}],[0.7975139999999999,{"lines":{"27":[["(gdb) nexti                                                                               ",{}]]},"cursor":{"x":11}}],[0.175516,{"lines":{"27":[["(gdb) x/i $eip                                                                            ",{}]]},"cursor":{"x":14}}],[0.690289,{"lines":{"0":[["   0x080485ab <+68>:    call   0x8048380 <strcmp@plt>                                     ",{}]],"1":[["   0x080485b0 <+73>:    test   eax,eax                                                    ",{}]],"2":[["   0x080485b2 <+75>:    jne    0x80485c2 <main+91>                                        ",{}]],"3":[["   0x080485b4 <+77>:    mov    DWORD PTR [esp],0x8048695                                  ",{}]],"4":[["   0x080485bb <+84>:    call   0x80483a0 <puts@plt>                                       ",{}]],"5":[["   0x080485c0 <+89>:    jmp    0x80485ce <main+103>                                       ",{}]],"6":[["   0x080485c2 <+91>:    mov    DWORD PTR [esp],0x80486a8                                  ",{}]],"7":[["---Type <return> to continue, or q <return> to quit---                                    ",{}]],"8":[["   0x080485c9 <+98>:    call   0x80483a0 <puts@plt>                                       ",{}]],"9":[["   0x080485ce <+103>:   mov    eax,0x0                                                    ",{}]],"10":[["   0x080485d3 <+108>:   leave                                                             ",{}]],"11":[["   0x080485d4 <+109>:   ret                                                               ",{}]],"12":[["End of assembler dump.                                                                    ",{}]],"13":[["(gdb) # quite small! let's execute step-by-step                                           ",{}]],"14":[["(gdb) break main                                                                          ",{}]],"15":[["Breakpoint 1 at 0x804856a                                                                 ",{}]],"16":[["(gdb) r 1234 # yes we can give parameters here!                                           ",{}]],"17":[["Starting program: /home/r1x/gdb/password 1234 # yes we can give parameters here!          ",{}]],"18":[["warning: Could not load shared library symbols for linux-gate.so.1.                       ",{}]],"19":[["Do you need \"set solib-search-path\" or \"set sysroot\"?                                     ",{}]],"20":[["                                                                                          ",{}]],"21":[["Breakpoint 1, 0x0804856a in main ()                                                       ",{}]],"22":[["(gdb) x/i $eip                                                                            ",{}]],"23":[["=> 0x804856a <main+3>:  and    esp,0xfffffff0                                             ",{}]],"24":[["(gdb) nexti                                                                               ",{}]],"25":[["0x0804856d in main ()                                                                     ",{}]],"26":[["(gdb) x/i $eip                                                                            ",{}]],"27":[["                                                                                          ",{}]]},"cursor":{"x":0}}],[0.00035,{"lines":{"0":[["   0x080485b0 <+73>:    test   eax,eax                                                    ",{}]],"1":[["   0x080485b2 <+75>:    jne    0x80485c2 <main+91>                                        ",{}]],"2":[["   0x080485b4 <+77>:    mov    DWORD PTR [esp],0x8048695                                  ",{}]],"3":[["   0x080485bb <+84>:    call   0x80483a0 <puts@plt>                                       ",{}]],"4":[["   0x080485c0 <+89>:    jmp    0x80485ce <main+103>                                       ",{}]],"5":[["   0x080485c2 <+91>:    mov    DWORD PTR [esp],0x80486a8                                  ",{}]],"6":[["---Type <return> to continue, or q <return> to quit---                                    ",{}]],"7":[["   0x080485c9 <+98>:    call   0x80483a0 <puts@plt>                                       ",{}]],"8":[["   0x080485ce <+103>:   mov    eax,0x0                                                    ",{}]],"9":[["   0x080485d3 <+108>:   leave                                                             ",{}]],"10":[["   0x080485d4 <+109>:   ret                                                               ",{}]],"11":[["End of assembler dump.                                                                    ",{}]],"12":[["(gdb) # quite small! let's execute step-by-step                                           ",{}]],"13":[["(gdb) break main                                                                          ",{}]],"14":[["Breakpoint 1 at 0x804856a                                                                 ",{}]],"15":[["(gdb) r 1234 # yes we can give parameters here!                                           ",{}]],"16":[["Starting program: /home/r1x/gdb/password 1234 # yes we can give parameters here!          ",{}]],"17":[["warning: Could not load shared library symbols for linux-gate.so.1.                       ",{}]],"18":[["Do you need \"set solib-search-path\" or \"set sysroot\"?                                     ",{}]],"19":[["                                                                                          ",{}]],"20":[["Breakpoint 1, 0x0804856a in main ()                                                       ",{}]],"21":[["(gdb) x/i $eip                                                                            ",{}]],"22":[["=> 0x804856a <main+3>:  and    esp,0xfffffff0                                             ",{}]],"23":[["(gdb) nexti                                                                               ",{}]],"24":[["0x0804856d in main ()                                                                     ",{}]],"25":[["(gdb) x/i $eip                                                                            ",{}]],"26":[["=> 0x804856d <main+6>:  sub    esp,0x20                                                   ",{}]],"27":[["(gdb)                                                                                     ",{}]]},"cursor":{"x":6}}],[2.144107,{"lines":{"27":[["(gdb) #                                                                                   ",{}]]},"cursor":{"x":7}}],[0.109024,{"cursor":{"x":8}}],[1.194677,{"lines":{"27":[["(gdb) # w                                                                                 ",{}]]},"cursor":{"x":9}}],[0.150052,{"lines":{"27":[["(gdb) # we                                                                                ",{}]]},"cursor":{"x":10}}],[0.119839,{"cursor":{"x":11}}],[0.094761,{"lines":{"27":[["(gdb) # we c                                                                              ",{}]]},"cursor":{"x":12}}],[0.073016,{"lines":{"27":[["(gdb) # we ca                                                                             ",{}]]},"cursor":{"x":13}}],[0.055482,{"lines":{"27":[["(gdb) # we can                                                                            ",{}]]},"cursor":{"x":14}}],[0.151931,{"cursor":{"x":15}}],[0.175966,{"lines":{"27":[["(gdb) # we can a                                                                          ",{}]]},"cursor":{"x":16}}],[0.144843,{"lines":{"27":[["(gdb) # we can au                                                                         ",{}]]},"cursor":{"x":17}}],[0.128096,{"lines":{"27":[["(gdb) # we can aut                                                                        ",{}]]},"cursor":{"x":18}}],[0.063287,{"lines":{"27":[["(gdb) # we can auto                                                                       ",{}]]},"cursor":{"x":19}}],[0.143145,{"lines":{"27":[["(gdb) # we can autom                                                                      ",{}]]},"cursor":{"x":20}}],[0.057378,{"lines":{"27":[["(gdb) # we can automa                                                                     ",{}]]},"cursor":{"x":21}}],[0.143183,{"lines":{"27":[["(gdb) # we can automat                                                                    ",{}]]},"cursor":{"x":22}}],[0.063999,{"lines":{"27":[["(gdb) # we can automate                                                                   ",{}]]},"cursor":{"x":23}}],[0.09567000000000001,{"cursor":{"x":24}}],[0.584614,{"lines":{"27":[["(gdb) # we can automate t                                                                 ",{}]]},"cursor":{"x":25}}],[0.03935,{"lines":{"27":[["(gdb) # we can automate th                                                                ",{}]]},"cursor":{"x":26}}],[0.048576,{"lines":{"27":[["(gdb) # we can automate thi                                                               ",{}]]},"cursor":{"x":27}}],[0.13578,{"lines":{"27":[["(gdb) # we can automate this                                                              ",{}]]},"cursor":{"x":28}}],[0.127847,{"cursor":{"x":29}}],[0.514299,{"lines":{"27":[["(gdb) # we can automate this w                                                            ",{}]]},"cursor":{"x":30}}],[0.150484,{"lines":{"27":[["(gdb) # we can automate this wi                                                           ",{}]]},"cursor":{"x":31}}],[0.127305,{"lines":{"27":[["(gdb) # we can automate this wit                                                          ",{}]]},"cursor":{"x":32}}],[0.079813,{"lines":{"27":[["(gdb) # we can automate this with                                                         ",{}]]},"cursor":{"x":33}}],[0.12072,{"lines":{"27":[["(gdb) # we can automate this witha                                                        ",{}]]},"cursor":{"x":34}}],[0.110811,{"cursor":{"x":35}}],[0.481864,{"cursor":{"x":34}}],[0.142977,{"lines":{"27":[["(gdb) # we can automate this with                                                         ",{}]]},"cursor":{"x":33}}],[0.383759,{"cursor":{"x":34}}],[0.829857,{"lines":{"27":[["(gdb) # we can automate this with a                                                       ",{}]]},"cursor":{"x":35}}],[0.012768,{"lines":{"27":[["(gdb) # we can automate this with a scri                                                  ",{}]]},"cursor":{"x":40}}],[0.125092,{"lines":{"27":[["(gdb) # we can automate this with a scrip                                                 ",{}]]},"cursor":{"x":41}}],[0.080154,{"lines":{"27":[["(gdb) # we can automate this with a script                                                ",{}]]},"cursor":{"x":42}}],[0.939125,{"lines":{"27":[["(gdb) # we can automate this with a script!                                               ",{}]]},"cursor":{"x":43}}],[0.600082,{"lines":{"0":[["   0x080485b2 <+75>:    jne    0x80485c2 <main+91>                                        ",{}]],"1":[["   0x080485b4 <+77>:    mov    DWORD PTR [esp],0x8048695                                  ",{}]],"2":[["   0x080485bb <+84>:    call   0x80483a0 <puts@plt>                                       ",{}]],"3":[["   0x080485c0 <+89>:    jmp    0x80485ce <main+103>                                       ",{}]],"4":[["   0x080485c2 <+91>:    mov    DWORD PTR [esp],0x80486a8                                  ",{}]],"5":[["---Type <return> to continue, or q <return> to quit---                                    ",{}]],"6":[["   0x080485c9 <+98>:    call   0x80483a0 <puts@plt>                                       ",{}]],"7":[["   0x080485ce <+103>:   mov    eax,0x0                                                    ",{}]],"8":[["   0x080485d3 <+108>:   leave                                                             ",{}]],"9":[["   0x080485d4 <+109>:   ret                                                               ",{}]],"10":[["End of assembler dump.                                                                    ",{}]],"11":[["(gdb) # quite small! let's execute step-by-step                                           ",{}]],"12":[["(gdb) break main                                                                          ",{}]],"13":[["Breakpoint 1 at 0x804856a                                                                 ",{}]],"14":[["(gdb) r 1234 # yes we can give parameters here!                                           ",{}]],"15":[["Starting program: /home/r1x/gdb/password 1234 # yes we can give parameters here!          ",{}]],"16":[["warning: Could not load shared library symbols for linux-gate.so.1.                       ",{}]],"17":[["Do you need \"set solib-search-path\" or \"set sysroot\"?                                     ",{}]],"18":[["                                                                                          ",{}]],"19":[["Breakpoint 1, 0x0804856a in main ()                                                       ",{}]],"20":[["(gdb) x/i $eip                                                                            ",{}]],"21":[["=> 0x804856a <main+3>:  and    esp,0xfffffff0                                             ",{}]],"22":[["(gdb) nexti                                                                               ",{}]],"23":[["0x0804856d in main ()                                                                     ",{}]],"24":[["(gdb) x/i $eip                                                                            ",{}]],"25":[["=> 0x804856d <main+6>:  sub    esp,0x20                                                   ",{}]],"26":[["(gdb) # we can automate this with a script!                                               ",{}]],"27":[["                                                                                          ",{}]]},"cursor":{"x":0}}],[0.000104,{"lines":{"27":[["(gdb)                                                                                     ",{}]]},"cursor":{"x":6}}],[1.255721,{"lines":{"27":[["(gdb) d                                                                                   ",{}]]},"cursor":{"x":7}}],[0.038168,{"lines":{"27":[["(gdb) de                                                                                  ",{}]]},"cursor":{"x":8}}],[0.167336,{"lines":{"27":[["(gdb) def                                                                                 ",{}]]},"cursor":{"x":9}}],[0.047451,{"lines":{"27":[["(gdb) defi                                                                                ",{}]]},"cursor":{"x":10}}],[0.032463,{"lines":{"27":[["(gdb) defin                                                                               ",{}]]},"cursor":{"x":11}}],[0.151754,{"lines":{"27":[["(gdb) define                                                                              ",{}]]},"cursor":{"x":12}}],[0.079571,{"cursor":{"x":13}}],[0.323217,{"lines":{"27":[["(gdb) define m                                                                            ",{}]]},"cursor":{"x":14}}],[0.222149,{"lines":{"27":[["(gdb) define my                                                                           ",{}]]},"cursor":{"x":15}}],[0.118373,{"lines":{"27":[["(gdb) define mys                                                                          ",{}]]},"cursor":{"x":16}}],[0.208284,{"lines":{"27":[["(gdb) define myst                                                                         ",{}]]},"cursor":{"x":17}}],[0.047739,{"lines":{"27":[["(gdb) define myste                                                                        ",{}]]},"cursor":{"x":18}}],[0.048033,{"lines":{"27":[["(gdb) define mystep                                                                       ",{}]]},"cursor":{"x":19}}],[0.682453,{"lines":{"0":[["   0x080485bb <+84>:    call   0x80483a0 <puts@plt>                                       ",{}]],"1":[["   0x080485c0 <+89>:    jmp    0x80485ce <main+103>                                       ",{}]],"2":[["   0x080485c2 <+91>:    mov    DWORD PTR [esp],0x80486a8                                  ",{}]],"3":[["---Type <return> to continue, or q <return> to quit---                                    ",{}]],"4":[["   0x080485c9 <+98>:    call   0x80483a0 <puts@plt>                                       ",{}]],"5":[["   0x080485ce <+103>:   mov    eax,0x0                                                    ",{}]],"6":[["   0x080485d3 <+108>:   leave                                                             ",{}]],"7":[["   0x080485d4 <+109>:   ret                                                               ",{}]],"8":[["End of assembler dump.                                                                    ",{}]],"9":[["(gdb) # quite small! let's execute step-by-step                                           ",{}]],"10":[["(gdb) break main                                                                          ",{}]],"11":[["Breakpoint 1 at 0x804856a                                                                 ",{}]],"12":[["(gdb) r 1234 # yes we can give parameters here!                                           ",{}]],"13":[["Starting program: /home/r1x/gdb/password 1234 # yes we can give parameters here!          ",{}]],"14":[["warning: Could not load shared library symbols for linux-gate.so.1.                       ",{}]],"15":[["Do you need \"set solib-search-path\" or \"set sysroot\"?                                     ",{}]],"16":[["                                                                                          ",{}]],"17":[["Breakpoint 1, 0x0804856a in main ()                                                       ",{}]],"18":[["(gdb) x/i $eip                                                                            ",{}]],"19":[["=> 0x804856a <main+3>:  and    esp,0xfffffff0                                             ",{}]],"20":[["(gdb) nexti                                                                               ",{}]],"21":[["0x0804856d in main ()                                                                     ",{}]],"22":[["(gdb) x/i $eip                                                                            ",{}]],"23":[["=> 0x804856d <main+6>:  sub    esp,0x20                                                   ",{}]],"24":[["(gdb) # we can automate this with a script!                                               ",{}]],"25":[["(gdb) define mystep                                                                       ",{}]],"26":[["Type commands for definition of \"mystep\".                                                 ",{}]],"27":[["End with a line saying just \"end\".                                                        ",{}]]},"cursor":{"x":34}}],[0.000329,{"lines":{"0":[["   0x080485c0 <+89>:    jmp    0x80485ce <main+103>                                       ",{}]],"1":[["   0x080485c2 <+91>:    mov    DWORD PTR [esp],0x80486a8                                  ",{}]],"2":[["---Type <return> to continue, or q <return> to quit---                                    ",{}]],"3":[["   0x080485c9 <+98>:    call   0x80483a0 <puts@plt>                                       ",{}]],"4":[["   0x080485ce <+103>:   mov    eax,0x0                                                    ",{}]],"5":[["   0x080485d3 <+108>:   leave                                                             ",{}]],"6":[["   0x080485d4 <+109>:   ret                                                               ",{}]],"7":[["End of assembler dump.                                                                    ",{}]],"8":[["(gdb) # quite small! let's execute step-by-step                                           ",{}]],"9":[["(gdb) break main                                                                          ",{}]],"10":[["Breakpoint 1 at 0x804856a                                                                 ",{}]],"11":[["(gdb) r 1234 # yes we can give parameters here!                                           ",{}]],"12":[["Starting program: /home/r1x/gdb/password 1234 # yes we can give parameters here!          ",{}]],"13":[["warning: Could not load shared library symbols for linux-gate.so.1.                       ",{}]],"14":[["Do you need \"set solib-search-path\" or \"set sysroot\"?                                     ",{}]],"15":[["                                                                                          ",{}]],"16":[["Breakpoint 1, 0x0804856a in main ()                                                       ",{}]],"17":[["(gdb) x/i $eip                                                                            ",{}]],"18":[["=> 0x804856a <main+3>:  and    esp,0xfffffff0                                             ",{}]],"19":[["(gdb) nexti                                                                               ",{}]],"20":[["0x0804856d in main ()                                                                     ",{}]],"21":[["(gdb) x/i $eip                                                                            ",{}]],"22":[["=> 0x804856d <main+6>:  sub    esp,0x20                                                   ",{}]],"23":[["(gdb) # we can automate this with a script!                                               ",{}]],"24":[["(gdb) define mystep                                                                       ",{}]],"25":[["Type commands for definition of \"mystep\".                                                 ",{}]],"26":[["End with a line saying just \"end\".                                                        ",{}]],"27":[[">                                                                                         ",{}]]},"cursor":{"x":1}}],[1.349738,{"lines":{"27":[[">w                                                                                        ",{}]]},"cursor":{"x":2}}],[0.039908,{"lines":{"27":[[">wh                                                                                       ",{}]]},"cursor":{"x":3}}],[0.039379,{"lines":{"27":[[">whi                                                                                      ",{}]]},"cursor":{"x":4}}],[0.192867,{"lines":{"27":[[">whil                                                                                     ",{}]]},"cursor":{"x":5}}],[0.0563,{"lines":{"27":[[">while                                                                                    ",{}]]},"cursor":{"x":6}}],[0.775043,{"cursor":{"x":7}}],[0.240139,{"lines":{"27":[[">while (                                                                                  ",{}]]},"cursor":{"x":8}}],[0.256147,{"lines":{"27":[[">while (1                                                                                 ",{}]]},"cursor":{"x":9}}],[0.387091,{"lines":{"27":[[">while (1)                                                                                ",{}]]},"cursor":{"x":10}}],[0.47772,{"lines":{"0":[["   0x080485c2 <+91>:    mov    DWORD PTR [esp],0x80486a8                                  ",{}]],"1":[["---Type <return> to continue, or q <return> to quit---                                    ",{}]],"2":[["   0x080485c9 <+98>:    call   0x80483a0 <puts@plt>                                       ",{}]],"3":[["   0x080485ce <+103>:   mov    eax,0x0                                                    ",{}]],"4":[["   0x080485d3 <+108>:   leave                                                             ",{}]],"5":[["   0x080485d4 <+109>:   ret                                                               ",{}]],"6":[["End of assembler dump.                                                                    ",{}]],"7":[["(gdb) # quite small! let's execute step-by-step                                           ",{}]],"8":[["(gdb) break main                                                                          ",{}]],"9":[["Breakpoint 1 at 0x804856a                                                                 ",{}]],"10":[["(gdb) r 1234 # yes we can give parameters here!                                           ",{}]],"11":[["Starting program: /home/r1x/gdb/password 1234 # yes we can give parameters here!          ",{}]],"12":[["warning: Could not load shared library symbols for linux-gate.so.1.                       ",{}]],"13":[["Do you need \"set solib-search-path\" or \"set sysroot\"?                                     ",{}]],"14":[["                                                                                          ",{}]],"15":[["Breakpoint 1, 0x0804856a in main ()                                                       ",{}]],"16":[["(gdb) x/i $eip                                                                            ",{}]],"17":[["=> 0x804856a <main+3>:  and    esp,0xfffffff0                                             ",{}]],"18":[["(gdb) nexti                                                                               ",{}]],"19":[["0x0804856d in main ()                                                                     ",{}]],"20":[["(gdb) x/i $eip                                                                            ",{}]],"21":[["=> 0x804856d <main+6>:  sub    esp,0x20                                                   ",{}]],"22":[["(gdb) # we can automate this with a script!                                               ",{}]],"23":[["(gdb) define mystep                                                                       ",{}]],"24":[["Type commands for definition of \"mystep\".                                                 ",{}]],"25":[["End with a line saying just \"end\".                                                        ",{}]],"26":[[">while (1)                                                                                ",{}]],"27":[[" >                                                                                        ",{}]]},"cursor":{"x":2}}],[1.375367,{"lines":{"27":[[" >x                                                                                       ",{}]]},"cursor":{"x":3}}],[0.13555,{"lines":{"27":[[" >x/                                                                                      ",{}]]},"cursor":{"x":4}}],[0.24058,{"lines":{"27":[[" >x/i                                                                                     ",{}]]},"cursor":{"x":5}}],[0.111668,{"cursor":{"x":6}}],[0.306448,{"lines":{"27":[[" >x/i $                                                                                   ",{}]]},"cursor":{"x":7}}],[0.520571,{"lines":{"27":[[" >x/i $e                                                                                  ",{}]]},"cursor":{"x":8}}],[0.044429,{"lines":{"27":[[" >x/i $ei                                                                                 ",{}]]},"cursor":{"x":9}}],[0.048592,{"lines":{"27":[[" >x/i $eip                                                                                ",{}]]},"cursor":{"x":10}}],[0.442692,{"lines":{"0":[["---Type <return> to continue, or q <return> to quit---                                    ",{}]],"1":[["   0x080485c9 <+98>:    call   0x80483a0 <puts@plt>                                       ",{}]],"2":[["   0x080485ce <+103>:   mov    eax,0x0                                                    ",{}]],"3":[["   0x080485d3 <+108>:   leave                                                             ",{}]],"4":[["   0x080485d4 <+109>:   ret                                                               ",{}]],"5":[["End of assembler dump.                                                                    ",{}]],"6":[["(gdb) # quite small! let's execute step-by-step                                           ",{}]],"7":[["(gdb) break main                                                                          ",{}]],"8":[["Breakpoint 1 at 0x804856a                                                                 ",{}]],"9":[["(gdb) r 1234 # yes we can give parameters here!                                           ",{}]],"10":[["Starting program: /home/r1x/gdb/password 1234 # yes we can give parameters here!          ",{}]],"11":[["warning: Could not load shared library symbols for linux-gate.so.1.                       ",{}]],"12":[["Do you need \"set solib-search-path\" or \"set sysroot\"?                                     ",{}]],"13":[["                                                                                          ",{}]],"14":[["Breakpoint 1, 0x0804856a in main ()                                                       ",{}]],"15":[["(gdb) x/i $eip                                                                            ",{}]],"16":[["=> 0x804856a <main+3>:  and    esp,0xfffffff0                                             ",{}]],"17":[["(gdb) nexti                                                                               ",{}]],"18":[["0x0804856d in main ()                                                                     ",{}]],"19":[["(gdb) x/i $eip                                                                            ",{}]],"20":[["=> 0x804856d <main+6>:  sub    esp,0x20                                                   ",{}]],"21":[["(gdb) # we can automate this with a script!                                               ",{}]],"22":[["(gdb) define mystep                                                                       ",{}]],"23":[["Type commands for definition of \"mystep\".                                                 ",{}]],"24":[["End with a line saying just \"end\".                                                        ",{}]],"25":[[">while (1)                                                                                ",{}]],"26":[[" >x/i $eip                                                                                ",{}]],"27":[[" >                                                                                        ",{}]]},"cursor":{"x":2}}],[0.977028,{"lines":{"27":[[" >n                                                                                       ",{}]]},"cursor":{"x":3}}],[0.100666,{"lines":{"27":[[" >ne                                                                                      ",{}]]},"cursor":{"x":4}}],[0.215309,{"lines":{"27":[[" >nex                                                                                     ",{}]]},"cursor":{"x":5}}],[0.384374,{"lines":{"27":[[" >next                                                                                    ",{}]]},"cursor":{"x":6}}],[0.089862,{"lines":{"27":[[" >nexti                                                                                   ",{}]]},"cursor":{"x":7}}],[0.6076780000000001,{"lines":{"0":[["   0x080485c9 <+98>:    call   0x80483a0 <puts@plt>                                       ",{}]],"1":[["   0x080485ce <+103>:   mov    eax,0x0                                                    ",{}]],"2":[["   0x080485d3 <+108>:   leave                                                             ",{}]],"3":[["   0x080485d4 <+109>:   ret                                                               ",{}]],"4":[["End of assembler dump.                                                                    ",{}]],"5":[["(gdb) # quite small! let's execute step-by-step                                           ",{}]],"6":[["(gdb) break main                                                                          ",{}]],"7":[["Breakpoint 1 at 0x804856a                                                                 ",{}]],"8":[["(gdb) r 1234 # yes we can give parameters here!                                           ",{}]],"9":[["Starting program: /home/r1x/gdb/password 1234 # yes we can give parameters here!          ",{}]],"10":[["warning: Could not load shared library symbols for linux-gate.so.1.                       ",{}]],"11":[["Do you need \"set solib-search-path\" or \"set sysroot\"?                                     ",{}]],"12":[["                                                                                          ",{}]],"13":[["Breakpoint 1, 0x0804856a in main ()                                                       ",{}]],"14":[["(gdb) x/i $eip                                                                            ",{}]],"15":[["=> 0x804856a <main+3>:  and    esp,0xfffffff0                                             ",{}]],"16":[["(gdb) nexti                                                                               ",{}]],"17":[["0x0804856d in main ()                                                                     ",{}]],"18":[["(gdb) x/i $eip                                                                            ",{}]],"19":[["=> 0x804856d <main+6>:  sub    esp,0x20                                                   ",{}]],"20":[["(gdb) # we can automate this with a script!                                               ",{}]],"21":[["(gdb) define mystep                                                                       ",{}]],"22":[["Type commands for definition of \"mystep\".                                                 ",{}]],"23":[["End with a line saying just \"end\".                                                        ",{}]],"24":[[">while (1)                                                                                ",{}]],"25":[[" >x/i $eip                                                                                ",{}]],"26":[[" >nexti                                                                                   ",{}]],"27":[[" >                                                                                        ",{}]]},"cursor":{"x":2}}],[1.952629,{"lines":{"27":[[" >e                                                                                       ",{}]]},"cursor":{"x":3}}],[0.126378,{"lines":{"27":[[" >en                                                                                      ",{}]]},"cursor":{"x":4}}],[0.054515,{"lines":{"27":[[" >end                                                                                     ",{}]]},"cursor":{"x":5}}],[0.22522,{"lines":{"0":[["   0x080485ce <+103>:   mov    eax,0x0                                                    ",{}]],"1":[["   0x080485d3 <+108>:   leave                                                             ",{}]],"2":[["   0x080485d4 <+109>:   ret                                                               ",{}]],"3":[["End of assembler dump.                                                                    ",{}]],"4":[["(gdb) # quite small! let's execute step-by-step                                           ",{}]],"5":[["(gdb) break main                                                                          ",{}]],"6":[["Breakpoint 1 at 0x804856a                                                                 ",{}]],"7":[["(gdb) r 1234 # yes we can give parameters here!                                           ",{}]],"8":[["Starting program: /home/r1x/gdb/password 1234 # yes we can give parameters here!          ",{}]],"9":[["warning: Could not load shared library symbols for linux-gate.so.1.                       ",{}]],"10":[["Do you need \"set solib-search-path\" or \"set sysroot\"?                                     ",{}]],"11":[["                                                                                          ",{}]],"12":[["Breakpoint 1, 0x0804856a in main ()                                                       ",{}]],"13":[["(gdb) x/i $eip                                                                            ",{}]],"14":[["=> 0x804856a <main+3>:  and    esp,0xfffffff0                                             ",{}]],"15":[["(gdb) nexti                                                                               ",{}]],"16":[["0x0804856d in main ()                                                                     ",{}]],"17":[["(gdb) x/i $eip                                                                            ",{}]],"18":[["=> 0x804856d <main+6>:  sub    esp,0x20                                                   ",{}]],"19":[["(gdb) # we can automate this with a script!                                               ",{}]],"20":[["(gdb) define mystep                                                                       ",{}]],"21":[["Type commands for definition of \"mystep\".                                                 ",{}]],"22":[["End with a line saying just \"end\".                                                        ",{}]],"23":[[">while (1)                                                                                ",{}]],"24":[[" >x/i $eip                                                                                ",{}]],"25":[[" >nexti                                                                                   ",{}]],"26":[[" >end                                                                                     ",{}]],"27":[[">                                                                                         ",{}]]},"cursor":{"x":1}}],[0.68174,{"lines":{"27":[[">e                                                                                        ",{}]]},"cursor":{"x":2}}],[0.125319,{"lines":{"27":[[">en                                                                                       ",{}]]},"cursor":{"x":3}}],[0.071633,{"lines":{"27":[[">end                                                                                      ",{}]]},"cursor":{"x":4}}],[0.176251,{"lines":{"0":[["   0x080485d3 <+108>:   leave                                                             ",{}]],"1":[["   0x080485d4 <+109>:   ret                                                               ",{}]],"2":[["End of assembler dump.                                                                    ",{}]],"3":[["(gdb) # quite small! let's execute step-by-step                                           ",{}]],"4":[["(gdb) break main                                                                          ",{}]],"5":[["Breakpoint 1 at 0x804856a                                                                 ",{}]],"6":[["(gdb) r 1234 # yes we can give parameters here!                                           ",{}]],"7":[["Starting program: /home/r1x/gdb/password 1234 # yes we can give parameters here!          ",{}]],"8":[["warning: Could not load shared library symbols for linux-gate.so.1.                       ",{}]],"9":[["Do you need \"set solib-search-path\" or \"set sysroot\"?                                     ",{}]],"10":[["                                                                                          ",{}]],"11":[["Breakpoint 1, 0x0804856a in main ()                                                       ",{}]],"12":[["(gdb) x/i $eip                                                                            ",{}]],"13":[["=> 0x804856a <main+3>:  and    esp,0xfffffff0                                             ",{}]],"14":[["(gdb) nexti                                                                               ",{}]],"15":[["0x0804856d in main ()                                                                     ",{}]],"16":[["(gdb) x/i $eip                                                                            ",{}]],"17":[["=> 0x804856d <main+6>:  sub    esp,0x20                                                   ",{}]],"18":[["(gdb) # we can automate this with a script!                                               ",{}]],"19":[["(gdb) define mystep                                                                       ",{}]],"20":[["Type commands for definition of \"mystep\".                                                 ",{}]],"21":[["End with a line saying just \"end\".                                                        ",{}]],"22":[[">while (1)                                                                                ",{}]],"23":[[" >x/i $eip                                                                                ",{}]],"24":[[" >nexti                                                                                   ",{}]],"25":[[" >end                                                                                     ",{}]],"26":[[">end                                                                                      ",{}]],"27":[["                                                                                          ",{}]]},"cursor":{"x":0}}],[9.7e-05,{"lines":{"27":[["(gdb)                                                                                     ",{}]]},"cursor":{"x":6}}],[2.851288,{"lines":{"27":[["(gdb) m                                                                                   ",{}]]},"cursor":{"x":7}}],[0.287511,{"lines":{"27":[["(gdb) my                                                                                  ",{}]]},"cursor":{"x":8}}],[0.141038,{"lines":{"27":[["(gdb) mys                                                                                 ",{}]]},"cursor":{"x":9}}],[0.216585,{"lines":{"27":[["(gdb) myst                                                                                ",{}]]},"cursor":{"x":10}}],[0.039262,{"lines":{"27":[["(gdb) myste                                                                               ",{}]]},"cursor":{"x":11}}],[0.063095,{"lines":{"27":[["(gdb) mystep                                                                              ",{}]]},"cursor":{"x":12}}],[0.419831,{"lines":{"0":[["   0x080485d4 <+109>:   ret                                                               ",{}]],"1":[["End of assembler dump.                                                                    ",{}]],"2":[["(gdb) # quite small! let's execute step-by-step                                           ",{}]],"3":[["(gdb) break main                                                                          ",{}]],"4":[["Breakpoint 1 at 0x804856a                                                                 ",{}]],"5":[["(gdb) r 1234 # yes we can give parameters here!                                           ",{}]],"6":[["Starting program: /home/r1x/gdb/password 1234 # yes we can give parameters here!          ",{}]],"7":[["warning: Could not load shared library symbols for linux-gate.so.1.                       ",{}]],"8":[["Do you need \"set solib-search-path\" or \"set sysroot\"?                                     ",{}]],"9":[["                                                                                          ",{}]],"10":[["Breakpoint 1, 0x0804856a in main ()                                                       ",{}]],"11":[["(gdb) x/i $eip                                                                            ",{}]],"12":[["=> 0x804856a <main+3>:  and    esp,0xfffffff0                                             ",{}]],"13":[["(gdb) nexti                                                                               ",{}]],"14":[["0x0804856d in main ()                                                                     ",{}]],"15":[["(gdb) x/i $eip                                                                            ",{}]],"16":[["=> 0x804856d <main+6>:  sub    esp,0x20                                                   ",{}]],"17":[["(gdb) # we can automate this with a script!                                               ",{}]],"18":[["(gdb) define mystep                                                                       ",{}]],"19":[["Type commands for definition of \"mystep\".                                                 ",{}]],"20":[["End with a line saying just \"end\".                                                        ",{}]],"21":[[">while (1)                                                                                ",{}]],"22":[[" >x/i $eip                                                                                ",{}]],"23":[[" >nexti                                                                                   ",{}]],"24":[[" >end                                                                                     ",{}]],"25":[[">end                                                                                      ",{}]],"26":[["(gdb) mystep                                                                              ",{}]],"27":[["                                                                                          ",{}]]},"cursor":{"x":0}}],[0.009743999999999999,{"lines":{"0":[["=> 0x804856d <main+6>:  sub    esp,0x20                                                   ",{}]],"1":[["0x08048570 in main ()                                                                     ",{}]],"2":[["=> 0x8048570 <main+9>:  cmp    DWORD PTR [ebp+0x8],0x2                                    ",{}]],"3":[["0x08048574 in main ()                                                                     ",{}]],"4":[["=> 0x8048574 <main+13>: je     0x8048589 <main+34>                                        ",{}]],"5":[["0x08048589 in main ()                                                                     ",{}]],"6":[["=> 0x8048589 <main+34>: mov    eax,DWORD PTR [ebp+0xc]                                    ",{}]],"7":[["0x0804858c in main ()                                                                     ",{}]],"8":[["=> 0x804858c <main+37>: mov    eax,DWORD PTR [eax+0x4]                                    ",{}]],"9":[["0x0804858f in main ()                                                                     ",{}]],"10":[["=> 0x804858f <main+40>: mov    DWORD PTR [esp+0x1c],eax                                   ",{}]],"11":[["0x08048593 in main ()                                                                     ",{}]],"12":[["=> 0x8048593 <main+44>: call   0x80484dc <getpassword>                                    ",{}]],"13":[["0x08048598 in main ()                                                                     ",{}]],"14":[["=> 0x8048598 <main+49>: mov    DWORD PTR [esp+0x18],eax                                   ",{}]],"15":[["0x0804859c in main ()                                                                     ",{}]],"16":[["=> 0x804859c <main+53>: mov    eax,DWORD PTR [esp+0x18]                                   ",{}]],"17":[["0x080485a0 in main ()                                                                     ",{}]],"18":[["=> 0x80485a0 <main+57>: mov    DWORD PTR [esp+0x4],eax                                    ",{}]],"19":[["0x080485a4 in main ()                                                                     ",{}]],"20":[["=> 0x80485a4 <main+61>: mov    eax,DWORD PTR [esp+0x1c]                                   ",{}]],"21":[["0x080485a8 in main ()                                                                     ",{}]],"22":[["=> 0x80485a8 <main+65>: mov    DWORD PTR [esp],eax                                        ",{}]],"23":[["0x080485ab in main ()                                                                     ",{}]],"24":[["=> 0x80485ab <main+68>: call   0x8048380 <strcmp@plt>                                     ",{}]],"25":[["0x080485b0 in main ()                                                                     ",{}]],"26":[["=> 0x80485b0 <main+73>: test   eax,eax                                                    ",{}]],"27":[["---Type <return> to continue, or q <return> to quit---                                    ",{}]]},"cursor":{"x":54}}],[2.390012,{"lines":{"0":[["=> 0x8048570 <main+9>:  cmp    DWORD PTR [ebp+0x8],0x2                                    ",{}]],"1":[["0x08048574 in main ()                                                                     ",{}]],"2":[["=> 0x8048574 <main+13>: je     0x8048589 <main+34>                                        ",{}]],"3":[["0x08048589 in main ()                                                                     ",{}]],"4":[["=> 0x8048589 <main+34>: mov    eax,DWORD PTR [ebp+0xc]                                    ",{}]],"5":[["0x0804858c in main ()                                                                     ",{}]],"6":[["=> 0x804858c <main+37>: mov    eax,DWORD PTR [eax+0x4]                                    ",{}]],"7":[["0x0804858f in main ()                                                                     ",{}]],"8":[["=> 0x804858f <main+40>: mov    DWORD PTR [esp+0x1c],eax                                   ",{}]],"9":[["0x08048593 in main ()                                                                     ",{}]],"10":[["=> 0x8048593 <main+44>: call   0x80484dc <getpassword>                                    ",{}]],"11":[["0x08048598 in main ()                                                                     ",{}]],"12":[["=> 0x8048598 <main+49>: mov    DWORD PTR [esp+0x18],eax                                   ",{}]],"13":[["0x0804859c in main ()                                                                     ",{}]],"14":[["=> 0x804859c <main+53>: mov    eax,DWORD PTR [esp+0x18]                                   ",{}]],"15":[["0x080485a0 in main ()                                                                     ",{}]],"16":[["=> 0x80485a0 <main+57>: mov    DWORD PTR [esp+0x4],eax                                    ",{}]],"17":[["0x080485a4 in main ()                                                                     ",{}]],"18":[["=> 0x80485a4 <main+61>: mov    eax,DWORD PTR [esp+0x1c]                                   ",{}]],"19":[["0x080485a8 in main ()                                                                     ",{}]],"20":[["=> 0x80485a8 <main+65>: mov    DWORD PTR [esp],eax                                        ",{}]],"21":[["0x080485ab in main ()                                                                     ",{}]],"22":[["=> 0x80485ab <main+68>: call   0x8048380 <strcmp@plt>                                     ",{}]],"23":[["0x080485b0 in main ()                                                                     ",{}]],"24":[["=> 0x80485b0 <main+73>: test   eax,eax                                                    ",{}]],"25":[["---Type <return> to continue, or q <return> to quit---                                    ",{}]],"26":[["0x080485b2 in main ()                                                                     ",{}]],"27":[["                                                                                          ",{}]]},"cursor":{"x":0}}],[0.011051,{"lines":{"0":[["=> 0x80485a4 <main+61>: mov    eax,DWORD PTR [esp+0x1c]                                   ",{}]],"1":[["0x080485a8 in main ()                                                                     ",{}]],"2":[["=> 0x80485a8 <main+65>: mov    DWORD PTR [esp],eax                                        ",{}]],"3":[["0x080485ab in main ()                                                                     ",{}]],"4":[["=> 0x80485ab <main+68>: call   0x8048380 <strcmp@plt>                                     ",{}]],"5":[["0x080485b0 in main ()                                                                     ",{}]],"6":[["=> 0x80485b0 <main+73>: test   eax,eax                                                    ",{}]],"7":[["---Type <return> to continue, or q <return> to quit---                                    ",{}]],"8":[["0x080485b2 in main ()                                                                     ",{}]],"9":[["=> 0x80485b2 <main+75>: jne    0x80485c2 <main+91>                                        ",{}]],"10":[["0x080485c2 in main ()                                                                     ",{}]],"11":[["=> 0x80485c2 <main+91>: mov    DWORD PTR [esp],0x80486a8                                  ",{}]],"12":[["0x080485c9 in main ()                                                                     ",{}]],"13":[["=> 0x80485c9 <main+98>: call   0x80483a0 <puts@plt>                                       ",{}]],"14":[["Wrong password!                                                                           ",{}]],"15":[["0x080485ce in main ()                                                                     ",{}]],"16":[["=> 0x80485ce <main+103>:        mov    eax,0x0                                            ",{}]],"17":[["0x080485d3 in main ()                                                                     ",{}]],"18":[["=> 0x80485d3 <main+108>:        leave                                                     ",{}]],"19":[["0x080485d4 in main ()                                                                     ",{}]],"20":[["=> 0x80485d4 <main+109>:        ret                                                       ",{}]],"21":[["0xb7e48cc5 in __libc_start_main () from /lib/libc.so.6                                    ",{}]],"22":[["=> 0xb7e48cc5 <__libc_start_main+245>:  mov    DWORD PTR [esp],eax                        ",{}]],"23":[["0xb7e48cc8 in __libc_start_main () from /lib/libc.so.6                                    ",{}]],"24":[["=> 0xb7e48cc8 <__libc_start_main+248>:  call   0xb7e60930 <exit>                          ",{}]],"25":[["[Inferior 1 (process 2535) exited normally]                                               ",{}]],"26":[["No registers.                                                                             ",{}]],"27":[["(gdb)                                                                                     ",{}]]},"cursor":{"x":6}}],[1.421444,{"lines":{"27":[["(gdb) #                                                                                   ",{}]]},"cursor":{"x":7}}],[0.140383,{"cursor":{"x":8}}],[1.913737,{"lines":{"27":[["(gdb) # g                                                                                 ",{}]]},"cursor":{"x":9}}],[0.110152,{"lines":{"27":[["(gdb) # go                                                                                ",{}]]},"cursor":{"x":10}}],[0.121791,{"lines":{"27":[["(gdb) # goo                                                                               ",{}]]},"cursor":{"x":11}}],[0.078751,{"lines":{"27":[["(gdb) # good                                                                              ",{}]]},"cursor":{"x":12}}],[0.215799,{"lines":{"27":[["(gdb) # good!                                                                             ",{}]]},"cursor":{"x":13}}],[0.151765,{"cursor":{"x":14}}],[0.29821,{"lines":{"27":[["(gdb) # good! w                                                                           ",{}]]},"cursor":{"x":15}}],[0.174886,{"lines":{"27":[["(gdb) # good! we                                                                          ",{}]]},"cursor":{"x":16}}],[0.104626,{"cursor":{"x":17}}],[0.166695,{"lines":{"27":[["(gdb) # good! we h                                                                        ",{}]]},"cursor":{"x":18}}],[0.111892,{"lines":{"27":[["(gdb) # good! we ha                                                                       ",{}]]},"cursor":{"x":19}}],[0.168397,{"lines":{"27":[["(gdb) # good! we hav                                                                      ",{}]]},"cursor":{"x":20}}],[0.039799,{"lines":{"27":[["(gdb) # good! we have                                                                     ",{}]]},"cursor":{"x":21}}],[0.112262,{"cursor":{"x":22}}],[1.014214,{"lines":{"27":[["(gdb) # good! we have t                                                                   ",{}]]},"cursor":{"x":23}}],[0.004938,{"lines":{"27":[["(gdb) # good! we have the                                                                 ",{}]]},"cursor":{"x":25}}],[0.012667,{"cursor":{"x":26}}],[0.111949,{"lines":{"27":[["(gdb) # good! we have the w                                                               ",{}]]},"cursor":{"x":27}}],[0.071593,{"lines":{"27":[["(gdb) # good! we have the wh                                                              ",{}]]},"cursor":{"x":28}}],[0.055377,{"lines":{"27":[["(gdb) # good! we have the who                                                             ",{}]]},"cursor":{"x":29}}],[0.192903,{"lines":{"27":[["(gdb) # good! we have the whol                                                            ",{}]]},"cursor":{"x":30}}],[0.09544900000000001,{"lines":{"27":[["(gdb) # good! we have the whole                                                           ",{}]]},"cursor":{"x":31}}],[0.09657399999999999,{"cursor":{"x":32}}],[0.08798599999999999,{"lines":{"27":[["(gdb) # good! we have the whole e                                                         ",{}]]},"cursor":{"x":33}}],[0.183583,{"lines":{"27":[["(gdb) # good! we have the whole ex                                                        ",{}]]},"cursor":{"x":34}}],[0.184318,{"lines":{"27":[["(gdb) # good! we have the whole exe                                                       ",{}]]},"cursor":{"x":35}}],[0.279601,{"lines":{"27":[["(gdb) # good! we have the whole exec                                                      ",{}]]},"cursor":{"x":36}}],[0.128026,{"lines":{"27":[["(gdb) # good! we have the whole execu                                                     ",{}]]},"cursor":{"x":37}}],[0.112599,{"lines":{"27":[["(gdb) # good! we have the whole execut                                                    ",{}]]},"cursor":{"x":38}}],[0.08765299999999999,{"lines":{"27":[["(gdb) # good! we have the whole executi                                                   ",{}]]},"cursor":{"x":39}}],[0.024048,{"lines":{"27":[["(gdb) # good! we have the whole executio                                                  ",{}]]},"cursor":{"x":40}}],[0.184043,{"lines":{"27":[["(gdb) # good! we have the whole execution                                                 ",{}]]},"cursor":{"x":41}}],[0.250073,{"lines":{"27":[["(gdb) # good! we have the whole execution.                                                ",{}]]},"cursor":{"x":42}}],[0.157494,{"cursor":{"x":43}}],[0.650155,{"lines":{"27":[["(gdb) # good! we have the whole execution. B                                              ",{}]]},"cursor":{"x":44}}],[0.165648,{"lines":{"27":[["(gdb) # good! we have the whole execution. Be                                             ",{}]]},"cursor":{"x":45}}],[0.08769200000000001,{"lines":{"27":[["(gdb) # good! we have the whole execution. Bef                                            ",{}]]},"cursor":{"x":46}}],[0.152939,{"lines":{"27":[["(gdb) # good! we have the whole execution. Befo                                           ",{}]]},"cursor":{"x":47}}],[0.087023,{"lines":{"27":[["(gdb) # good! we have the whole execution. Befor                                          ",{}]]},"cursor":{"x":48}}],[0.049294,{"lines":{"27":[["(gdb) # good! we have the whole execution. Before                                         ",{}]]},"cursor":{"x":49}}],[0.07932,{"cursor":{"x":50}}],[0.330316,{"lines":{"27":[["(gdb) # good! we have the whole execution. Before \"                                       ",{}]]},"cursor":{"x":51}}],[0.5982229999999999,{"lines":{"27":[["(gdb) # good! we have the whole execution. Before \"e                                      ",{}]]},"cursor":{"x":52}}],[0.263767,{"lines":{"27":[["(gdb) # good! we have the whole execution. Before \"er                                     ",{}]]},"cursor":{"x":53}}],[0.121921,{"lines":{"27":[["(gdb) # good! we have the whole execution. Before \"ero                                    ",{}]]},"cursor":{"x":54}}],[0.119614,{"lines":{"27":[["(gdb) # good! we have the whole execution. Before \"eron                                   ",{}]]},"cursor":{"x":55}}],[0.110016,{"lines":{"27":[["(gdb) # good! we have the whole execution. Before \"erong                                  ",{}]]},"cursor":{"x":56}}],[0.395601,{"lines":{"27":[["(gdb) # good! we have the whole execution. Before \"eron                                   ",{}]]},"cursor":{"x":55}}],[0.116397,{"lines":{"27":[["(gdb) # good! we have the whole execution. Before \"ero                                    ",{}]]},"cursor":{"x":54}}],[0.127421,{"lines":{"27":[["(gdb) # good! we have the whole execution. Before \"er                                     ",{}]]},"cursor":{"x":53}}],[0.144666,{"lines":{"27":[["(gdb) # good! we have the whole execution. Before \"e                                      ",{}]]},"cursor":{"x":52}}],[0.112498,{"lines":{"27":[["(gdb) # good! we have the whole execution. Before \"                                       ",{}]]},"cursor":{"x":51}}],[0.09566,{"lines":{"27":[["(gdb) # good! we have the whole execution. Before \"w                                      ",{}]]},"cursor":{"x":52}}],[0.362626,{"lines":{"27":[["(gdb) # good! we have the whole execution. Before \"wr                                     ",{}]]},"cursor":{"x":53}}],[0.070783,{"lines":{"27":[["(gdb) # good! we have the whole execution. Before \"wro                                    ",{}]]},"cursor":{"x":54}}],[0.127162,{"lines":{"27":[["(gdb) # good! we have the whole execution. Before \"wron                                   ",{}]]},"cursor":{"x":55}}],[0.104193,{"lines":{"27":[["(gdb) # good! we have the whole execution. Before \"wrong                                  ",{}]]},"cursor":{"x":56}}],[0.254672,{"cursor":{"x":57}}],[0.152308,{"lines":{"27":[["(gdb) # good! we have the whole execution. Before \"wrong p                                ",{}]]},"cursor":{"x":58}}],[0.087934,{"lines":{"27":[["(gdb) # good! we have the whole execution. Before \"wrong pa                               ",{}]]},"cursor":{"x":59}}],[0.048619,{"lines":{"27":[["(gdb) # good! we have the whole execution. Before \"wrong pas                              ",{}]]},"cursor":{"x":60}}],[0.15124,{"lines":{"27":[["(gdb) # good! we have the whole execution. Before \"wrong pass                             ",{}]]},"cursor":{"x":61}}],[0.168599,{"lines":{"27":[["(gdb) # good! we have the whole execution. Before \"wrong passw                            ",{}]]},"cursor":{"x":62}}],[0.095767,{"lines":{"27":[["(gdb) # good! we have the whole execution. Before \"wrong passwo                           ",{}]]},"cursor":{"x":63}}],[0.087689,{"lines":{"27":[["(gdb) # good! we have the whole execution. Before \"wrong passwor                          ",{}]]},"cursor":{"x":64}}],[0.167639,{"lines":{"27":[["(gdb) # good! we have the whole execution. Before \"wrong password                         ",{}]]},"cursor":{"x":65}}],[0.539362,{"lines":{"27":[["(gdb) # good! we have the whole execution. Before \"wrong password!                        ",{}]]},"cursor":{"x":66}}],[0.07047200000000001,{"lines":{"27":[["(gdb) # good! we have the whole execution. Before \"wrong password!\"                       ",{}]]},"cursor":{"x":67}}],[0.230901,{"cursor":{"x":68}}],[0.263439,{"lines":{"27":[["(gdb) # good! we have the whole execution. Before \"wrong password!\" w                     ",{}]]},"cursor":{"x":69}}],[0.192803,{"lines":{"27":[["(gdb) # good! we have the whole execution. Before \"wrong password!\" we                    ",{}]]},"cursor":{"x":70}}],[0.889962,{"cursor":{"x":71}}],[0.278208,{"lines":{"27":[["(gdb) # good! we have the whole execution. Before \"wrong password!\" we s                  ",{}]]},"cursor":{"x":72}}],[0.289779,{"lines":{"27":[["(gdb) # good! we have the whole execution. Before \"wrong password!\" we se                 ",{}]]},"cursor":{"x":73}}],[0.125154,{"lines":{"27":[["(gdb) # good! we have the whole execution. Before \"wrong password!\" we see                ",{}]]},"cursor":{"x":74}}],[2.601069,{"cursor":{"x":75}}],[2.417948,{"lines":{"27":[["(gdb) # good! we have the whole execution. Before \"wrong password!\" we see a              ",{}]]},"cursor":{"x":76}}],[0.336119,{"cursor":{"x":77}}],[0.59915,{"lines":{"27":[["(gdb) # good! we have the whole execution. Before \"wrong password!\" we see a j            ",{}]]},"cursor":{"x":78}}],[0.134178,{"lines":{"27":[["(gdb) # good! we have the whole execution. Before \"wrong password!\" we see a ju           ",{}]]},"cursor":{"x":79}}],[0.160162,{"lines":{"27":[["(gdb) # good! we have the whole execution. Before \"wrong password!\" we see a jum          ",{}]]},"cursor":{"x":80}}],[0.135668,{"lines":{"27":[["(gdb) # good! we have the whole execution. Before \"wrong password!\" we see a jump         ",{}]]},"cursor":{"x":81}}],[1.138407,{"lines":{"0":[["0x080485a8 in main ()                                                                     ",{}]],"1":[["=> 0x80485a8 <main+65>: mov    DWORD PTR [esp],eax                                        ",{}]],"2":[["0x080485ab in main ()                                                                     ",{}]],"3":[["=> 0x80485ab <main+68>: call   0x8048380 <strcmp@plt>                                     ",{}]],"4":[["0x080485b0 in main ()                                                                     ",{}]],"5":[["=> 0x80485b0 <main+73>: test   eax,eax                                                    ",{}]],"6":[["---Type <return> to continue, or q <return> to quit---                                    ",{}]],"7":[["0x080485b2 in main ()                                                                     ",{}]],"8":[["=> 0x80485b2 <main+75>: jne    0x80485c2 <main+91>                                        ",{}]],"9":[["0x080485c2 in main ()                                                                     ",{}]],"10":[["=> 0x80485c2 <main+91>: mov    DWORD PTR [esp],0x80486a8                                  ",{}]],"11":[["0x080485c9 in main ()                                                                     ",{}]],"12":[["=> 0x80485c9 <main+98>: call   0x80483a0 <puts@plt>                                       ",{}]],"13":[["Wrong password!                                                                           ",{}]],"14":[["0x080485ce in main ()                                                                     ",{}]],"15":[["=> 0x80485ce <main+103>:        mov    eax,0x0                                            ",{}]],"16":[["0x080485d3 in main ()                                                                     ",{}]],"17":[["=> 0x80485d3 <main+108>:        leave                                                     ",{}]],"18":[["0x080485d4 in main ()                                                                     ",{}]],"19":[["=> 0x80485d4 <main+109>:        ret                                                       ",{}]],"20":[["0xb7e48cc5 in __libc_start_main () from /lib/libc.so.6                                    ",{}]],"21":[["=> 0xb7e48cc5 <__libc_start_main+245>:  mov    DWORD PTR [esp],eax                        ",{}]],"22":[["0xb7e48cc8 in __libc_start_main () from /lib/libc.so.6                                    ",{}]],"23":[["=> 0xb7e48cc8 <__libc_start_main+248>:  call   0xb7e60930 <exit>                          ",{}]],"24":[["[Inferior 1 (process 2535) exited normally]                                               ",{}]],"25":[["No registers.                                                                             ",{}]],"26":[["(gdb) # good! we have the whole execution. Before \"wrong password!\" we see a jump         ",{}]],"27":[["(gdb)                                                                                     ",{}]]},"cursor":{"x":6}}],[2.00779,{"lines":{"27":[["(gdb) #                                                                                   ",{}]]},"cursor":{"x":7}}],[0.213315,{"cursor":{"x":8}}],[0.882473,{"lines":{"27":[["(gdb) # j                                                                                 ",{}]]},"cursor":{"x":9}}],[0.165421,{"lines":{"27":[["(gdb) # jn                                                                                ",{}]]},"cursor":{"x":10}}],[0.09650400000000001,{"lines":{"27":[["(gdb) # jne                                                                               ",{}]]},"cursor":{"x":11}}],[2.026339,{"cursor":{"x":12}}],[0.5118780000000001,{"lines":{"27":[["(gdb) # jne j                                                                             ",{}]]},"cursor":{"x":13}}],[0.157471,{"lines":{"27":[["(gdb) # jne ju                                                                            ",{}]]},"cursor":{"x":14}}],[0.151968,{"lines":{"27":[["(gdb) # jne jum                                                                           ",{}]]},"cursor":{"x":15}}],[0.167024,{"lines":{"27":[["(gdb) # jne jump                                                                          ",{}]]},"cursor":{"x":16}}],[0.113552,{"lines":{"27":[["(gdb) # jne jumps                                                                         ",{}]]},"cursor":{"x":17}}],[0.094848,{"cursor":{"x":18}}],[0.248189,{"lines":{"27":[["(gdb) # jne jumps i                                                                       ",{}]]},"cursor":{"x":19}}],[0.128793,{"lines":{"27":[["(gdb) # jne jumps if                                                                      ",{}]]},"cursor":{"x":20}}],[0.111047,{"cursor":{"x":21}}],[0.088684,{"lines":{"27":[["(gdb) # jne jumps if t                                                                    ",{}]]},"cursor":{"x":22}}],[0.071031,{"lines":{"27":[["(gdb) # jne jumps if th                                                                   ",{}]]},"cursor":{"x":23}}],[0.08082399999999999,{"lines":{"27":[["(gdb) # jne jumps if the                                                                  ",{}]]},"cursor":{"x":24}}],[0.071118,{"cursor":{"x":25}}],[0.145769,{"lines":{"27":[["(gdb) # jne jumps if the p                                                                ",{}]]},"cursor":{"x":26}}],[0.078421,{"lines":{"27":[["(gdb) # jne jumps if the pr                                                               ",{}]]},"cursor":{"x":27}}],[0.040225,{"lines":{"27":[["(gdb) # jne jumps if the pre                                                              ",{}]]},"cursor":{"x":28}}],[0.167955,{"lines":{"27":[["(gdb) # jne jumps if the prev                                                             ",{}]]},"cursor":{"x":29}}],[0.056191,{"lines":{"27":[["(gdb) # jne jumps if the previ                                                            ",{}]]},"cursor":{"x":30}}],[0.056452,{"lines":{"27":[["(gdb) # jne jumps if the previo                                                           ",{}]]},"cursor":{"x":31}}],[0.119448,{"lines":{"27":[["(gdb) # jne jumps if the previou                                                          ",{}]]},"cursor":{"x":32}}],[0.08001800000000001,{"lines":{"27":[["(gdb) # jne jumps if the previous                                                         ",{}]]},"cursor":{"x":33}}],[0.095959,{"cursor":{"x":34}}],[0.151605,{"lines":{"27":[["(gdb) # jne jumps if the previous t                                                       ",{}]]},"cursor":{"x":35}}],[0.047966,{"lines":{"27":[["(gdb) # jne jumps if the previous te                                                      ",{}]]},"cursor":{"x":36}}],[0.184523,{"lines":{"27":[["(gdb) # jne jumps if the previous tes                                                     ",{}]]},"cursor":{"x":37}}],[0.103975,{"lines":{"27":[["(gdb) # jne jumps if the previous test                                                    ",{}]]},"cursor":{"x":38}}],[0.119452,{"cursor":{"x":39}}],[0.225152,{"lines":{"27":[["(gdb) # jne jumps if the previous test i                                                  ",{}]]},"cursor":{"x":40}}],[0.111901,{"lines":{"27":[["(gdb) # jne jumps if the previous test is                                                 ",{}]]},"cursor":{"x":41}}],[0.07929899999999999,{"cursor":{"x":42}}],[0.151648,{"lines":{"27":[["(gdb) # jne jumps if the previous test is d                                               ",{}]]},"cursor":{"x":43}}],[0.111965,{"lines":{"27":[["(gdb) # jne jumps if the previous test is di                                              ",{}]]},"cursor":{"x":44}}],[0.087924,{"lines":{"27":[["(gdb) # jne jumps if the previous test is dif                                             ",{}]]},"cursor":{"x":45}}],[0.145203,{"lines":{"27":[["(gdb) # jne jumps if the previous test is diff                                            ",{}]]},"cursor":{"x":46}}],[0.080134,{"lines":{"27":[["(gdb) # jne jumps if the previous test is diffe                                           ",{}]]},"cursor":{"x":47}}],[0.128056,{"lines":{"27":[["(gdb) # jne jumps if the previous test is differ                                          ",{}]]},"cursor":{"x":48}}],[0.047765,{"lines":{"27":[["(gdb) # jne jumps if the previous test is differe                                         ",{}]]},"cursor":{"x":49}}],[0.126718,{"lines":{"27":[["(gdb) # jne jumps if the previous test is differen                                        ",{}]]},"cursor":{"x":50}}],[0.096042,{"lines":{"27":[["(gdb) # jne jumps if the previous test is different                                       ",{}]]},"cursor":{"x":51}}],[0.11262,{"cursor":{"x":52}}],[0.0877,{"lines":{"27":[["(gdb) # jne jumps if the previous test is different f                                     ",{}]]},"cursor":{"x":53}}],[0.143658,{"lines":{"27":[["(gdb) # jne jumps if the previous test is different fr                                    ",{}]]},"cursor":{"x":54}}],[0.040528,{"lines":{"27":[["(gdb) # jne jumps if the previous test is different fro                                   ",{}]]},"cursor":{"x":55}}],[0.07202600000000001,{"lines":{"27":[["(gdb) # jne jumps if the previous test is different from                                  ",{}]]},"cursor":{"x":56}}],[0.064419,{"cursor":{"x":57}}],[0.522362,{"lines":{"27":[["(gdb) # jne jumps if the previous test is different from 0                                ",{}]]},"cursor":{"x":58}}],[2.032124,{"lines":{"0":[["=> 0x80485a8 <main+65>: mov    DWORD PTR [esp],eax                                        ",{}]],"1":[["0x080485ab in main ()                                                                     ",{}]],"2":[["=> 0x80485ab <main+68>: call   0x8048380 <strcmp@plt>                                     ",{}]],"3":[["0x080485b0 in main ()                                                                     ",{}]],"4":[["=> 0x80485b0 <main+73>: test   eax,eax                                                    ",{}]],"5":[["---Type <return> to continue, or q <return> to quit---                                    ",{}]],"6":[["0x080485b2 in main ()                                                                     ",{}]],"7":[["=> 0x80485b2 <main+75>: jne    0x80485c2 <main+91>                                        ",{}]],"8":[["0x080485c2 in main ()                                                                     ",{}]],"9":[["=> 0x80485c2 <main+91>: mov    DWORD PTR [esp],0x80486a8                                  ",{}]],"10":[["0x080485c9 in main ()                                                                     ",{}]],"11":[["=> 0x80485c9 <main+98>: call   0x80483a0 <puts@plt>                                       ",{}]],"12":[["Wrong password!                                                                           ",{}]],"13":[["0x080485ce in main ()                                                                     ",{}]],"14":[["=> 0x80485ce <main+103>:        mov    eax,0x0                                            ",{}]],"15":[["0x080485d3 in main ()                                                                     ",{}]],"16":[["=> 0x80485d3 <main+108>:        leave                                                     ",{}]],"17":[["0x080485d4 in main ()                                                                     ",{}]],"18":[["=> 0x80485d4 <main+109>:        ret                                                       ",{}]],"19":[["0xb7e48cc5 in __libc_start_main () from /lib/libc.so.6                                    ",{}]],"20":[["=> 0xb7e48cc5 <__libc_start_main+245>:  mov    DWORD PTR [esp],eax                        ",{}]],"21":[["0xb7e48cc8 in __libc_start_main () from /lib/libc.so.6                                    ",{}]],"22":[["=> 0xb7e48cc8 <__libc_start_main+248>:  call   0xb7e60930 <exit>                          ",{}]],"23":[["[Inferior 1 (process 2535) exited normally]                                               ",{}]],"24":[["No registers.                                                                             ",{}]],"25":[["(gdb) # good! we have the whole execution. Before \"wrong password!\" we see a jump         ",{}]],"26":[["(gdb) # jne jumps if the previous test is different from 0                                ",{}]],"27":[["                                                                                          ",{}]]},"cursor":{"x":0}}],[9.8e-05,{"lines":{"27":[["(gdb)                                                                                     ",{}]]},"cursor":{"x":6}}],[0.486896,{"lines":{"27":[["(gdb) #                                                                                   ",{}]]},"cursor":{"x":7}}],[0.003475,{"lines":{"27":[["(gdb) #$                                                                                  ",{}]]},"cursor":{"x":8}}],[0.653592,{"lines":{"27":[["(gdb) #                                                                                   ",{}]]},"cursor":{"x":7}}],[0.196368,{"cursor":{"x":8}}],[1.155152,{"lines":{"27":[["(gdb) # t                                                                                 ",{}]]},"cursor":{"x":9}}],[0.133191,{"lines":{"27":[["(gdb) # th                                                                                ",{}]]},"cursor":{"x":10}}],[0.087156,{"lines":{"27":[["(gdb) # the                                                                               ",{}]]},"cursor":{"x":11}}],[0.081845,{"cursor":{"x":12}}],[0.969485,{"cursor":{"x":11}}],[0.125347,{"lines":{"27":[["(gdb) # th                                                                                ",{}]]},"cursor":{"x":10}}],[0.144269,{"lines":{"27":[["(gdb) # t                                                                                 ",{}]]},"cursor":{"x":9}}],[0.11169,{"lines":{"27":[["(gdb) #                                                                                   ",{}]]},"cursor":{"x":8}}],[0.284075,{"lines":{"27":[["(gdb) # t                                                                                 ",{}]]},"cursor":{"x":9}}],[0.06848,{"lines":{"27":[["(gdb) # te                                                                                ",{}]]},"cursor":{"x":10}}],[0.330917,{"lines":{"27":[["(gdb) # tes                                                                               ",{}]]},"cursor":{"x":11}}],[0.116477,{"lines":{"27":[["(gdb) # test                                                                              ",{}]]},"cursor":{"x":12}}],[0.10462,{"cursor":{"x":13}}],[0.159716,{"lines":{"27":[["(gdb) # test e                                                                            ",{}]]},"cursor":{"x":14}}],[0.249128,{"lines":{"27":[["(gdb) # test ea                                                                           ",{}]]},"cursor":{"x":15}}],[0.174845,{"lines":{"27":[["(gdb) # test eax                                                                          ",{}]]},"cursor":{"x":16}}],[0.208255,{"lines":{"27":[["(gdb) # test eax,                                                                         ",{}]]},"cursor":{"x":17}}],[0.327954,{"lines":{"27":[["(gdb) # test eax,e                                                                        ",{}]]},"cursor":{"x":18}}],[0.20047,{"lines":{"27":[["(gdb) # test eax,ea                                                                       ",{}]]},"cursor":{"x":19}}],[0.142333,{"lines":{"27":[["(gdb) # test eax,eax                                                                      ",{}]]},"cursor":{"x":20}}],[0.136454,{"lines":{"27":[["(gdb) # test eax,eax,                                                                     ",{}]]},"cursor":{"x":21}}],[0.353528,{"cursor":{"x":22}}],[0.441651,{"cursor":{"x":21}}],[0.124751,{"lines":{"27":[["(gdb) # test eax,eax                                                                      ",{}]]},"cursor":{"x":20}}],[0.128153,{"lines":{"27":[["(gdb) # test eax,ea                                                                       ",{}]]},"cursor":{"x":19}}],[0.048383,{"cursor":{"x":20}}],[1.090631,{"cursor":{"x":19}}],[0.165612,{"lines":{"27":[["(gdb) # test eax,eax                                                                      ",{}]]},"cursor":{"x":20}}],[0.104649,{"cursor":{"x":21}}],[0.151384,{"lines":{"27":[["(gdb) # test eax,eax i                                                                    ",{}]]},"cursor":{"x":22}}],[0.127031,{"lines":{"27":[["(gdb) # test eax,eax is                                                                   ",{}]]},"cursor":{"x":23}}],[0.104302,{"cursor":{"x":24}}],[1.579322,{"lines":{"27":[["(gdb) # test eax,eax is n                                                                 ",{}]]},"cursor":{"x":25}}],[0.076777,{"lines":{"27":[["(gdb) # test eax,eax is no                                                                ",{}]]},"cursor":{"x":26}}],[0.080276,{"lines":{"27":[["(gdb) # test eax,eax is non                                                               ",{}]]},"cursor":{"x":27}}],[0.08862100000000001,{"cursor":{"x":28}}],[0.319955,{"lines":{"27":[["(gdb) # test eax,eax is non 0                                                             ",{}]]},"cursor":{"x":29}}],[0.134992,{"cursor":{"x":30}}],[0.314942,{"lines":{"27":[["(gdb) # test eax,eax is non 0 i                                                           ",{}]]},"cursor":{"x":31}}],[0.140748,{"lines":{"27":[["(gdb) # test eax,eax is non 0 if                                                          ",{}]]},"cursor":{"x":32}}],[0.104033,{"cursor":{"x":33}}],[0.610926,{"lines":{"27":[["(gdb) # test eax,eax is non 0 if e                                                        ",{}]]},"cursor":{"x":34}}],[0.204867,{"lines":{"27":[["(gdb) # test eax,eax is non 0 if ea                                                       ",{}]]},"cursor":{"x":35}}],[0.19289,{"lines":{"27":[["(gdb) # test eax,eax is non 0 if eax                                                      ",{}]]},"cursor":{"x":36}}],[0.160222,{"cursor":{"x":37}}],[1.658055,{"lines":{"27":[["(gdb) # test eax,eax is non 0 if eax !                                                    ",{}]]},"cursor":{"x":38}}],[0.261501,{"lines":{"27":[["(gdb) # test eax,eax is non 0 if eax !-                                                   ",{}]]},"cursor":{"x":39}}],[0.007286,{"lines":{"27":[["(gdb) # test eax,eax is non 0 if eax !-=                                                  ",{}]]},"cursor":{"x":40}}],[0.08046399999999999,{"cursor":{"x":41}}],[0.57839,{"cursor":{"x":40}}],[0.13334,{"lines":{"27":[["(gdb) # test eax,eax is non 0 if eax !-                                                   ",{}]]},"cursor":{"x":39}}],[0.160267,{"lines":{"27":[["(gdb) # test eax,eax is non 0 if eax !                                                    ",{}]]},"cursor":{"x":38}}],[0.272046,{"lines":{"27":[["(gdb) # test eax,eax is non 0 if eax !=                                                   ",{}]]},"cursor":{"x":39}}],[0.9302240000000001,{"cursor":{"x":40}}],[0.117948,{"lines":{"27":[["(gdb) # test eax,eax is non 0 if eax != 0                                                 ",{}]]},"cursor":{"x":41}}],[0.13659,{"cursor":{"x":42}}],[0.809383,{"lines":{"27":[["(gdb) # test eax,eax is non 0 if eax != 0 a                                               ",{}]]},"cursor":{"x":43}}],[0.165734,{"lines":{"27":[["(gdb) # test eax,eax is non 0 if eax != 0 an                                              ",{}]]},"cursor":{"x":44}}],[0.088631,{"lines":{"27":[["(gdb) # test eax,eax is non 0 if eax != 0 and                                             ",{}]]},"cursor":{"x":45}}],[0.337888,{"cursor":{"x":46}}],[0.150284,{"lines":{"27":[["(gdb) # test eax,eax is non 0 if eax != 0 and t                                           ",{}]]},"cursor":{"x":47}}],[0.103363,{"lines":{"27":[["(gdb) # test eax,eax is non 0 if eax != 0 and th                                          ",{}]]},"cursor":{"x":48}}],[0.031516,{"lines":{"27":[["(gdb) # test eax,eax is non 0 if eax != 0 and thi                                         ",{}]]},"cursor":{"x":49}}],[0.10402,{"lines":{"27":[["(gdb) # test eax,eax is non 0 if eax != 0 and this                                        ",{}]]},"cursor":{"x":50}}],[0.088703,{"cursor":{"x":51}}],[0.096568,{"lines":{"27":[["(gdb) # test eax,eax is non 0 if eax != 0 and this i                                      ",{}]]},"cursor":{"x":52}}],[0.110458,{"lines":{"27":[["(gdb) # test eax,eax is non 0 if eax != 0 and this is                                     ",{}]]},"cursor":{"x":53}}],[0.103918,{"cursor":{"x":54}}],[0.096195,{"lines":{"27":[["(gdb) # test eax,eax is non 0 if eax != 0 and this is t                                   ",{}]]},"cursor":{"x":55}}],[0.081221,{"lines":{"27":[["(gdb) # test eax,eax is non 0 if eax != 0 and this is th                                  ",{}]]},"cursor":{"x":56}}],[0.054621,{"lines":{"27":[["(gdb) # test eax,eax is non 0 if eax != 0 and this is the                                 ",{}]]},"cursor":{"x":57}}],[0.120208,{"cursor":{"x":58}}],[0.362498,{"lines":{"27":[["(gdb) # test eax,eax is non 0 if eax != 0 and this is the r                               ",{}]]},"cursor":{"x":59}}],[0.029268,{"lines":{"27":[["(gdb) # test eax,eax is non 0 if eax != 0 and this is the re                              ",{}]]},"cursor":{"x":60}}],[0.184211,{"lines":{"27":[["(gdb) # test eax,eax is non 0 if eax != 0 and this is the res                             ",{}]]},"cursor":{"x":61}}],[0.136505,{"lines":{"27":[["(gdb) # test eax,eax is non 0 if eax != 0 and this is the resu                            ",{}]]},"cursor":{"x":62}}],[0.160567,{"lines":{"27":[["(gdb) # test eax,eax is non 0 if eax != 0 and this is the resul                           ",{}]]},"cursor":{"x":63}}],[0.063233,{"lines":{"27":[["(gdb) # test eax,eax is non 0 if eax != 0 and this is the result                          ",{}]]},"cursor":{"x":64}}],[0.136423,{"cursor":{"x":65}}],[0.206749,{"lines":{"27":[["(gdb) # test eax,eax is non 0 if eax != 0 and this is the result o                        ",{}]]},"cursor":{"x":66}}],[0.139354,{"lines":{"27":[["(gdb) # test eax,eax is non 0 if eax != 0 and this is the result of                       ",{}]]},"cursor":{"x":67}}],[0.808135,{"cursor":{"x":68}}],[0.504381,{"lines":{"27":[["(gdb) # test eax,eax is non 0 if eax != 0 and this is the result of p                     ",{}]]},"cursor":{"x":69}}],[0.08477899999999999,{"lines":{"27":[["(gdb) # test eax,eax is non 0 if eax != 0 and this is the result of pr                    ",{}]]},"cursor":{"x":70}}],[0.056835,{"lines":{"27":[["(gdb) # test eax,eax is non 0 if eax != 0 and this is the result of pre                   ",{}]]},"cursor":{"x":71}}],[0.176118,{"lines":{"27":[["(gdb) # test eax,eax is non 0 if eax != 0 and this is the result of prev                  ",{}]]},"cursor":{"x":72}}],[0.063066,{"lines":{"27":[["(gdb) # test eax,eax is non 0 if eax != 0 and this is the result of previ                 ",{}]]},"cursor":{"x":73}}],[0.040955,{"lines":{"27":[["(gdb) # test eax,eax is non 0 if eax != 0 and this is the result of previo                ",{}]]},"cursor":{"x":74}}],[0.111689,{"lines":{"27":[["(gdb) # test eax,eax is non 0 if eax != 0 and this is the result of previou               ",{}]]},"cursor":{"x":75}}],[0.104199,{"lines":{"27":[["(gdb) # test eax,eax is non 0 if eax != 0 and this is the result of previous              ",{}]]},"cursor":{"x":76}}],[0.57765,{"lines":{"0":[["0x080485ab in main ()                                                                     ",{}]],"1":[["=> 0x80485ab <main+68>: call   0x8048380 <strcmp@plt>                                     ",{}]],"2":[["0x080485b0 in main ()                                                                     ",{}]],"3":[["=> 0x80485b0 <main+73>: test   eax,eax                                                    ",{}]],"4":[["---Type <return> to continue, or q <return> to quit---                                    ",{}]],"5":[["0x080485b2 in main ()                                                                     ",{}]],"6":[["=> 0x80485b2 <main+75>: jne    0x80485c2 <main+91>                                        ",{}]],"7":[["0x080485c2 in main ()                                                                     ",{}]],"8":[["=> 0x80485c2 <main+91>: mov    DWORD PTR [esp],0x80486a8                                  ",{}]],"9":[["0x080485c9 in main ()                                                                     ",{}]],"10":[["=> 0x80485c9 <main+98>: call   0x80483a0 <puts@plt>                                       ",{}]],"11":[["Wrong password!                                                                           ",{}]],"12":[["0x080485ce in main ()                                                                     ",{}]],"13":[["=> 0x80485ce <main+103>:        mov    eax,0x0                                            ",{}]],"14":[["0x080485d3 in main ()                                                                     ",{}]],"15":[["=> 0x80485d3 <main+108>:        leave                                                     ",{}]],"16":[["0x080485d4 in main ()                                                                     ",{}]],"17":[["=> 0x80485d4 <main+109>:        ret                                                       ",{}]],"18":[["0xb7e48cc5 in __libc_start_main () from /lib/libc.so.6                                    ",{}]],"19":[["=> 0xb7e48cc5 <__libc_start_main+245>:  mov    DWORD PTR [esp],eax                        ",{}]],"20":[["0xb7e48cc8 in __libc_start_main () from /lib/libc.so.6                                    ",{}]],"21":[["=> 0xb7e48cc8 <__libc_start_main+248>:  call   0xb7e60930 <exit>                          ",{}]],"22":[["[Inferior 1 (process 2535) exited normally]                                               ",{}]],"23":[["No registers.                                                                             ",{}]],"24":[["(gdb) # good! we have the whole execution. Before \"wrong password!\" we see a jump         ",{}]],"25":[["(gdb) # jne jumps if the previous test is different from 0                                ",{}]],"26":[["(gdb) # test eax,eax is non 0 if eax != 0 and this is the result of previous              ",{}]],"27":[["                                                                                          ",{}]]},"cursor":{"x":0}}],[6e-05,{"lines":{"27":[["(gdb)                                                                                     ",{}]]},"cursor":{"x":6}}],[0.472477,{"lines":{"27":[["(gdb) #                                                                                   ",{}]]},"cursor":{"x":7}}],[0.110945,{"cursor":{"x":8}}],[0.158049,{"lines":{"27":[["(gdb) # f                                                                                 ",{}]]},"cursor":{"x":9}}],[0.135657,{"lines":{"27":[["(gdb) # fu                                                                                ",{}]]},"cursor":{"x":10}}],[0.160813,{"lines":{"27":[["(gdb) # fun                                                                               ",{}]]},"cursor":{"x":11}}],[0.289854,{"lines":{"27":[["(gdb) # func                                                                              ",{}]]},"cursor":{"x":12}}],[0.17417,{"lines":{"27":[["(gdb) # funct                                                                             ",{}]]},"cursor":{"x":13}}],[0.023524,{"lines":{"27":[["(gdb) # functi                                                                            ",{}]]},"cursor":{"x":14}}],[0.039752,{"lines":{"27":[["(gdb) # functio                                                                           ",{}]]},"cursor":{"x":15}}],[0.127903,{"lines":{"27":[["(gdb) # function                                                                          ",{}]]},"cursor":{"x":16}}],[0.088353,{"cursor":{"x":17}}],[0.09589499999999999,{"lines":{"27":[["(gdb) # function c                                                                        ",{}]]},"cursor":{"x":18}}],[0.079973,{"lines":{"27":[["(gdb) # function ca                                                                       ",{}]]},"cursor":{"x":19}}],[0.048115,{"lines":{"27":[["(gdb) # function cal                                                                      ",{}]]},"cursor":{"x":20}}],[0.119524,{"lines":{"27":[["(gdb) # function call                                                                     ",{}]]},"cursor":{"x":21}}],[0.255816,{"cursor":{"x":22}}],[0.45971,{"lines":{"27":[["(gdb) # function call t                                                                   ",{}]]},"cursor":{"x":23}}],[0.076737,{"lines":{"27":[["(gdb) # function call to                                                                  ",{}]]},"cursor":{"x":24}}],[0.04047,{"cursor":{"x":25}}],[0.223501,{"lines":{"27":[["(gdb) # function call to s                                                                ",{}]]},"cursor":{"x":26}}],[0.212045,{"lines":{"27":[["(gdb) # function call to st                                                               ",{}]]},"cursor":{"x":27}}],[0.252049,{"lines":{"27":[["(gdb) # function call to str                                                              ",{}]]},"cursor":{"x":28}}],[0.216776,{"lines":{"27":[["(gdb) # function call to strc                                                             ",{}]]},"cursor":{"x":29}}],[0.135828,{"lines":{"27":[["(gdb) # function call to strcm                                                            ",{}]]},"cursor":{"x":30}}],[0.135496,{"lines":{"27":[["(gdb) # function call to strcmp                                                           ",{}]]},"cursor":{"x":31}}],[0.730345,{"lines":{"27":[["(gdb) # function call to strcmp!                                                          ",{}]]},"cursor":{"x":32}}],[1.700254,{"lines":{"0":[["=> 0x80485ab <main+68>: call   0x8048380 <strcmp@plt>                                     ",{}]],"1":[["0x080485b0 in main ()                                                                     ",{}]],"2":[["=> 0x80485b0 <main+73>: test   eax,eax                                                    ",{}]],"3":[["---Type <return> to continue, or q <return> to quit---                                    ",{}]],"4":[["0x080485b2 in main ()                                                                     ",{}]],"5":[["=> 0x80485b2 <main+75>: jne    0x80485c2 <main+91>                                        ",{}]],"6":[["0x080485c2 in main ()                                                                     ",{}]],"7":[["=> 0x80485c2 <main+91>: mov    DWORD PTR [esp],0x80486a8                                  ",{}]],"8":[["0x080485c9 in main ()                                                                     ",{}]],"9":[["=> 0x80485c9 <main+98>: call   0x80483a0 <puts@plt>                                       ",{}]],"10":[["Wrong password!                                                                           ",{}]],"11":[["0x080485ce in main ()                                                                     ",{}]],"12":[["=> 0x80485ce <main+103>:        mov    eax,0x0                                            ",{}]],"13":[["0x080485d3 in main ()                                                                     ",{}]],"14":[["=> 0x80485d3 <main+108>:        leave                                                     ",{}]],"15":[["0x080485d4 in main ()                                                                     ",{}]],"16":[["=> 0x80485d4 <main+109>:        ret                                                       ",{}]],"17":[["0xb7e48cc5 in __libc_start_main () from /lib/libc.so.6                                    ",{}]],"18":[["=> 0xb7e48cc5 <__libc_start_main+245>:  mov    DWORD PTR [esp],eax                        ",{}]],"19":[["0xb7e48cc8 in __libc_start_main () from /lib/libc.so.6                                    ",{}]],"20":[["=> 0xb7e48cc8 <__libc_start_main+248>:  call   0xb7e60930 <exit>                          ",{}]],"21":[["[Inferior 1 (process 2535) exited normally]                                               ",{}]],"22":[["No registers.                                                                             ",{}]],"23":[["(gdb) # good! we have the whole execution. Before \"wrong password!\" we see a jump         ",{}]],"24":[["(gdb) # jne jumps if the previous test is different from 0                                ",{}]],"25":[["(gdb) # test eax,eax is non 0 if eax != 0 and this is the result of previous              ",{}]],"26":[["(gdb) # function call to strcmp!                                                          ",{}]],"27":[["                                                                                          ",{}]]},"cursor":{"x":0}}],[5.9e-05,{"lines":{"27":[["(gdb)                                                                                     ",{}]]},"cursor":{"x":6}}],[4.284023,{"lines":{"27":[["(gdb) b                                                                                   ",{}]]},"cursor":{"x":7}}],[0.023516,{"lines":{"27":[["(gdb) br                                                                                  ",{}]]},"cursor":{"x":8}}],[0.016222,{"lines":{"27":[["(gdb) bre                                                                                 ",{}]]},"cursor":{"x":9}}],[0.153601,{"lines":{"27":[["(gdb) brea                                                                                ",{}]]},"cursor":{"x":10}}],[0.070886,{"lines":{"27":[["(gdb) break                                                                               ",{}]]},"cursor":{"x":11}}],[0.112616,{"cursor":{"x":12}}],[5.507278,{"lines":{"27":[["(gdb) break 0x804                                                                         ",{}]]},"cursor":{"x":17}}],[0.000374,{"lines":{"27":[["(gdb) break 0x80485ab                                                                     ",{}]]},"cursor":{"x":21}}],[0.63793,{"lines":{"0":[["0x080485b0 in main ()                                                                     ",{}]],"1":[["=> 0x80485b0 <main+73>: test   eax,eax                                                    ",{}]],"2":[["---Type <return> to continue, or q <return> to quit---                                    ",{}]],"3":[["0x080485b2 in main ()                                                                     ",{}]],"4":[["=> 0x80485b2 <main+75>: jne    0x80485c2 <main+91>                                        ",{}]],"5":[["0x080485c2 in main ()                                                                     ",{}]],"6":[["=> 0x80485c2 <main+91>: mov    DWORD PTR [esp],0x80486a8                                  ",{}]],"7":[["0x080485c9 in main ()                                                                     ",{}]],"8":[["=> 0x80485c9 <main+98>: call   0x80483a0 <puts@plt>                                       ",{}]],"9":[["Wrong password!                                                                           ",{}]],"10":[["0x080485ce in main ()                                                                     ",{}]],"11":[["=> 0x80485ce <main+103>:        mov    eax,0x0                                            ",{}]],"12":[["0x080485d3 in main ()                                                                     ",{}]],"13":[["=> 0x80485d3 <main+108>:        leave                                                     ",{}]],"14":[["0x080485d4 in main ()                                                                     ",{}]],"15":[["=> 0x80485d4 <main+109>:        ret                                                       ",{}]],"16":[["0xb7e48cc5 in __libc_start_main () from /lib/libc.so.6                                    ",{}]],"17":[["=> 0xb7e48cc5 <__libc_start_main+245>:  mov    DWORD PTR [esp],eax                        ",{}]],"18":[["0xb7e48cc8 in __libc_start_main () from /lib/libc.so.6                                    ",{}]],"19":[["=> 0xb7e48cc8 <__libc_start_main+248>:  call   0xb7e60930 <exit>                          ",{}]],"20":[["[Inferior 1 (process 2535) exited normally]                                               ",{}]],"21":[["No registers.                                                                             ",{}]],"22":[["(gdb) # good! we have the whole execution. Before \"wrong password!\" we see a jump         ",{}]],"23":[["(gdb) # jne jumps if the previous test is different from 0                                ",{}]],"24":[["(gdb) # test eax,eax is non 0 if eax != 0 and this is the result of previous              ",{}]],"25":[["(gdb) # function call to strcmp!                                                          ",{}]],"26":[["(gdb) break 0x80485ab                                                                     ",{}]],"27":[["                                                                                          ",{}]]},"cursor":{"x":0}}],[0.000321,{"lines":{"0":[["=> 0x80485b0 <main+73>: test   eax,eax                                                    ",{}]],"1":[["---Type <return> to continue, or q <return> to quit---                                    ",{}]],"2":[["0x080485b2 in main ()                                                                     ",{}]],"3":[["=> 0x80485b2 <main+75>: jne    0x80485c2 <main+91>                                        ",{}]],"4":[["0x080485c2 in main ()                                                                     ",{}]],"5":[["=> 0x80485c2 <main+91>: mov    DWORD PTR [esp],0x80486a8                                  ",{}]],"6":[["0x080485c9 in main ()                                                                     ",{}]],"7":[["=> 0x80485c9 <main+98>: call   0x80483a0 <puts@plt>                                       ",{}]],"8":[["Wrong password!                                                                           ",{}]],"9":[["0x080485ce in main ()                                                                     ",{}]],"10":[["=> 0x80485ce <main+103>:        mov    eax,0x0                                            ",{}]],"11":[["0x080485d3 in main ()                                                                     ",{}]],"12":[["=> 0x80485d3 <main+108>:        leave                                                     ",{}]],"13":[["0x080485d4 in main ()                                                                     ",{}]],"14":[["=> 0x80485d4 <main+109>:        ret                                                       ",{}]],"15":[["0xb7e48cc5 in __libc_start_main () from /lib/libc.so.6                                    ",{}]],"16":[["=> 0xb7e48cc5 <__libc_start_main+245>:  mov    DWORD PTR [esp],eax                        ",{}]],"17":[["0xb7e48cc8 in __libc_start_main () from /lib/libc.so.6                                    ",{}]],"18":[["=> 0xb7e48cc8 <__libc_start_main+248>:  call   0xb7e60930 <exit>                          ",{}]],"19":[["[Inferior 1 (process 2535) exited normally]                                               ",{}]],"20":[["No registers.                                                                             ",{}]],"21":[["(gdb) # good! we have the whole execution. Before \"wrong password!\" we see a jump         ",{}]],"22":[["(gdb) # jne jumps if the previous test is different from 0                                ",{}]],"23":[["(gdb) # test eax,eax is non 0 if eax != 0 and this is the result of previous              ",{}]],"24":[["(gdb) # function call to strcmp!                                                          ",{}]],"25":[["(gdb) break 0x80485ab                                                                     ",{}]],"26":[["Function \"0x80485ab\" not defined.                                                         ",{}]],"27":[["Make breakpoint pending on future shared library load? (y or [n])                         ",{}]]},"cursor":{"x":66}}],[2.503068,{"lines":{"27":[["Make breakpoint pending on future shared library load? (y or [n]) n                       ",{}]]},"cursor":{"x":67}}],[0.093823,{"lines":{"0":[["---Type <return> to continue, or q <return> to quit---                                    ",{}]],"1":[["0x080485b2 in main ()                                                                     ",{}]],"2":[["=> 0x80485b2 <main+75>: jne    0x80485c2 <main+91>                                        ",{}]],"3":[["0x080485c2 in main ()                                                                     ",{}]],"4":[["=> 0x80485c2 <main+91>: mov    DWORD PTR [esp],0x80486a8                                  ",{}]],"5":[["0x080485c9 in main ()                                                                     ",{}]],"6":[["=> 0x80485c9 <main+98>: call   0x80483a0 <puts@plt>                                       ",{}]],"7":[["Wrong password!                                                                           ",{}]],"8":[["0x080485ce in main ()                                                                     ",{}]],"9":[["=> 0x80485ce <main+103>:        mov    eax,0x0                                            ",{}]],"10":[["0x080485d3 in main ()                                                                     ",{}]],"11":[["=> 0x80485d3 <main+108>:        leave                                                     ",{}]],"12":[["0x080485d4 in main ()                                                                     ",{}]],"13":[["=> 0x80485d4 <main+109>:        ret                                                       ",{}]],"14":[["0xb7e48cc5 in __libc_start_main () from /lib/libc.so.6                                    ",{}]],"15":[["=> 0xb7e48cc5 <__libc_start_main+245>:  mov    DWORD PTR [esp],eax                        ",{}]],"16":[["0xb7e48cc8 in __libc_start_main () from /lib/libc.so.6                                    ",{}]],"17":[["=> 0xb7e48cc8 <__libc_start_main+248>:  call   0xb7e60930 <exit>                          ",{}]],"18":[["[Inferior 1 (process 2535) exited normally]                                               ",{}]],"19":[["No registers.                                                                             ",{}]],"20":[["(gdb) # good! we have the whole execution. Before \"wrong password!\" we see a jump         ",{}]],"21":[["(gdb) # jne jumps if the previous test is different from 0                                ",{}]],"22":[["(gdb) # test eax,eax is non 0 if eax != 0 and this is the result of previous              ",{}]],"23":[["(gdb) # function call to strcmp!                                                          ",{}]],"24":[["(gdb) break 0x80485ab                                                                     ",{}]],"25":[["Function \"0x80485ab\" not defined.                                                         ",{}]],"26":[["Make breakpoint pending on future shared library load? (y or [n]) n                       ",{}]],"27":[["                                                                                          ",{}]]},"cursor":{"x":0}}],[0.000354,{"lines":{"27":[["(gdb)                                                                                     ",{}]]},"cursor":{"x":6}}],[0.450695,{"lines":{"27":[["(gdb) break 0x80485ab                                                                     ",{}]]},"cursor":{"x":21}}],[0.71993,{"cursor":{"x":6}}],[0.173207,{"cursor":{"x":7}}],[0.128175,{"cursor":{"x":8}}],[0.119555,{"cursor":{"x":9}}],[0.127806,{"cursor":{"x":10}}],[0.136433,{"cursor":{"x":11}}],[0.103546,{"cursor":{"x":12}}],[0.810608,{"lines":{"27":[["(gdb) break *0x80485ab                                                                    ",{}]]},"cursor":{"x":13}}],[0.464059,{"lines":{"0":[["0x080485b2 in main ()                                                                     ",{}]],"1":[["=> 0x80485b2 <main+75>: jne    0x80485c2 <main+91>                                        ",{}]],"2":[["0x080485c2 in main ()                                                                     ",{}]],"3":[["=> 0x80485c2 <main+91>: mov    DWORD PTR [esp],0x80486a8                                  ",{}]],"4":[["0x080485c9 in main ()                                                                     ",{}]],"5":[["=> 0x80485c9 <main+98>: call   0x80483a0 <puts@plt>                                       ",{}]],"6":[["Wrong password!                                                                           ",{}]],"7":[["0x080485ce in main ()                                                                     ",{}]],"8":[["=> 0x80485ce <main+103>:        mov    eax,0x0                                            ",{}]],"9":[["0x080485d3 in main ()                                                                     ",{}]],"10":[["=> 0x80485d3 <main+108>:        leave                                                     ",{}]],"11":[["0x080485d4 in main ()                                                                     ",{}]],"12":[["=> 0x80485d4 <main+109>:        ret                                                       ",{}]],"13":[["0xb7e48cc5 in __libc_start_main () from /lib/libc.so.6                                    ",{}]],"14":[["=> 0xb7e48cc5 <__libc_start_main+245>:  mov    DWORD PTR [esp],eax                        ",{}]],"15":[["0xb7e48cc8 in __libc_start_main () from /lib/libc.so.6                                    ",{}]],"16":[["=> 0xb7e48cc8 <__libc_start_main+248>:  call   0xb7e60930 <exit>                          ",{}]],"17":[["[Inferior 1 (process 2535) exited normally]                                               ",{}]],"18":[["No registers.                                                                             ",{}]],"19":[["(gdb) # good! we have the whole execution. Before \"wrong password!\" we see a jump         ",{}]],"20":[["(gdb) # jne jumps if the previous test is different from 0                                ",{}]],"21":[["(gdb) # test eax,eax is non 0 if eax != 0 and this is the result of previous              ",{}]],"22":[["(gdb) # function call to strcmp!                                                          ",{}]],"23":[["(gdb) break 0x80485ab                                                                     ",{}]],"24":[["Function \"0x80485ab\" not defined.                                                         ",{}]],"25":[["Make breakpoint pending on future shared library load? (y or [n]) n                       ",{}]],"26":[["(gdb) break *0x80485ab                                                                    ",{}]],"27":[["                                                                                          ",{}]]},"cursor":{"x":0}}],[0.000465,{"lines":{"0":[["=> 0x80485b2 <main+75>: jne    0x80485c2 <main+91>                                        ",{}]],"1":[["0x080485c2 in main ()                                                                     ",{}]],"2":[["=> 0x80485c2 <main+91>: mov    DWORD PTR [esp],0x80486a8                                  ",{}]],"3":[["0x080485c9 in main ()                                                                     ",{}]],"4":[["=> 0x80485c9 <main+98>: call   0x80483a0 <puts@plt>                                       ",{}]],"5":[["Wrong password!                                                                           ",{}]],"6":[["0x080485ce in main ()                                                                     ",{}]],"7":[["=> 0x80485ce <main+103>:        mov    eax,0x0                                            ",{}]],"8":[["0x080485d3 in main ()                                                                     ",{}]],"9":[["=> 0x80485d3 <main+108>:        leave                                                     ",{}]],"10":[["0x080485d4 in main ()                                                                     ",{}]],"11":[["=> 0x80485d4 <main+109>:        ret                                                       ",{}]],"12":[["0xb7e48cc5 in __libc_start_main () from /lib/libc.so.6                                    ",{}]],"13":[["=> 0xb7e48cc5 <__libc_start_main+245>:  mov    DWORD PTR [esp],eax                        ",{}]],"14":[["0xb7e48cc8 in __libc_start_main () from /lib/libc.so.6                                    ",{}]],"15":[["=> 0xb7e48cc8 <__libc_start_main+248>:  call   0xb7e60930 <exit>                          ",{}]],"16":[["[Inferior 1 (process 2535) exited normally]                                               ",{}]],"17":[["No registers.                                                                             ",{}]],"18":[["(gdb) # good! we have the whole execution. Before \"wrong password!\" we see a jump         ",{}]],"19":[["(gdb) # jne jumps if the previous test is different from 0                                ",{}]],"20":[["(gdb) # test eax,eax is non 0 if eax != 0 and this is the result of previous              ",{}]],"21":[["(gdb) # function call to strcmp!                                                          ",{}]],"22":[["(gdb) break 0x80485ab                                                                     ",{}]],"23":[["Function \"0x80485ab\" not defined.                                                         ",{}]],"24":[["Make breakpoint pending on future shared library load? (y or [n]) n                       ",{}]],"25":[["(gdb) break *0x80485ab                                                                    ",{}]],"26":[["Breakpoint 2 at 0x80485ab                                                                 ",{}]],"27":[["(gdb)                                                                                     ",{}]]},"cursor":{"x":6}}],[7.992624,{"lines":{"27":[["(gdb) #                                                                                   ",{}]]},"cursor":{"x":7}}],[0.327603,{"cursor":{"x":8}}],[0.238187,{"lines":{"27":[["(gdb) # 0x80485                                                                           ",{}]]},"cursor":{"x":15}}],[0.001583,{"lines":{"27":[["(gdb) # 0x80485ab <main+68>:call   0x8048380 <strcmp@plt>                                 ",{}]]},"cursor":{"x":57}}],[0.276987,{"lines":{"0":[["0x080485c2 in main ()                                                                     ",{}]],"1":[["=> 0x80485c2 <main+91>: mov    DWORD PTR [esp],0x80486a8                                  ",{}]],"2":[["0x080485c9 in main ()                                                                     ",{}]],"3":[["=> 0x80485c9 <main+98>: call   0x80483a0 <puts@plt>                                       ",{}]],"4":[["Wrong password!                                                                           ",{}]],"5":[["0x080485ce in main ()                                                                     ",{}]],"6":[["=> 0x80485ce <main+103>:        mov    eax,0x0                                            ",{}]],"7":[["0x080485d3 in main ()                                                                     ",{}]],"8":[["=> 0x80485d3 <main+108>:        leave                                                     ",{}]],"9":[["0x080485d4 in main ()                                                                     ",{}]],"10":[["=> 0x80485d4 <main+109>:        ret                                                       ",{}]],"11":[["0xb7e48cc5 in __libc_start_main () from /lib/libc.so.6                                    ",{}]],"12":[["=> 0xb7e48cc5 <__libc_start_main+245>:  mov    DWORD PTR [esp],eax                        ",{}]],"13":[["0xb7e48cc8 in __libc_start_main () from /lib/libc.so.6                                    ",{}]],"14":[["=> 0xb7e48cc8 <__libc_start_main+248>:  call   0xb7e60930 <exit>                          ",{}]],"15":[["[Inferior 1 (process 2535) exited normally]                                               ",{}]],"16":[["No registers.                                                                             ",{}]],"17":[["(gdb) # good! we have the whole execution. Before \"wrong password!\" we see a jump         ",{}]],"18":[["(gdb) # jne jumps if the previous test is different from 0                                ",{}]],"19":[["(gdb) # test eax,eax is non 0 if eax != 0 and this is the result of previous              ",{}]],"20":[["(gdb) # function call to strcmp!                                                          ",{}]],"21":[["(gdb) break 0x80485ab                                                                     ",{}]],"22":[["Function \"0x80485ab\" not defined.                                                         ",{}]],"23":[["Make breakpoint pending on future shared library load? (y or [n]) n                       ",{}]],"24":[["(gdb) break *0x80485ab                                                                    ",{}]],"25":[["Breakpoint 2 at 0x80485ab                                                                 ",{}]],"26":[["(gdb) # 0x80485ab <main+68>:call   0x8048380 <strcmp@plt>                                 ",{}]],"27":[["(gdb)                                                                                     ",{}]]},"cursor":{"x":6}}],[2.057925,{"lines":{"27":[["(gdb) #                                                                                   ",{}]]},"cursor":{"x":7}}],[0.214219,{"cursor":{"x":8}}],[0.159554,{"lines":{"27":[["(gdb) # w                                                                                 ",{}]]},"cursor":{"x":9}}],[0.175225,{"lines":{"27":[["(gdb) # we                                                                                ",{}]]},"cursor":{"x":10}}],[0.104625,{"cursor":{"x":11}}],[0.144085,{"lines":{"27":[["(gdb) # we h                                                                              ",{}]]},"cursor":{"x":12}}],[0.072021,{"lines":{"27":[["(gdb) # we ha                                                                             ",{}]]},"cursor":{"x":13}}],[0.144964,{"lines":{"27":[["(gdb) # we hav                                                                            ",{}]]},"cursor":{"x":14}}],[0.030834,{"lines":{"27":[["(gdb) # we have                                                                           ",{}]]},"cursor":{"x":15}}],[0.09635100000000001,{"cursor":{"x":16}}],[0.120574,{"lines":{"27":[["(gdb) # we have a                                                                         ",{}]]},"cursor":{"x":17}}],[0.047432,{"cursor":{"x":18}}],[0.239035,{"lines":{"27":[["(gdb) # we have a b                                                                       ",{}]]},"cursor":{"x":19}}],[0.067936,{"lines":{"27":[["(gdb) # we have a br                                                                      ",{}]]},"cursor":{"x":20}}],[0.029287,{"lines":{"27":[["(gdb) # we have a bre                                                                     ",{}]]},"cursor":{"x":21}}],[0.143491,{"lines":{"27":[["(gdb) # we have a brea                                                                    ",{}]]},"cursor":{"x":22}}],[0.10406,{"lines":{"27":[["(gdb) # we have a break                                                                   ",{}]]},"cursor":{"x":23}}],[0.298355,{"lines":{"27":[["(gdb) # we have a breakp                                                                  ",{}]]},"cursor":{"x":24}}],[0.205927,{"lines":{"27":[["(gdb) # we have a breakpo                                                                 ",{}]]},"cursor":{"x":25}}],[0.08807,{"lines":{"27":[["(gdb) # we have a breakpoi                                                                ",{}]]},"cursor":{"x":26}}],[0.877455,{"lines":{"27":[["(gdb) # we have a breakpoin                                                               ",{}]]},"cursor":{"x":27}}],[0.005202,{"lines":{"27":[["(gdb) # we have a breakpoint                                                              ",{}]]},"cursor":{"x":29}}],[1.103551,{"lines":{"27":[["(gdb) # we have a breakpoint b                                                            ",{}]]},"cursor":{"x":30}}],[0.125188,{"lines":{"27":[["(gdb) # we have a breakpoint be                                                           ",{}]]},"cursor":{"x":31}}],[0.201106,{"lines":{"27":[["(gdb) # we have a breakpoint bef                                                          ",{}]]},"cursor":{"x":32}}],[0.110813,{"lines":{"27":[["(gdb) # we have a breakpoint befo                                                         ",{}]]},"cursor":{"x":33}}],[0.103975,{"lines":{"27":[["(gdb) # we have a breakpoint befor                                                        ",{}]]},"cursor":{"x":34}}],[0.032382,{"lines":{"27":[["(gdb) # we have a breakpoint before                                                       ",{}]]},"cursor":{"x":35}}],[0.128284,{"cursor":{"x":36}}],[0.152449,{"lines":{"27":[["(gdb) # we have a breakpoint before c                                                     ",{}]]},"cursor":{"x":37}}],[0.111193,{"lines":{"27":[["(gdb) # we have a breakpoint before ca                                                    ",{}]]},"cursor":{"x":38}}],[0.111813,{"lines":{"27":[["(gdb) # we have a breakpoint before cal                                                   ",{}]]},"cursor":{"x":39}}],[0.112329,{"lines":{"27":[["(gdb) # we have a breakpoint before call                                                  ",{}]]},"cursor":{"x":40}}],[0.184414,{"lines":{"27":[["(gdb) # we have a breakpoint before calli                                                 ",{}]]},"cursor":{"x":41}}],[0.039433,{"lines":{"27":[["(gdb) # we have a breakpoint before callin                                                ",{}]]},"cursor":{"x":42}}],[0.096197,{"lines":{"27":[["(gdb) # we have a breakpoint before calling                                               ",{}]]},"cursor":{"x":43}}],[0.112464,{"cursor":{"x":44}}],[0.118805,{"lines":{"27":[["(gdb) # we have a breakpoint before calling s                                             ",{}]]},"cursor":{"x":45}}],[0.15199,{"lines":{"27":[["(gdb) # we have a breakpoint before calling st                                            ",{}]]},"cursor":{"x":46}}],[0.176476,{"lines":{"27":[["(gdb) # we have a breakpoint before calling str                                           ",{}]]},"cursor":{"x":47}}],[0.322596,{"lines":{"27":[["(gdb) # we have a breakpoint before calling strc                                          ",{}]]},"cursor":{"x":48}}],[0.149518,{"lines":{"27":[["(gdb) # we have a breakpoint before calling strcm                                         ",{}]]},"cursor":{"x":49}}],[0.192561,{"lines":{"27":[["(gdb) # we have a breakpoint before calling strcmp                                        ",{}]]},"cursor":{"x":50}}],[0.802181,{"lines":{"27":[["(gdb) # we have a breakpoint before calling strcmp!                                       ",{}]]},"cursor":{"x":51}}],[1.11942,{"lines":{"0":[["=> 0x80485c2 <main+91>: mov    DWORD PTR [esp],0x80486a8                                  ",{}]],"1":[["0x080485c9 in main ()                                                                     ",{}]],"2":[["=> 0x80485c9 <main+98>: call   0x80483a0 <puts@plt>                                       ",{}]],"3":[["Wrong password!                                                                           ",{}]],"4":[["0x080485ce in main ()                                                                     ",{}]],"5":[["=> 0x80485ce <main+103>:        mov    eax,0x0                                            ",{}]],"6":[["0x080485d3 in main ()                                                                     ",{}]],"7":[["=> 0x80485d3 <main+108>:        leave                                                     ",{}]],"8":[["0x080485d4 in main ()                                                                     ",{}]],"9":[["=> 0x80485d4 <main+109>:        ret                                                       ",{}]],"10":[["0xb7e48cc5 in __libc_start_main () from /lib/libc.so.6                                    ",{}]],"11":[["=> 0xb7e48cc5 <__libc_start_main+245>:  mov    DWORD PTR [esp],eax                        ",{}]],"12":[["0xb7e48cc8 in __libc_start_main () from /lib/libc.so.6                                    ",{}]],"13":[["=> 0xb7e48cc8 <__libc_start_main+248>:  call   0xb7e60930 <exit>                          ",{}]],"14":[["[Inferior 1 (process 2535) exited normally]                                               ",{}]],"15":[["No registers.                                                                             ",{}]],"16":[["(gdb) # good! we have the whole execution. Before \"wrong password!\" we see a jump         ",{}]],"17":[["(gdb) # jne jumps if the previous test is different from 0                                ",{}]],"18":[["(gdb) # test eax,eax is non 0 if eax != 0 and this is the result of previous              ",{}]],"19":[["(gdb) # function call to strcmp!                                                          ",{}]],"20":[["(gdb) break 0x80485ab                                                                     ",{}]],"21":[["Function \"0x80485ab\" not defined.                                                         ",{}]],"22":[["Make breakpoint pending on future shared library load? (y or [n]) n                       ",{}]],"23":[["(gdb) break *0x80485ab                                                                    ",{}]],"24":[["Breakpoint 2 at 0x80485ab                                                                 ",{}]],"25":[["(gdb) # 0x80485ab <main+68>:call   0x8048380 <strcmp@plt>                                 ",{}]],"26":[["(gdb) # we have a breakpoint before calling strcmp!                                       ",{}]],"27":[["                                                                                          ",{}]]},"cursor":{"x":0}}],[5.7e-05,{"lines":{"27":[["(gdb)                                                                                     ",{}]]},"cursor":{"x":6}}],[1.872973,{"lines":{"27":[["(gdb) r                                                                                   ",{}]]},"cursor":{"x":7}}],[0.156509,{"cursor":{"x":8}}],[0.272382,{"lines":{"27":[["(gdb) r 1                                                                                 ",{}]]},"cursor":{"x":9}}],[0.024379,{"lines":{"27":[["(gdb) r 12                                                                                ",{}]]},"cursor":{"x":10}}],[0.087006,{"lines":{"27":[["(gdb) r 123                                                                               ",{}]]},"cursor":{"x":11}}],[0.232462,{"lines":{"27":[["(gdb) r 1234                                                                              ",{}]]},"cursor":{"x":12}}],[0.167917,{"lines":{"0":[["0x080485c9 in main ()                                                                     ",{}]],"1":[["=> 0x80485c9 <main+98>: call   0x80483a0 <puts@plt>                                       ",{}]],"2":[["Wrong password!                                                                           ",{}]],"3":[["0x080485ce in main ()                                                                     ",{}]],"4":[["=> 0x80485ce <main+103>:        mov    eax,0x0                                            ",{}]],"5":[["0x080485d3 in main ()                                                                     ",{}]],"6":[["=> 0x80485d3 <main+108>:        leave                                                     ",{}]],"7":[["0x080485d4 in main ()                                                                     ",{}]],"8":[["=> 0x80485d4 <main+109>:        ret                                                       ",{}]],"9":[["0xb7e48cc5 in __libc_start_main () from /lib/libc.so.6                                    ",{}]],"10":[["=> 0xb7e48cc5 <__libc_start_main+245>:  mov    DWORD PTR [esp],eax                        ",{}]],"11":[["0xb7e48cc8 in __libc_start_main () from /lib/libc.so.6                                    ",{}]],"12":[["=> 0xb7e48cc8 <__libc_start_main+248>:  call   0xb7e60930 <exit>                          ",{}]],"13":[["[Inferior 1 (process 2535) exited normally]                                               ",{}]],"14":[["No registers.                                                                             ",{}]],"15":[["(gdb) # good! we have the whole execution. Before \"wrong password!\" we see a jump         ",{}]],"16":[["(gdb) # jne jumps if the previous test is different from 0                                ",{}]],"17":[["(gdb) # test eax,eax is non 0 if eax != 0 and this is the result of previous              ",{}]],"18":[["(gdb) # function call to strcmp!                                                          ",{}]],"19":[["(gdb) break 0x80485ab                                                                     ",{}]],"20":[["Function \"0x80485ab\" not defined.                                                         ",{}]],"21":[["Make breakpoint pending on future shared library load? (y or [n]) n                       ",{}]],"22":[["(gdb) break *0x80485ab                                                                    ",{}]],"23":[["Breakpoint 2 at 0x80485ab                                                                 ",{}]],"24":[["(gdb) # 0x80485ab <main+68>:call   0x8048380 <strcmp@plt>                                 ",{}]],"25":[["(gdb) # we have a breakpoint before calling strcmp!                                       ",{}]],"26":[["(gdb) r 1234                                                                              ",{}]],"27":[["                                                                                          ",{}]]},"cursor":{"x":0}}],[0.007314,{"lines":{"0":[["0x080485ce in main ()                                                                     ",{}]],"1":[["=> 0x80485ce <main+103>:        mov    eax,0x0                                            ",{}]],"2":[["0x080485d3 in main ()                                                                     ",{}]],"3":[["=> 0x80485d3 <main+108>:        leave                                                     ",{}]],"4":[["0x080485d4 in main ()                                                                     ",{}]],"5":[["=> 0x80485d4 <main+109>:        ret                                                       ",{}]],"6":[["0xb7e48cc5 in __libc_start_main () from /lib/libc.so.6                                    ",{}]],"7":[["=> 0xb7e48cc5 <__libc_start_main+245>:  mov    DWORD PTR [esp],eax                        ",{}]],"8":[["0xb7e48cc8 in __libc_start_main () from /lib/libc.so.6                                    ",{}]],"9":[["=> 0xb7e48cc8 <__libc_start_main+248>:  call   0xb7e60930 <exit>                          ",{}]],"10":[["[Inferior 1 (process 2535) exited normally]                                               ",{}]],"11":[["No registers.                                                                             ",{}]],"12":[["(gdb) # good! we have the whole execution. Before \"wrong password!\" we see a jump         ",{}]],"13":[["(gdb) # jne jumps if the previous test is different from 0                                ",{}]],"14":[["(gdb) # test eax,eax is non 0 if eax != 0 and this is the result of previous              ",{}]],"15":[["(gdb) # function call to strcmp!                                                          ",{}]],"16":[["(gdb) break 0x80485ab                                                                     ",{}]],"17":[["Function \"0x80485ab\" not defined.                                                         ",{}]],"18":[["Make breakpoint pending on future shared library load? (y or [n]) n                       ",{}]],"19":[["(gdb) break *0x80485ab                                                                    ",{}]],"20":[["Breakpoint 2 at 0x80485ab                                                                 ",{}]],"21":[["(gdb) # 0x80485ab <main+68>:call   0x8048380 <strcmp@plt>                                 ",{}]],"22":[["(gdb) # we have a breakpoint before calling strcmp!                                       ",{}]],"23":[["(gdb) r 1234                                                                              ",{}]],"24":[["Starting program: /home/r1x/gdb/password 1234                                             ",{}]],"25":[["warning: Could not load shared library symbols for linux-gate.so.1.                       ",{}]],"26":[["Do you need \"set solib-search-path\" or \"set sysroot\"?                                     ",{}]]}}],[0.02598,{"lines":{"0":[["=> 0x80485ce <main+103>:        mov    eax,0x0                                            ",{}]],"1":[["0x080485d3 in main ()                                                                     ",{}]],"2":[["=> 0x80485d3 <main+108>:        leave                                                     ",{}]],"3":[["0x080485d4 in main ()                                                                     ",{}]],"4":[["=> 0x80485d4 <main+109>:        ret                                                       ",{}]],"5":[["0xb7e48cc5 in __libc_start_main () from /lib/libc.so.6                                    ",{}]],"6":[["=> 0xb7e48cc5 <__libc_start_main+245>:  mov    DWORD PTR [esp],eax                        ",{}]],"7":[["0xb7e48cc8 in __libc_start_main () from /lib/libc.so.6                                    ",{}]],"8":[["=> 0xb7e48cc8 <__libc_start_main+248>:  call   0xb7e60930 <exit>                          ",{}]],"9":[["[Inferior 1 (process 2535) exited normally]                                               ",{}]],"10":[["No registers.                                                                             ",{}]],"11":[["(gdb) # good! we have the whole execution. Before \"wrong password!\" we see a jump         ",{}]],"12":[["(gdb) # jne jumps if the previous test is different from 0                                ",{}]],"13":[["(gdb) # test eax,eax is non 0 if eax != 0 and this is the result of previous              ",{}]],"14":[["(gdb) # function call to strcmp!                                                          ",{}]],"15":[["(gdb) break 0x80485ab                                                                     ",{}]],"16":[["Function \"0x80485ab\" not defined.                                                         ",{}]],"17":[["Make breakpoint pending on future shared library load? (y or [n]) n                       ",{}]],"18":[["(gdb) break *0x80485ab                                                                    ",{}]],"19":[["Breakpoint 2 at 0x80485ab                                                                 ",{}]],"20":[["(gdb) # 0x80485ab <main+68>:call   0x8048380 <strcmp@plt>                                 ",{}]],"21":[["(gdb) # we have a breakpoint before calling strcmp!                                       ",{}]],"22":[["(gdb) r 1234                                                                              ",{}]],"23":[["Starting program: /home/r1x/gdb/password 1234                                             ",{}]],"24":[["warning: Could not load shared library symbols for linux-gate.so.1.                       ",{}]],"25":[["Do you need \"set solib-search-path\" or \"set sysroot\"?                                     ",{}]],"26":[["                                                                                          ",{}]],"27":[["Breakpoint 1, 0x0804856a in main ()                                                       ",{}]]},"cursor":{"x":35}}],[7.499999999999999e-05,{"lines":{"0":[["0x080485d3 in main ()                                                                     ",{}]],"1":[["=> 0x80485d3 <main+108>:        leave                                                     ",{}]],"2":[["0x080485d4 in main ()                                                                     ",{}]],"3":[["=> 0x80485d4 <main+109>:        ret                                                       ",{}]],"4":[["0xb7e48cc5 in __libc_start_main () from /lib/libc.so.6                                    ",{}]],"5":[["=> 0xb7e48cc5 <__libc_start_main+245>:  mov    DWORD PTR [esp],eax                        ",{}]],"6":[["0xb7e48cc8 in __libc_start_main () from /lib/libc.so.6                                    ",{}]],"7":[["=> 0xb7e48cc8 <__libc_start_main+248>:  call   0xb7e60930 <exit>                          ",{}]],"8":[["[Inferior 1 (process 2535) exited normally]                                               ",{}]],"9":[["No registers.                                                                             ",{}]],"10":[["(gdb) # good! we have the whole execution. Before \"wrong password!\" we see a jump         ",{}]],"11":[["(gdb) # jne jumps if the previous test is different from 0                                ",{}]],"12":[["(gdb) # test eax,eax is non 0 if eax != 0 and this is the result of previous              ",{}]],"13":[["(gdb) # function call to strcmp!                                                          ",{}]],"14":[["(gdb) break 0x80485ab                                                                     ",{}]],"15":[["Function \"0x80485ab\" not defined.                                                         ",{}]],"16":[["Make breakpoint pending on future shared library load? (y or [n]) n                       ",{}]],"17":[["(gdb) break *0x80485ab                                                                    ",{}]],"18":[["Breakpoint 2 at 0x80485ab                                                                 ",{}]],"19":[["(gdb) # 0x80485ab <main+68>:call   0x8048380 <strcmp@plt>                                 ",{}]],"20":[["(gdb) # we have a breakpoint before calling strcmp!                                       ",{}]],"21":[["(gdb) r 1234                                                                              ",{}]],"22":[["Starting program: /home/r1x/gdb/password 1234                                             ",{}]],"23":[["warning: Could not load shared library symbols for linux-gate.so.1.                       ",{}]],"24":[["Do you need \"set solib-search-path\" or \"set sysroot\"?                                     ",{}]],"25":[["                                                                                          ",{}]],"26":[["Breakpoint 1, 0x0804856a in main ()                                                       ",{}]],"27":[["(gdb)                                                                                     ",{}]]},"cursor":{"x":6}}],[0.912651,{"lines":{"27":[["(gdb) c                                                                                   ",{}]]},"cursor":{"x":7}}],[0.085844,{"lines":{"0":[["0x080485d4 in main ()                                                                     ",{}]],"1":[["=> 0x80485d4 <main+109>:        ret                                                       ",{}]],"2":[["0xb7e48cc5 in __libc_start_main () from /lib/libc.so.6                                    ",{}]],"3":[["=> 0xb7e48cc5 <__libc_start_main+245>:  mov    DWORD PTR [esp],eax                        ",{}]],"4":[["0xb7e48cc8 in __libc_start_main () from /lib/libc.so.6                                    ",{}]],"5":[["=> 0xb7e48cc8 <__libc_start_main+248>:  call   0xb7e60930 <exit>                          ",{}]],"6":[["[Inferior 1 (process 2535) exited normally]                                               ",{}]],"7":[["No registers.                                                                             ",{}]],"8":[["(gdb) # good! we have the whole execution. Before \"wrong password!\" we see a jump         ",{}]],"9":[["(gdb) # jne jumps if the previous test is different from 0                                ",{}]],"10":[["(gdb) # test eax,eax is non 0 if eax != 0 and this is the result of previous              ",{}]],"11":[["(gdb) # function call to strcmp!                                                          ",{}]],"12":[["(gdb) break 0x80485ab                                                                     ",{}]],"13":[["Function \"0x80485ab\" not defined.                                                         ",{}]],"14":[["Make breakpoint pending on future shared library load? (y or [n]) n                       ",{}]],"15":[["(gdb) break *0x80485ab                                                                    ",{}]],"16":[["Breakpoint 2 at 0x80485ab                                                                 ",{}]],"17":[["(gdb) # 0x80485ab <main+68>:call   0x8048380 <strcmp@plt>                                 ",{}]],"18":[["(gdb) # we have a breakpoint before calling strcmp!                                       ",{}]],"19":[["(gdb) r 1234                                                                              ",{}]],"20":[["Starting program: /home/r1x/gdb/password 1234                                             ",{}]],"21":[["warning: Could not load shared library symbols for linux-gate.so.1.                       ",{}]],"22":[["Do you need \"set solib-search-path\" or \"set sysroot\"?                                     ",{}]],"23":[["                                                                                          ",{}]],"24":[["Breakpoint 1, 0x0804856a in main ()                                                       ",{}]],"25":[["(gdb) c                                                                                   ",{}]],"26":[["Continuing.                                                                               ",{}]],"27":[["                                                                                          ",{}]]},"cursor":{"x":0}}],[0.0009630000000000001,{"lines":{"0":[["0xb7e48cc5 in __libc_start_main () from /lib/libc.so.6                                    ",{}]],"1":[["=> 0xb7e48cc5 <__libc_start_main+245>:  mov    DWORD PTR [esp],eax                        ",{}]],"2":[["0xb7e48cc8 in __libc_start_main () from /lib/libc.so.6                                    ",{}]],"3":[["=> 0xb7e48cc8 <__libc_start_main+248>:  call   0xb7e60930 <exit>                          ",{}]],"4":[["[Inferior 1 (process 2535) exited normally]                                               ",{}]],"5":[["No registers.                                                                             ",{}]],"6":[["(gdb) # good! we have the whole execution. Before \"wrong password!\" we see a jump         ",{}]],"7":[["(gdb) # jne jumps if the previous test is different from 0                                ",{}]],"8":[["(gdb) # test eax,eax is non 0 if eax != 0 and this is the result of previous              ",{}]],"9":[["(gdb) # function call to strcmp!                                                          ",{}]],"10":[["(gdb) break 0x80485ab                                                                     ",{}]],"11":[["Function \"0x80485ab\" not defined.                                                         ",{}]],"12":[["Make breakpoint pending on future shared library load? (y or [n]) n                       ",{}]],"13":[["(gdb) break *0x80485ab                                                                    ",{}]],"14":[["Breakpoint 2 at 0x80485ab                                                                 ",{}]],"15":[["(gdb) # 0x80485ab <main+68>:call   0x8048380 <strcmp@plt>                                 ",{}]],"16":[["(gdb) # we have a breakpoint before calling strcmp!                                       ",{}]],"17":[["(gdb) r 1234                                                                              ",{}]],"18":[["Starting program: /home/r1x/gdb/password 1234                                             ",{}]],"19":[["warning: Could not load shared library symbols for linux-gate.so.1.                       ",{}]],"20":[["Do you need \"set solib-search-path\" or \"set sysroot\"?                                     ",{}]],"21":[["                                                                                          ",{}]],"22":[["Breakpoint 1, 0x0804856a in main ()                                                       ",{}]],"23":[["(gdb) c                                                                                   ",{}]],"24":[["Continuing.                                                                               ",{}]],"25":[["                                                                                          ",{}]],"26":[["Breakpoint 2, 0x080485ab in main ()                                                       ",{}]],"27":[["(gdb)                                                                                     ",{}]]},"cursor":{"x":6}}],[1.881173,{"lines":{"27":[["(gdb) #                                                                                   ",{}]]},"cursor":{"x":7}}],[0.116856,{"cursor":{"x":8}}],[0.33699,{"lines":{"27":[["(gdb) # O                                                                                 ",{}]]},"cursor":{"x":9}}],[0.02392,{"lines":{"27":[["(gdb) # OK                                                                                ",{}]]},"cursor":{"x":10}}],[0.114348,{"cursor":{"x":11}}],[0.407813,{"lines":{"27":[["(gdb) # OK h                                                                              ",{}]]},"cursor":{"x":12}}],[0.070274,{"lines":{"27":[["(gdb) # OK he                                                                             ",{}]]},"cursor":{"x":13}}],[0.119317,{"lines":{"27":[["(gdb) # OK her                                                                            ",{}]]},"cursor":{"x":14}}],[0.031559,{"lines":{"27":[["(gdb) # OK here                                                                           ",{}]]},"cursor":{"x":15}}],[0.08041,{"cursor":{"x":16}}],[0.12021,{"lines":{"27":[["(gdb) # OK here w                                                                         ",{}]]},"cursor":{"x":17}}],[0.143585,{"lines":{"27":[["(gdb) # OK here we                                                                        ",{}]]},"cursor":{"x":18}}],[0.087587,{"cursor":{"x":19}}],[0.338719,{"lines":{"27":[["(gdb) # OK here we a                                                                      ",{}]]},"cursor":{"x":20}}],[0.157533,{"lines":{"27":[["(gdb) # OK here we ar                                                                     ",{}]]},"cursor":{"x":21}}],[0.04813,{"lines":{"27":[["(gdb) # OK here we are                                                                    ",{}]]},"cursor":{"x":22}}],[0.763625,{"lines":{"27":[["(gdb) # OK here we are.                                                                   ",{}]]},"cursor":{"x":23}}],[0.108606,{"cursor":{"x":24}}],[2.842437,{"lines":{"27":[["(gdb) # OK here we are. s                                                                 ",{}]]},"cursor":{"x":25}}],[0.261305,{"lines":{"27":[["(gdb) # OK here we are. st                                                                ",{}]]},"cursor":{"x":26}}],[0.01596,{"lines":{"27":[["(gdb) # OK here we are. str                                                               ",{}]]},"cursor":{"x":27}}],[0.224499,{"lines":{"27":[["(gdb) # OK here we are. strc                                                              ",{}]]},"cursor":{"x":28}}],[0.111758,{"lines":{"27":[["(gdb) # OK here we are. strcm                                                             ",{}]]},"cursor":{"x":29}}],[0.159622,{"lines":{"27":[["(gdb) # OK here we are. strcmp                                                            ",{}]]},"cursor":{"x":30}}],[0.135744,{"cursor":{"x":31}}],[0.152431,{"lines":{"27":[["(gdb) # OK here we are. strcmp c                                                          ",{}]]},"cursor":{"x":32}}],[0.104475,{"lines":{"27":[["(gdb) # OK here we are. strcmp co                                                         ",{}]]},"cursor":{"x":33}}],[0.07087,{"lines":{"27":[["(gdb) # OK here we are. strcmp com                                                        ",{}]]},"cursor":{"x":34}}],[0.153287,{"lines":{"27":[["(gdb) # OK here we are. strcmp comp                                                       ",{}]]},"cursor":{"x":35}}],[0.126381,{"lines":{"27":[["(gdb) # OK here we are. strcmp compa                                                      ",{}]]},"cursor":{"x":36}}],[0.16065,{"lines":{"27":[["(gdb) # OK here we are. strcmp compar                                                     ",{}]]},"cursor":{"x":37}}],[0.071743,{"lines":{"27":[["(gdb) # OK here we are. strcmp compare                                                    ",{}]]},"cursor":{"x":38}}],[0.177136,{"lines":{"27":[["(gdb) # OK here we are. strcmp compares                                                   ",{}]]},"cursor":{"x":39}}],[0.12729,{"cursor":{"x":40}}],[0.144165,{"lines":{"27":[["(gdb) # OK here we are. strcmp compares t                                                 ",{}]]},"cursor":{"x":41}}],[0.216606,{"lines":{"27":[["(gdb) # OK here we are. strcmp compares tw                                                ",{}]]},"cursor":{"x":42}}],[0.09585,{"lines":{"27":[["(gdb) # OK here we are. strcmp compares two                                               ",{}]]},"cursor":{"x":43}}],[0.054729,{"cursor":{"x":44}}],[0.136457,{"lines":{"27":[["(gdb) # OK here we are. strcmp compares two s                                             ",{}]]},"cursor":{"x":45}}],[0.191859,{"lines":{"27":[["(gdb) # OK here we are. strcmp compares two st                                            ",{}]]},"cursor":{"x":46}}],[0.057222,{"lines":{"27":[["(gdb) # OK here we are. strcmp compares two str                                           ",{}]]},"cursor":{"x":47}}],[0.095223,{"lines":{"27":[["(gdb) # OK here we are. strcmp compares two stri                                          ",{}]]},"cursor":{"x":48}}],[0.068177,{"lines":{"27":[["(gdb) # OK here we are. strcmp compares two strin                                         ",{}]]},"cursor":{"x":49}}],[0.07638300000000001,{"lines":{"27":[["(gdb) # OK here we are. strcmp compares two string                                        ",{}]]},"cursor":{"x":50}}],[0.128061,{"cursor":{"x":51}}],[0.466644,{"cursor":{"x":50}}],[0.092115,{"lines":{"27":[["(gdb) # OK here we are. strcmp compares two strings                                       ",{}]]},"cursor":{"x":51}}],[0.073146,{"cursor":{"x":52}}],[0.247786,{"lines":{"27":[["(gdb) # OK here we are. strcmp compares two strings a                                     ",{}]]},"cursor":{"x":53}}],[0.144049,{"lines":{"27":[["(gdb) # OK here we are. strcmp compares two strings an                                    ",{}]]},"cursor":{"x":54}}],[0.143032,{"lines":{"27":[["(gdb) # OK here we are. strcmp compares two strings and                                   ",{}]]},"cursor":{"x":55}}],[0.088254,{"cursor":{"x":56}}],[0.184665,{"lines":{"27":[["(gdb) # OK here we are. strcmp compares two strings and i                                 ",{}]]},"cursor":{"x":57}}],[0.111503,{"lines":{"27":[["(gdb) # OK here we are. strcmp compares two strings and if                                ",{}]]},"cursor":{"x":58}}],[0.121154,{"cursor":{"x":59}}],[0.103296,{"lines":{"27":[["(gdb) # OK here we are. strcmp compares two strings and if t                              ",{}]]},"cursor":{"x":60}}],[0.07158399999999999,{"lines":{"27":[["(gdb) # OK here we are. strcmp compares two strings and if th                             ",{}]]},"cursor":{"x":61}}],[0.096641,{"lines":{"27":[["(gdb) # OK here we are. strcmp compares two strings and if the                            ",{}]]},"cursor":{"x":62}}],[0.434094,{"lines":{"27":[["(gdb) # OK here we are. strcmp compares two strings and if they                           ",{}]]},"cursor":{"x":63}}],[0.117729,{"cursor":{"x":64}}],[0.159681,{"lines":{"27":[["(gdb) # OK here we are. strcmp compares two strings and if they a                         ",{}]]},"cursor":{"x":65}}],[0.128215,{"lines":{"27":[["(gdb) # OK here we are. strcmp compares two strings and if they ar                        ",{}]]},"cursor":{"x":66}}],[0.07224999999999999,{"lines":{"27":[["(gdb) # OK here we are. strcmp compares two strings and if they are                       ",{}]]},"cursor":{"x":67}}],[0.071574,{"cursor":{"x":68}}],[0.111299,{"lines":{"27":[["(gdb) # OK here we are. strcmp compares two strings and if they are d                     ",{}]]},"cursor":{"x":69}}],[0.080017,{"lines":{"27":[["(gdb) # OK here we are. strcmp compares two strings and if they are di                    ",{}]]},"cursor":{"x":70}}],[0.112589,{"lines":{"27":[["(gdb) # OK here we are. strcmp compares two strings and if they are dif                   ",{}]]},"cursor":{"x":71}}],[0.167323,{"lines":{"27":[["(gdb) # OK here we are. strcmp compares two strings and if they are diff                  ",{}]]},"cursor":{"x":72}}],[0.056303,{"lines":{"27":[["(gdb) # OK here we are. strcmp compares two strings and if they are diffe                 ",{}]]},"cursor":{"x":73}}],[0.120102,{"lines":{"27":[["(gdb) # OK here we are. strcmp compares two strings and if they are differ                ",{}]]},"cursor":{"x":74}}],[0.064166,{"lines":{"27":[["(gdb) # OK here we are. strcmp compares two strings and if they are differe               ",{}]]},"cursor":{"x":75}}],[0.071531,{"lines":{"27":[["(gdb) # OK here we are. strcmp compares two strings and if they are differen              ",{}]]},"cursor":{"x":76}}],[0.105302,{"lines":{"27":[["(gdb) # OK here we are. strcmp compares two strings and if they are different             ",{}]]},"cursor":{"x":77}}],[0.38538,{"lines":{"0":[["=> 0xb7e48cc5 <__libc_start_main+245>:  mov    DWORD PTR [esp],eax                        ",{}]],"1":[["0xb7e48cc8 in __libc_start_main () from /lib/libc.so.6                                    ",{}]],"2":[["=> 0xb7e48cc8 <__libc_start_main+248>:  call   0xb7e60930 <exit>                          ",{}]],"3":[["[Inferior 1 (process 2535) exited normally]                                               ",{}]],"4":[["No registers.                                                                             ",{}]],"5":[["(gdb) # good! we have the whole execution. Before \"wrong password!\" we see a jump         ",{}]],"6":[["(gdb) # jne jumps if the previous test is different from 0                                ",{}]],"7":[["(gdb) # test eax,eax is non 0 if eax != 0 and this is the result of previous              ",{}]],"8":[["(gdb) # function call to strcmp!                                                          ",{}]],"9":[["(gdb) break 0x80485ab                                                                     ",{}]],"10":[["Function \"0x80485ab\" not defined.                                                         ",{}]],"11":[["Make breakpoint pending on future shared library load? (y or [n]) n                       ",{}]],"12":[["(gdb) break *0x80485ab                                                                    ",{}]],"13":[["Breakpoint 2 at 0x80485ab                                                                 ",{}]],"14":[["(gdb) # 0x80485ab <main+68>:call   0x8048380 <strcmp@plt>                                 ",{}]],"15":[["(gdb) # we have a breakpoint before calling strcmp!                                       ",{}]],"16":[["(gdb) r 1234                                                                              ",{}]],"17":[["Starting program: /home/r1x/gdb/password 1234                                             ",{}]],"18":[["warning: Could not load shared library symbols for linux-gate.so.1.                       ",{}]],"19":[["Do you need \"set solib-search-path\" or \"set sysroot\"?                                     ",{}]],"20":[["                                                                                          ",{}]],"21":[["Breakpoint 1, 0x0804856a in main ()                                                       ",{}]],"22":[["(gdb) c                                                                                   ",{}]],"23":[["Continuing.                                                                               ",{}]],"24":[["                                                                                          ",{}]],"25":[["Breakpoint 2, 0x080485ab in main ()                                                       ",{}]],"26":[["(gdb) # OK here we are. strcmp compares two strings and if they are different             ",{}]],"27":[["                                                                                          ",{}]]},"cursor":{"x":0}}],[5.5e-05,{"lines":{"27":[["(gdb)                                                                                     ",{}]]},"cursor":{"x":6}}],[0.477993,{"lines":{"27":[["(gdb) #                                                                                   ",{}]]},"cursor":{"x":7}}],[0.120356,{"cursor":{"x":8}}],[0.434239,{"lines":{"27":[["(gdb) # t                                                                                 ",{}]]},"cursor":{"x":9}}],[0.09318799999999999,{"lines":{"27":[["(gdb) # th                                                                                ",{}]]},"cursor":{"x":10}}],[0.047575,{"lines":{"27":[["(gdb) # the                                                                               ",{}]]},"cursor":{"x":11}}],[0.071869,{"cursor":{"x":12}}],[0.136515,{"lines":{"27":[["(gdb) # the p                                                                             ",{}]]},"cursor":{"x":13}}],[0.080001,{"lines":{"27":[["(gdb) # the pr                                                                            ",{}]]},"cursor":{"x":14}}],[0.112667,{"lines":{"27":[["(gdb) # the pro                                                                           ",{}]]},"cursor":{"x":15}}],[0.054721,{"lines":{"27":[["(gdb) # the prog                                                                          ",{}]]},"cursor":{"x":16}}],[0.175882,{"lines":{"27":[["(gdb) # the progr                                                                         ",{}]]},"cursor":{"x":17}}],[0.080149,{"lines":{"27":[["(gdb) # the progra                                                                        ",{}]]},"cursor":{"x":18}}],[0.193092,{"lines":{"27":[["(gdb) # the program                                                                       ",{}]]},"cursor":{"x":19}}],[0.079997,{"lines":{"27":[["(gdb) # the programs                                                                      ",{}]]},"cursor":{"x":20}}],[0.263803,{"cursor":{"x":21}}],[0.738547,{"cursor":{"x":20}}],[0.141209,{"lines":{"27":[["(gdb) # the program                                                                       ",{}]]},"cursor":{"x":19}}],[0.063042,{"cursor":{"x":20}}],[0.153488,{"lines":{"27":[["(gdb) # the program s                                                                     ",{}]]},"cursor":{"x":21}}],[0.103981,{"lines":{"27":[["(gdb) # the program sa                                                                    ",{}]]},"cursor":{"x":22}}],[0.230604,{"lines":{"27":[["(gdb) # the program say                                                                   ",{}]]},"cursor":{"x":23}}],[0.091625,{"lines":{"27":[["(gdb) # the program says                                                                  ",{}]]},"cursor":{"x":24}}],[0.100899,{"cursor":{"x":25}}],[0.112943,{"lines":{"27":[["(gdb) # the program says t                                                                ",{}]]},"cursor":{"x":26}}],[0.07137,{"lines":{"27":[["(gdb) # the program says th                                                               ",{}]]},"cursor":{"x":27}}],[0.056566,{"lines":{"27":[["(gdb) # the program says the                                                              ",{}]]},"cursor":{"x":28}}],[0.10416,{"cursor":{"x":29}}],[0.135762,{"lines":{"27":[["(gdb) # the program says the p                                                            ",{}]]},"cursor":{"x":30}}],[0.086955,{"lines":{"27":[["(gdb) # the program says the pw                                                           ",{}]]},"cursor":{"x":31}}],[0.215921,{"lines":{"27":[["(gdb) # the program says the pwd                                                          ",{}]]},"cursor":{"x":32}}],[1.033346,{"cursor":{"x":33}}],[0.012902,{"lines":{"27":[["(gdb) # the program says the pwd is wr                                                    ",{}]]},"cursor":{"x":38}}],[0.0497,{"lines":{"27":[["(gdb) # the program says the pwd is wro                                                   ",{}]]},"cursor":{"x":39}}],[0.168599,{"lines":{"27":[["(gdb) # the program says the pwd is wron                                                  ",{}]]},"cursor":{"x":40}}],[0.088716,{"lines":{"27":[["(gdb) # the program says the pwd is wrong                                                 ",{}]]},"cursor":{"x":41}}],[0.946149,{"lines":{"0":[["0xb7e48cc8 in __libc_start_main () from /lib/libc.so.6                                    ",{}]],"1":[["=> 0xb7e48cc8 <__libc_start_main+248>:  call   0xb7e60930 <exit>                          ",{}]],"2":[["[Inferior 1 (process 2535) exited normally]                                               ",{}]],"3":[["No registers.                                                                             ",{}]],"4":[["(gdb) # good! we have the whole execution. Before \"wrong password!\" we see a jump         ",{}]],"5":[["(gdb) # jne jumps if the previous test is different from 0                                ",{}]],"6":[["(gdb) # test eax,eax is non 0 if eax != 0 and this is the result of previous              ",{}]],"7":[["(gdb) # function call to strcmp!                                                          ",{}]],"8":[["(gdb) break 0x80485ab                                                                     ",{}]],"9":[["Function \"0x80485ab\" not defined.                                                         ",{}]],"10":[["Make breakpoint pending on future shared library load? (y or [n]) n                       ",{}]],"11":[["(gdb) break *0x80485ab                                                                    ",{}]],"12":[["Breakpoint 2 at 0x80485ab                                                                 ",{}]],"13":[["(gdb) # 0x80485ab <main+68>:call   0x8048380 <strcmp@plt>                                 ",{}]],"14":[["(gdb) # we have a breakpoint before calling strcmp!                                       ",{}]],"15":[["(gdb) r 1234                                                                              ",{}]],"16":[["Starting program: /home/r1x/gdb/password 1234                                             ",{}]],"17":[["warning: Could not load shared library symbols for linux-gate.so.1.                       ",{}]],"18":[["Do you need \"set solib-search-path\" or \"set sysroot\"?                                     ",{}]],"19":[["                                                                                          ",{}]],"20":[["Breakpoint 1, 0x0804856a in main ()                                                       ",{}]],"21":[["(gdb) c                                                                                   ",{}]],"22":[["Continuing.                                                                               ",{}]],"23":[["                                                                                          ",{}]],"24":[["Breakpoint 2, 0x080485ab in main ()                                                       ",{}]],"25":[["(gdb) # OK here we are. strcmp compares two strings and if they are different             ",{}]],"26":[["(gdb) # the program says the pwd is wrong                                                 ",{}]],"27":[["                                                                                          ",{}]]},"cursor":{"x":0}}],[0.000104,{"lines":{"27":[["(gdb)                                                                                     ",{}]]},"cursor":{"x":6}}],[0.511251,{"lines":{"27":[["(gdb) #                                                                                   ",{}]]},"cursor":{"x":7}}],[0.093913,{"cursor":{"x":8}}],[0.882161,{"lines":{"27":[["(gdb) # g                                                                                 ",{}]]},"cursor":{"x":9}}],[0.109483,{"lines":{"27":[["(gdb) # gu                                                                                ",{}]]},"cursor":{"x":10}}],[0.050283,{"lines":{"27":[["(gdb) # gue                                                                               ",{}]]},"cursor":{"x":11}}],[0.173401,{"lines":{"27":[["(gdb) # gues                                                                              ",{}]]},"cursor":{"x":12}}],[0.13622,{"lines":{"27":[["(gdb) # guess                                                                             ",{}]]},"cursor":{"x":13}}],[0.032651,{"cursor":{"x":14}}],[0.143412,{"lines":{"27":[["(gdb) # guess w                                                                           ",{}]]},"cursor":{"x":15}}],[0.047752,{"lines":{"27":[["(gdb) # guess wh                                                                          ",{}]]},"cursor":{"x":16}}],[0.103874,{"lines":{"27":[["(gdb) # guess wha                                                                         ",{}]]},"cursor":{"x":17}}],[0.152025,{"lines":{"27":[["(gdb) # guess what                                                                        ",{}]]},"cursor":{"x":18}}],[0.136573,{"lines":{"27":[["(gdb) # guess what?                                                                       ",{}]]},"cursor":{"x":19}}],[0.474425,{"cursor":{"x":20}}],[0.639509,{"lines":{"27":[["(gdb) # guess what? t                                                                     ",{}]]},"cursor":{"x":21}}],[0.09422899999999999,{"lines":{"27":[["(gdb) # guess what? th                                                                    ",{}]]},"cursor":{"x":22}}],[0.055611,{"lines":{"27":[["(gdb) # guess what? the                                                                   ",{}]]},"cursor":{"x":23}}],[0.105006,{"cursor":{"x":24}}],[0.086269,{"lines":{"27":[["(gdb) # guess what? the t                                                                 ",{}]]},"cursor":{"x":25}}],[0.152857,{"lines":{"27":[["(gdb) # guess what? the tw                                                                ",{}]]},"cursor":{"x":26}}],[0.23177,{"lines":{"27":[["(gdb) # guess what? the two                                                               ",{}]]},"cursor":{"x":27}}],[0.057838,{"cursor":{"x":28}}],[0.213859,{"lines":{"27":[["(gdb) # guess what? the two s                                                             ",{}]]},"cursor":{"x":29}}],[0.184105,{"lines":{"27":[["(gdb) # guess what? the two st                                                            ",{}]]},"cursor":{"x":30}}],[0.151944,{"lines":{"27":[["(gdb) # guess what? the two str                                                           ",{}]]},"cursor":{"x":31}}],[0.079234,{"lines":{"27":[["(gdb) # guess what? the two stri                                                          ",{}]]},"cursor":{"x":32}}],[0.06469999999999999,{"lines":{"27":[["(gdb) # guess what? the two strin                                                         ",{}]]},"cursor":{"x":33}}],[0.112027,{"lines":{"27":[["(gdb) # guess what? the two string                                                        ",{}]]},"cursor":{"x":34}}],[0.08762300000000001,{"lines":{"27":[["(gdb) # guess what? the two strings                                                       ",{}]]},"cursor":{"x":35}}],[0.144492,{"cursor":{"x":36}}],[0.10471,{"lines":{"27":[["(gdb) # guess what? the two strings a                                                     ",{}]]},"cursor":{"x":37}}],[0.159504,{"lines":{"27":[["(gdb) # guess what? the two strings ar                                                    ",{}]]},"cursor":{"x":38}}],[0.047988,{"lines":{"27":[["(gdb) # guess what? the two strings are                                                   ",{}]]},"cursor":{"x":39}}],[0.094786,{"cursor":{"x":40}}],[1.635661,{"lines":{"27":[["(gdb) # guess what? the two strings are t                                                 ",{}]]},"cursor":{"x":41}}],[0.085561,{"lines":{"27":[["(gdb) # guess what? the two strings are th                                                ",{}]]},"cursor":{"x":42}}],[0.056168,{"lines":{"27":[["(gdb) # guess what? the two strings are the                                               ",{}]]},"cursor":{"x":43}}],[0.086982,{"cursor":{"x":44}}],[0.48295,{"lines":{"27":[["(gdb) # guess what? the two strings are the g                                             ",{}]]},"cursor":{"x":45}}],[0.077066,{"lines":{"27":[["(gdb) # guess what? the two strings are the go                                            ",{}]]},"cursor":{"x":46}}],[0.121039,{"lines":{"27":[["(gdb) # guess what? the two strings are the goo                                           ",{}]]},"cursor":{"x":47}}],[0.080233,{"lines":{"27":[["(gdb) # guess what? the two strings are the good                                          ",{}]]},"cursor":{"x":48}}],[0.07925500000000001,{"cursor":{"x":49}}],[0.119513,{"lines":{"27":[["(gdb) # guess what? the two strings are the good p                                        ",{}]]},"cursor":{"x":50}}],[0.079997,{"lines":{"27":[["(gdb) # guess what? the two strings are the good pa                                       ",{}]]},"cursor":{"x":51}}],[0.119882,{"lines":{"27":[["(gdb) # guess what? the two strings are the good pas                                      ",{}]]},"cursor":{"x":52}}],[0.522626,{"lines":{"27":[["(gdb) # guess what? the two strings are the good pass                                     ",{}]]},"cursor":{"x":53}}],[0.174374,{"lines":{"27":[["(gdb) # guess what? the two strings are the good passw                                    ",{}]]},"cursor":{"x":54}}],[0.262901,{"lines":{"27":[["(gdb) # guess what? the two strings are the good passwo                                   ",{}]]},"cursor":{"x":55}}],[0.098727,{"lines":{"27":[["(gdb) # guess what? the two strings are the good passwor                                  ",{}]]},"cursor":{"x":56}}],[0.165763,{"lines":{"27":[["(gdb) # guess what? the two strings are the good password                                 ",{}]]},"cursor":{"x":57}}],[0.07171,{"cursor":{"x":58}}],[0.336531,{"lines":{"27":[["(gdb) # guess what? the two strings are the good password a                               ",{}]]},"cursor":{"x":59}}],[0.096679,{"lines":{"27":[["(gdb) # guess what? the two strings are the good password an                              ",{}]]},"cursor":{"x":60}}],[0.062531,{"lines":{"27":[["(gdb) # guess what? the two strings are the good password and                             ",{}]]},"cursor":{"x":61}}],[0.096637,{"cursor":{"x":62}}],[0.119493,{"lines":{"27":[["(gdb) # guess what? the two strings are the good password and t                           ",{}]]},"cursor":{"x":63}}],[0.064389,{"lines":{"27":[["(gdb) # guess what? the two strings are the good password and th                          ",{}]]},"cursor":{"x":64}}],[0.064079,{"lines":{"27":[["(gdb) # guess what? the two strings are the good password and the                         ",{}]]},"cursor":{"x":65}}],[0.095737,{"cursor":{"x":66}}],[0.208901,{"lines":{"27":[["(gdb) # guess what? the two strings are the good password and the o                       ",{}]]},"cursor":{"x":67}}],[0.111799,{"lines":{"27":[["(gdb) # guess what? the two strings are the good password and the on                      ",{}]]},"cursor":{"x":68}}],[0.09573,{"lines":{"27":[["(gdb) # guess what? the two strings are the good password and the one                     ",{}]]},"cursor":{"x":69}}],[0.111012,{"cursor":{"x":70}}],[0.096591,{"lines":{"27":[["(gdb) # guess what? the two strings are the good password and the one w                   ",{}]]},"cursor":{"x":71}}],[0.167754,{"lines":{"27":[["(gdb) # guess what? the two strings are the good password and the one we                  ",{}]]},"cursor":{"x":72}}],[0.106609,{"cursor":{"x":73}}],[0.479688,{"lines":{"27":[["(gdb) # guess what? the two strings are the good password and the one we i                ",{}]]},"cursor":{"x":74}}],[0.086173,{"lines":{"27":[["(gdb) # guess what? the two strings are the good password and the one we in               ",{}]]},"cursor":{"x":75}}],[0.119739,{"lines":{"27":[["(gdb) # guess what? the two strings are the good password and the one we ins              ",{}]]},"cursor":{"x":76}}],[0.191715,{"lines":{"27":[["(gdb) # guess what? the two strings are the good password and the one we inse             ",{}]]},"cursor":{"x":77}}],[0.080849,{"lines":{"27":[["(gdb) # guess what? the two strings are the good password and the one we inser            ",{}]]},"cursor":{"x":78}}],[0.216084,{"lines":{"27":[["(gdb) # guess what? the two strings are the good password and the one we insert           ",{}]]},"cursor":{"x":79}}],[0.031814,{"lines":{"27":[["(gdb) # guess what? the two strings are the good password and the one we inserte          ",{}]]},"cursor":{"x":80}}],[0.152477,{"lines":{"27":[["(gdb) # guess what? the two strings are the good password and the one we inserted         ",{}]]},"cursor":{"x":81}}],[0.314063,{"lines":{"27":[["(gdb) # guess what? the two strings are the good password and the one we inserted,        ",{}]]},"cursor":{"x":82}}],[0.077116,{"cursor":{"x":83}}],[0.14419,{"lines":{"27":[["(gdb) # guess what? the two strings are the good password and the one we inserted, p      ",{}]]},"cursor":{"x":84}}],[0.096192,{"lines":{"27":[["(gdb) # guess what? the two strings are the good password and the one we inserted, pr     ",{}]]},"cursor":{"x":85}}],[0.095537,{"lines":{"27":[["(gdb) # guess what? the two strings are the good password and the one we inserted, pro    ",{}]]},"cursor":{"x":86}}],[0.119595,{"lines":{"27":[["(gdb) # guess what? the two strings are the good password and the one we inserted, prob   ",{}]]},"cursor":{"x":87}}],[0.208449,{"lines":{"27":[["(gdb) # guess what? the two strings are the good password and the one we inserted, proba  ",{}]]},"cursor":{"x":88}}],[0.1594,{"lines":{"27":[["(gdb) # guess what? the two strings are the good password and the one we inserted, probab ",{}]]},"cursor":{"x":89}}],[0.072307,{"lines":{"0":[["=> 0xb7e48cc8 <__libc_start_main+248>:  call   0xb7e60930 <exit>                          ",{}]],"1":[["[Inferior 1 (process 2535) exited normally]                                               ",{}]],"2":[["No registers.                                                                             ",{}]],"3":[["(gdb) # good! we have the whole execution. Before \"wrong password!\" we see a jump         ",{}]],"4":[["(gdb) # jne jumps if the previous test is different from 0                                ",{}]],"5":[["(gdb) # test eax,eax is non 0 if eax != 0 and this is the result of previous              ",{}]],"6":[["(gdb) # function call to strcmp!                                                          ",{}]],"7":[["(gdb) break 0x80485ab                                                                     ",{}]],"8":[["Function \"0x80485ab\" not defined.                                                         ",{}]],"9":[["Make breakpoint pending on future shared library load? (y or [n]) n                       ",{}]],"10":[["(gdb) break *0x80485ab                                                                    ",{}]],"11":[["Breakpoint 2 at 0x80485ab                                                                 ",{}]],"12":[["(gdb) # 0x80485ab <main+68>:call   0x8048380 <strcmp@plt>                                 ",{}]],"13":[["(gdb) # we have a breakpoint before calling strcmp!                                       ",{}]],"14":[["(gdb) r 1234                                                                              ",{}]],"15":[["Starting program: /home/r1x/gdb/password 1234                                             ",{}]],"16":[["warning: Could not load shared library symbols for linux-gate.so.1.                       ",{}]],"17":[["Do you need \"set solib-search-path\" or \"set sysroot\"?                                     ",{}]],"18":[["                                                                                          ",{}]],"19":[["Breakpoint 1, 0x0804856a in main ()                                                       ",{}]],"20":[["(gdb) c                                                                                   ",{}]],"21":[["Continuing.                                                                               ",{}]],"22":[["                                                                                          ",{}]],"23":[["Breakpoint 2, 0x080485ab in main ()                                                       ",{}]],"24":[["(gdb) # OK here we are. strcmp compares two strings and if they are different             ",{}]],"25":[["(gdb) # the program says the pwd is wrong                                                 ",{}]],"26":[["(gdb) # guess what? the two strings are the good password and the one we inserted, probabl",{}]],"27":[["                                                                                          ",{}]]},"cursor":{"x":0}}],[0.184155,{"lines":{"27":[["y                                                                                         ",{}]]},"cursor":{"x":1}}],[1.08123,{"lines":{"0":[["[Inferior 1 (process 2535) exited normally]                                               ",{}]],"1":[["No registers.                                                                             ",{}]],"2":[["(gdb) # good! we have the whole execution. Before \"wrong password!\" we see a jump         ",{}]],"3":[["(gdb) # jne jumps if the previous test is different from 0                                ",{}]],"4":[["(gdb) # test eax,eax is non 0 if eax != 0 and this is the result of previous              ",{}]],"5":[["(gdb) # function call to strcmp!                                                          ",{}]],"6":[["(gdb) break 0x80485ab                                                                     ",{}]],"7":[["Function \"0x80485ab\" not defined.                                                         ",{}]],"8":[["Make breakpoint pending on future shared library load? (y or [n]) n                       ",{}]],"9":[["(gdb) break *0x80485ab                                                                    ",{}]],"10":[["Breakpoint 2 at 0x80485ab                                                                 ",{}]],"11":[["(gdb) # 0x80485ab <main+68>:call   0x8048380 <strcmp@plt>                                 ",{}]],"12":[["(gdb) # we have a breakpoint before calling strcmp!                                       ",{}]],"13":[["(gdb) r 1234                                                                              ",{}]],"14":[["Starting program: /home/r1x/gdb/password 1234                                             ",{}]],"15":[["warning: Could not load shared library symbols for linux-gate.so.1.                       ",{}]],"16":[["Do you need \"set solib-search-path\" or \"set sysroot\"?                                     ",{}]],"17":[["                                                                                          ",{}]],"18":[["Breakpoint 1, 0x0804856a in main ()                                                       ",{}]],"19":[["(gdb) c                                                                                   ",{}]],"20":[["Continuing.                                                                               ",{}]],"21":[["                                                                                          ",{}]],"22":[["Breakpoint 2, 0x080485ab in main ()                                                       ",{}]],"23":[["(gdb) # OK here we are. strcmp compares two strings and if they are different             ",{}]],"24":[["(gdb) # the program says the pwd is wrong                                                 ",{}]],"25":[["(gdb) # guess what? the two strings are the good password and the one we inserted, probabl",{}]],"26":[["y                                                                                         ",{}]],"27":[["                                                                                          ",{}]]},"cursor":{"x":0}}],[0.000121,{"lines":{"27":[["(gdb)                                                                                     ",{}]]},"cursor":{"x":6}}],[0.953166,{"lines":{"27":[["(gdb) #                                                                                   ",{}]]},"cursor":{"x":7}}],[0.768134,{"cursor":{"x":8}}],[0.237122,{"lines":{"27":[["(gdb) # l                                                                                 ",{}]]},"cursor":{"x":9}}],[0.031597,{"lines":{"27":[["(gdb) # le                                                                                ",{}]]},"cursor":{"x":10}}],[0.619395,{"lines":{"27":[["(gdb) # let                                                                               ",{}]]},"cursor":{"x":11}}],[0.116993,{"lines":{"0":[["No registers.                                                                             ",{}]],"1":[["(gdb) # good! we have the whole execution. Before \"wrong password!\" we see a jump         ",{}]],"2":[["(gdb) # jne jumps if the previous test is different from 0                                ",{}]],"3":[["(gdb) # test eax,eax is non 0 if eax != 0 and this is the result of previous              ",{}]],"4":[["(gdb) # function call to strcmp!                                                          ",{}]],"5":[["(gdb) break 0x80485ab                                                                     ",{}]],"6":[["Function \"0x80485ab\" not defined.                                                         ",{}]],"7":[["Make breakpoint pending on future shared library load? (y or [n]) n                       ",{}]],"8":[["(gdb) break *0x80485ab                                                                    ",{}]],"9":[["Breakpoint 2 at 0x80485ab                                                                 ",{}]],"10":[["(gdb) # 0x80485ab <main+68>:call   0x8048380 <strcmp@plt>                                 ",{}]],"11":[["(gdb) # we have a breakpoint before calling strcmp!                                       ",{}]],"12":[["(gdb) r 1234                                                                              ",{}]],"13":[["Starting program: /home/r1x/gdb/password 1234                                             ",{}]],"14":[["warning: Could not load shared library symbols for linux-gate.so.1.                       ",{}]],"15":[["Do you need \"set solib-search-path\" or \"set sysroot\"?                                     ",{}]],"16":[["                                                                                          ",{}]],"17":[["Breakpoint 1, 0x0804856a in main ()                                                       ",{}]],"18":[["(gdb) c                                                                                   ",{}]],"19":[["Continuing.                                                                               ",{}]],"20":[["                                                                                          ",{}]],"21":[["Breakpoint 2, 0x080485ab in main ()                                                       ",{}]],"22":[["(gdb) # OK here we are. strcmp compares two strings and if they are different             ",{}]],"23":[["(gdb) # the program says the pwd is wrong                                                 ",{}]],"24":[["(gdb) # guess what? the two strings are the good password and the one we inserted, probabl",{}]],"25":[["y                                                                                         ",{}]],"26":[["(gdb) # let                                                                               ",{}]],"27":[["                                                                                          ",{}]]},"cursor":{"x":0}}],[0.002851,{"lines":{"27":[["(gdb) '                                                                                   ",{}]]},"cursor":{"x":7}}],[0.125291,{"lines":{"27":[["(gdb) 's                                                                                  ",{}]]},"cursor":{"x":8}}],[0.591284,{"lines":{"27":[["(gdb) '                                                                                   ",{}]]},"cursor":{"x":7}}],[0.288408,{"lines":{"27":[["(gdb)                                                                                     ",{}]]},"cursor":{"x":6}}],[0.731031,{"lines":{"27":[["(gdb) #                                                                                   ",{}]]},"cursor":{"x":7}}],[0.479657,{"cursor":{"x":8}}],[0.150161,{"lines":{"27":[["(gdb) # l                                                                                 ",{}]]},"cursor":{"x":9}}],[0.094846,{"lines":{"27":[["(gdb) # le                                                                                ",{}]]},"cursor":{"x":10}}],[0.112613,{"lines":{"27":[["(gdb) # let                                                                               ",{}]]},"cursor":{"x":11}}],[0.1705,{"lines":{"27":[["(gdb) # let'                                                                              ",{}]]},"cursor":{"x":12}}],[0.101004,{"lines":{"27":[["(gdb) # let's                                                                             ",{}]]},"cursor":{"x":13}}],[0.127883,{"cursor":{"x":14}}],[0.136498,{"lines":{"27":[["(gdb) # let's c                                                                           ",{}]]},"cursor":{"x":15}}],[0.120214,{"lines":{"27":[["(gdb) # let's ch                                                                          ",{}]]},"cursor":{"x":16}}],[0.079623,{"lines":{"27":[["(gdb) # let's che                                                                         ",{}]]},"cursor":{"x":17}}],[0.09621300000000001,{"lines":{"27":[["(gdb) # let's chec                                                                        ",{}]]},"cursor":{"x":18}}],[0.098581,{"lines":{"27":[["(gdb) # let's checkl                                                                      ",{}]]},"cursor":{"x":20}}],[0.632617,{"lines":{"27":[["(gdb) # let's check                                                                       ",{}]]},"cursor":{"x":19}}],[0.382974,{"lines":{"0":[["(gdb) # good! we have the whole execution. Before \"wrong password!\" we see a jump         ",{}]],"1":[["(gdb) # jne jumps if the previous test is different from 0                                ",{}]],"2":[["(gdb) # test eax,eax is non 0 if eax != 0 and this is the result of previous              ",{}]],"3":[["(gdb) # function call to strcmp!                                                          ",{}]],"4":[["(gdb) break 0x80485ab                                                                     ",{}]],"5":[["Function \"0x80485ab\" not defined.                                                         ",{}]],"6":[["Make breakpoint pending on future shared library load? (y or [n]) n                       ",{}]],"7":[["(gdb) break *0x80485ab                                                                    ",{}]],"8":[["Breakpoint 2 at 0x80485ab                                                                 ",{}]],"9":[["(gdb) # 0x80485ab <main+68>:call   0x8048380 <strcmp@plt>                                 ",{}]],"10":[["(gdb) # we have a breakpoint before calling strcmp!                                       ",{}]],"11":[["(gdb) r 1234                                                                              ",{}]],"12":[["Starting program: /home/r1x/gdb/password 1234                                             ",{}]],"13":[["warning: Could not load shared library symbols for linux-gate.so.1.                       ",{}]],"14":[["Do you need \"set solib-search-path\" or \"set sysroot\"?                                     ",{}]],"15":[["                                                                                          ",{}]],"16":[["Breakpoint 1, 0x0804856a in main ()                                                       ",{}]],"17":[["(gdb) c                                                                                   ",{}]],"18":[["Continuing.                                                                               ",{}]],"19":[["                                                                                          ",{}]],"20":[["Breakpoint 2, 0x080485ab in main ()                                                       ",{}]],"21":[["(gdb) # OK here we are. strcmp compares two strings and if they are different             ",{}]],"22":[["(gdb) # the program says the pwd is wrong                                                 ",{}]],"23":[["(gdb) # guess what? the two strings are the good password and the one we inserted, probabl",{}]],"24":[["y                                                                                         ",{}]],"25":[["(gdb) # let                                                                               ",{}]],"26":[["(gdb) # let's check                                                                       ",{}]],"27":[["                                                                                          ",{}]]},"cursor":{"x":0}}],[0.0001,{"lines":{"27":[["(gdb)                                                                                     ",{}]]},"cursor":{"x":6}}],[9.593778,{"lines":{"27":[["(gdb) 0x8048                                                                              ",{}]]},"cursor":{"x":12}}],[0.001401,{"lines":{"27":[["(gdb) 0x80485a8 <main+65>:mov    DWORD PTR [esp],eax                                      ",{}]]},"cursor":{"x":52}}],[1.429041,{"cursor":{"x":6}}],[0.6046240000000001,{"lines":{"27":[["(gdb) #0x80485a8 <main+65>:mov    DWORD PTR [esp],eax                                     ",{}]]},"cursor":{"x":7}}],[0.095569,{"lines":{"27":[["(gdb) # 0x80485a8 <main+65>:mov    DWORD PTR [esp],eax                                    ",{}]]},"cursor":{"x":8}}],[0.41891,{"lines":{"0":[["(gdb) # jne jumps if the previous test is different from 0                                ",{}]],"1":[["(gdb) # test eax,eax is non 0 if eax != 0 and this is the result of previous              ",{}]],"2":[["(gdb) # function call to strcmp!                                                          ",{}]],"3":[["(gdb) break 0x80485ab                                                                     ",{}]],"4":[["Function \"0x80485ab\" not defined.                                                         ",{}]],"5":[["Make breakpoint pending on future shared library load? (y or [n]) n                       ",{}]],"6":[["(gdb) break *0x80485ab                                                                    ",{}]],"7":[["Breakpoint 2 at 0x80485ab                                                                 ",{}]],"8":[["(gdb) # 0x80485ab <main+68>:call   0x8048380 <strcmp@plt>                                 ",{}]],"9":[["(gdb) # we have a breakpoint before calling strcmp!                                       ",{}]],"10":[["(gdb) r 1234                                                                              ",{}]],"11":[["Starting program: /home/r1x/gdb/password 1234                                             ",{}]],"12":[["warning: Could not load shared library symbols for linux-gate.so.1.                       ",{}]],"13":[["Do you need \"set solib-search-path\" or \"set sysroot\"?                                     ",{}]],"14":[["                                                                                          ",{}]],"15":[["Breakpoint 1, 0x0804856a in main ()                                                       ",{}]],"16":[["(gdb) c                                                                                   ",{}]],"17":[["Continuing.                                                                               ",{}]],"18":[["                                                                                          ",{}]],"19":[["Breakpoint 2, 0x080485ab in main ()                                                       ",{}]],"20":[["(gdb) # OK here we are. strcmp compares two strings and if they are different             ",{}]],"21":[["(gdb) # the program says the pwd is wrong                                                 ",{}]],"22":[["(gdb) # guess what? the two strings are the good password and the one we inserted, probabl",{}]],"23":[["y                                                                                         ",{}]],"24":[["(gdb) # let                                                                               ",{}]],"25":[["(gdb) # let's check                                                                       ",{}]],"26":[["(gdb) # 0x80485a8 <main+65>:mov    DWORD PTR [esp],eax                                    ",{}]],"27":[["                                                                                          ",{}]]},"cursor":{"x":0}}],[9.899999999999999e-05,{"lines":{"27":[["(gdb)                                                                                     ",{}]]},"cursor":{"x":6}}],[2.013085,{"lines":{"27":[["(gdb) t                                                                                   ",{}]]},"cursor":{"x":7}}],[0.06454799999999999,{"lines":{"27":[["(gdb) th                                                                                  ",{}]]},"cursor":{"x":8}}],[0.031481,{"lines":{"27":[["(gdb) thi                                                                                 ",{}]]},"cursor":{"x":9}}],[0.120383,{"lines":{"27":[["(gdb) this                                                                                ",{}]]},"cursor":{"x":10}}],[0.104129,{"cursor":{"x":11}}],[0.112356,{"lines":{"27":[["(gdb) this i                                                                              ",{}]]},"cursor":{"x":12}}],[0.111152,{"lines":{"27":[["(gdb) this is                                                                             ",{}]]},"cursor":{"x":13}}],[0.11238,{"cursor":{"x":14}}],[0.09563199999999999,{"lines":{"27":[["(gdb) this is d                                                                           ",{}]]},"cursor":{"x":15}}],[0.135847,{"lines":{"27":[["(gdb) this is do                                                                          ",{}]]},"cursor":{"x":16}}],[0.144224,{"lines":{"27":[["(gdb) this is don                                                                         ",{}]]},"cursor":{"x":17}}],[0.063925,{"lines":{"27":[["(gdb) this is done                                                                        ",{}]]},"cursor":{"x":18}}],[0.111956,{"cursor":{"x":19}}],[1.066526,{"lines":{"27":[["(gdb) this is done b                                                                      ",{}]]},"cursor":{"x":20}}],[0.133285,{"lines":{"27":[["(gdb) this is done bo                                                                     ",{}]]},"cursor":{"x":21}}],[1.0033,{"lines":{"27":[["(gdb) this is done b                                                                      ",{}]]},"cursor":{"x":20}}],[0.100532,{"lines":{"27":[["(gdb) this is done be                                                                     ",{}]]},"cursor":{"x":21}}],[0.151853,{"lines":{"27":[["(gdb) this is done bef                                                                    ",{}]]},"cursor":{"x":22}}],[0.200522,{"lines":{"27":[["(gdb) this is done befo                                                                   ",{}]]},"cursor":{"x":23}}],[0.09588000000000001,{"lines":{"27":[["(gdb) this is done befor                                                                  ",{}]]},"cursor":{"x":24}}],[0.055514,{"lines":{"27":[["(gdb) this is done before                                                                 ",{}]]},"cursor":{"x":25}}],[0.096195,{"cursor":{"x":26}}],[0.256697,{"lines":{"27":[["(gdb) this is done before s                                                               ",{}]]},"cursor":{"x":27}}],[0.160406,{"lines":{"27":[["(gdb) this is done before st                                                              ",{}]]},"cursor":{"x":28}}],[0.16655,{"lines":{"27":[["(gdb) this is done before str                                                             ",{}]]},"cursor":{"x":29}}],[0.200597,{"lines":{"27":[["(gdb) this is done before strc                                                            ",{}]]},"cursor":{"x":30}}],[0.111578,{"lines":{"27":[["(gdb) this is done before strcm                                                           ",{}]]},"cursor":{"x":31}}],[0.129002,{"lines":{"27":[["(gdb) this is done before strcmp                                                          ",{}]]},"cursor":{"x":32}}],[0.545992,{"cursor":{"x":6}}],[0.6008520000000001,{"lines":{"27":[["(gdb) #this is done before strcmp                                                         ",{}]]},"cursor":{"x":7}}],[0.08555,{"lines":{"27":[["(gdb) # this is done before strcmp                                                        ",{}]]},"cursor":{"x":8}}],[0.433332,{"lines":{"0":[["(gdb) # test eax,eax is non 0 if eax != 0 and this is the result of previous              ",{}]],"1":[["(gdb) # function call to strcmp!                                                          ",{}]],"2":[["(gdb) break 0x80485ab                                                                     ",{}]],"3":[["Function \"0x80485ab\" not defined.                                                         ",{}]],"4":[["Make breakpoint pending on future shared library load? (y or [n]) n                       ",{}]],"5":[["(gdb) break *0x80485ab                                                                    ",{}]],"6":[["Breakpoint 2 at 0x80485ab                                                                 ",{}]],"7":[["(gdb) # 0x80485ab <main+68>:call   0x8048380 <strcmp@plt>                                 ",{}]],"8":[["(gdb) # we have a breakpoint before calling strcmp!                                       ",{}]],"9":[["(gdb) r 1234                                                                              ",{}]],"10":[["Starting program: /home/r1x/gdb/password 1234                                             ",{}]],"11":[["warning: Could not load shared library symbols for linux-gate.so.1.                       ",{}]],"12":[["Do you need \"set solib-search-path\" or \"set sysroot\"?                                     ",{}]],"13":[["                                                                                          ",{}]],"14":[["Breakpoint 1, 0x0804856a in main ()                                                       ",{}]],"15":[["(gdb) c                                                                                   ",{}]],"16":[["Continuing.                                                                               ",{}]],"17":[["                                                                                          ",{}]],"18":[["Breakpoint 2, 0x080485ab in main ()                                                       ",{}]],"19":[["(gdb) # OK here we are. strcmp compares two strings and if they are different             ",{}]],"20":[["(gdb) # the program says the pwd is wrong                                                 ",{}]],"21":[["(gdb) # guess what? the two strings are the good password and the one we inserted, probabl",{}]],"22":[["y                                                                                         ",{}]],"23":[["(gdb) # let                                                                               ",{}]],"24":[["(gdb) # let's check                                                                       ",{}]],"25":[["(gdb) # 0x80485a8 <main+65>:mov    DWORD PTR [esp],eax                                    ",{}]],"26":[["(gdb) # this is done before strcmp                                                        ",{}]],"27":[["                                                                                          ",{}]]},"cursor":{"x":0}}],[9.000000000000001e-05,{"lines":{"27":[["(gdb)                                                                                     ",{}]]},"cursor":{"x":6}}],[2.432599,{"lines":{"27":[["(gdb) x                                                                                   ",{}]]},"cursor":{"x":7}}],[0.205659,{"lines":{"27":[["(gdb) x/                                                                                  ",{}]]},"cursor":{"x":8}}],[0.73031,{"lines":{"27":[["(gdb) x/x                                                                                 ",{}]]},"cursor":{"x":9}}],[0.759661,{"lines":{"27":[["(gdb) x/                                                                                  ",{}]]},"cursor":{"x":8}}],[1.088826,{"lines":{"27":[["(gdb) x/w                                                                                 ",{}]]},"cursor":{"x":9}}],[0.221173,{"lines":{"27":[["(gdb) x/wx                                                                                ",{}]]},"cursor":{"x":10}}],[0.150386,{"cursor":{"x":11}}],[2.731244,{"lines":{"27":[["(gdb) x/wx $                                                                              ",{}]]},"cursor":{"x":12}}],[1.079645,{"lines":{"27":[["(gdb) x/wx $e                                                                             ",{}]]},"cursor":{"x":13}}],[0.20634,{"lines":{"27":[["(gdb) x/wx $es                                                                            ",{}]]},"cursor":{"x":14}}],[0.110946,{"lines":{"27":[["(gdb) x/wx $esp                                                                           ",{}]]},"cursor":{"x":15}}],[0.482937,{"lines":{"0":[["(gdb) # function call to strcmp!                                                          ",{}]],"1":[["(gdb) break 0x80485ab                                                                     ",{}]],"2":[["Function \"0x80485ab\" not defined.                                                         ",{}]],"3":[["Make breakpoint pending on future shared library load? (y or [n]) n                       ",{}]],"4":[["(gdb) break *0x80485ab                                                                    ",{}]],"5":[["Breakpoint 2 at 0x80485ab                                                                 ",{}]],"6":[["(gdb) # 0x80485ab <main+68>:call   0x8048380 <strcmp@plt>                                 ",{}]],"7":[["(gdb) # we have a breakpoint before calling strcmp!                                       ",{}]],"8":[["(gdb) r 1234                                                                              ",{}]],"9":[["Starting program: /home/r1x/gdb/password 1234                                             ",{}]],"10":[["warning: Could not load shared library symbols for linux-gate.so.1.                       ",{}]],"11":[["Do you need \"set solib-search-path\" or \"set sysroot\"?                                     ",{}]],"12":[["                                                                                          ",{}]],"13":[["Breakpoint 1, 0x0804856a in main ()                                                       ",{}]],"14":[["(gdb) c                                                                                   ",{}]],"15":[["Continuing.                                                                               ",{}]],"16":[["                                                                                          ",{}]],"17":[["Breakpoint 2, 0x080485ab in main ()                                                       ",{}]],"18":[["(gdb) # OK here we are. strcmp compares two strings and if they are different             ",{}]],"19":[["(gdb) # the program says the pwd is wrong                                                 ",{}]],"20":[["(gdb) # guess what? the two strings are the good password and the one we inserted, probabl",{}]],"21":[["y                                                                                         ",{}]],"22":[["(gdb) # let                                                                               ",{}]],"23":[["(gdb) # let's check                                                                       ",{}]],"24":[["(gdb) # 0x80485a8 <main+65>:mov    DWORD PTR [esp],eax                                    ",{}]],"25":[["(gdb) # this is done before strcmp                                                        ",{}]],"26":[["(gdb) x/wx $esp                                                                           ",{}]],"27":[["                                                                                          ",{}]]},"cursor":{"x":0}}],[0.00039,{"lines":{"0":[["(gdb) break 0x80485ab                                                                     ",{}]],"1":[["Function \"0x80485ab\" not defined.                                                         ",{}]],"2":[["Make breakpoint pending on future shared library load? (y or [n]) n                       ",{}]],"3":[["(gdb) break *0x80485ab                                                                    ",{}]],"4":[["Breakpoint 2 at 0x80485ab                                                                 ",{}]],"5":[["(gdb) # 0x80485ab <main+68>:call   0x8048380 <strcmp@plt>                                 ",{}]],"6":[["(gdb) # we have a breakpoint before calling strcmp!                                       ",{}]],"7":[["(gdb) r 1234                                                                              ",{}]],"8":[["Starting program: /home/r1x/gdb/password 1234                                             ",{}]],"9":[["warning: Could not load shared library symbols for linux-gate.so.1.                       ",{}]],"10":[["Do you need \"set solib-search-path\" or \"set sysroot\"?                                     ",{}]],"11":[["                                                                                          ",{}]],"12":[["Breakpoint 1, 0x0804856a in main ()                                                       ",{}]],"13":[["(gdb) c                                                                                   ",{}]],"14":[["Continuing.                                                                               ",{}]],"15":[["                                                                                          ",{}]],"16":[["Breakpoint 2, 0x080485ab in main ()                                                       ",{}]],"17":[["(gdb) # OK here we are. strcmp compares two strings and if they are different             ",{}]],"18":[["(gdb) # the program says the pwd is wrong                                                 ",{}]],"19":[["(gdb) # guess what? the two strings are the good password and the one we inserted, probabl",{}]],"20":[["y                                                                                         ",{}]],"21":[["(gdb) # let                                                                               ",{}]],"22":[["(gdb) # let's check                                                                       ",{}]],"23":[["(gdb) # 0x80485a8 <main+65>:mov    DWORD PTR [esp],eax                                    ",{}]],"24":[["(gdb) # this is done before strcmp                                                        ",{}]],"25":[["(gdb) x/wx $esp                                                                           ",{}]],"26":[["0xbffff550:     0xbffff75f                                                                ",{}]],"27":[["(gdb)                                                                                     ",{}]]},"cursor":{"x":6}}],[3.427006,{"lines":{"27":[["(gdb) #                                                                                   ",{}]]},"cursor":{"x":7}}],[0.100831,{"cursor":{"x":8}}],[0.272314,{"lines":{"27":[["(gdb) # t                                                                                 ",{}]]},"cursor":{"x":9}}],[0.079303,{"lines":{"27":[["(gdb) # th                                                                                ",{}]]},"cursor":{"x":10}}],[0.032353,{"lines":{"27":[["(gdb) # thi                                                                               ",{}]]},"cursor":{"x":11}}],[0.103047,{"lines":{"27":[["(gdb) # this                                                                              ",{}]]},"cursor":{"x":12}}],[0.08042299999999999,{"cursor":{"x":13}}],[0.127997,{"lines":{"27":[["(gdb) # this s                                                                            ",{}]]},"cursor":{"x":14}}],[0.120374,{"lines":{"27":[["(gdb) # this sh                                                                           ",{}]]},"cursor":{"x":15}}],[0.184339,{"lines":{"27":[["(gdb) # this shy                                                                          ",{}]]},"cursor":{"x":16}}],[0.714161,{"lines":{"27":[["(gdb) # this sh                                                                           ",{}]]},"cursor":{"x":15}}],[0.14934,{"lines":{"27":[["(gdb) # this shu                                                                          ",{}]]},"cursor":{"x":16}}],[0.08028399999999999,{"lines":{"27":[["(gdb) # this shul                                                                         ",{}]]},"cursor":{"x":17}}],[0.136506,{"lines":{"27":[["(gdb) # this shuld                                                                        ",{}]]},"cursor":{"x":18}}],[0.071731,{"cursor":{"x":19}}],[0.118757,{"lines":{"27":[["(gdb) # this shuld b                                                                      ",{}]]},"cursor":{"x":20}}],[0.097027,{"lines":{"27":[["(gdb) # this shuld be                                                                     ",{}]]},"cursor":{"x":21}}],[0.063234,{"cursor":{"x":22}}],[0.127991,{"lines":{"27":[["(gdb) # this shuld be t                                                                   ",{}]]},"cursor":{"x":23}}],[0.056059,{"lines":{"27":[["(gdb) # this shuld be th                                                                  ",{}]]},"cursor":{"x":24}}],[0.08031199999999999,{"lines":{"27":[["(gdb) # this shuld be the                                                                 ",{}]]},"cursor":{"x":25}}],[0.087975,{"cursor":{"x":26}}],[0.112595,{"lines":{"27":[["(gdb) # this shuld be the a                                                               ",{}]]},"cursor":{"x":27}}],[0.087933,{"lines":{"27":[["(gdb) # this shuld be the ad                                                              ",{}]]},"cursor":{"x":28}}],[0.167361,{"lines":{"27":[["(gdb) # this shuld be the add                                                             ",{}]]},"cursor":{"x":29}}],[0.167225,{"lines":{"27":[["(gdb) # this shuld be the addr                                                            ",{}]]},"cursor":{"x":30}}],[0.056285,{"lines":{"27":[["(gdb) # this shuld be the addre                                                           ",{}]]},"cursor":{"x":31}}],[0.232281,{"lines":{"27":[["(gdb) # this shuld be the addres                                                          ",{}]]},"cursor":{"x":32}}],[0.120299,{"lines":{"27":[["(gdb) # this shuld be the address                                                         ",{}]]},"cursor":{"x":33}}],[0.04776,{"cursor":{"x":34}}],[0.080665,{"lines":{"27":[["(gdb) # this shuld be the address o                                                       ",{}]]},"cursor":{"x":35}}],[0.127418,{"lines":{"27":[["(gdb) # this shuld be the address of                                                      ",{}]]},"cursor":{"x":36}}],[0.064237,{"cursor":{"x":37}}],[0.07147100000000001,{"lines":{"27":[["(gdb) # this shuld be the address of a                                                    ",{}]]},"cursor":{"x":38}}],[0.07167,{"cursor":{"x":39}}],[0.09644800000000001,{"lines":{"27":[["(gdb) # this shuld be the address of a s                                                  ",{}]]},"cursor":{"x":40}}],[0.224453,{"lines":{"27":[["(gdb) # this shuld be the address of a st                                                 ",{}]]},"cursor":{"x":41}}],[0.073918,{"lines":{"27":[["(gdb) # this shuld be the address of a str                                                ",{}]]},"cursor":{"x":42}}],[0.062483,{"lines":{"27":[["(gdb) # this shuld be the address of a stri                                               ",{}]]},"cursor":{"x":43}}],[0.047833,{"lines":{"27":[["(gdb) # this shuld be the address of a strin                                              ",{}]]},"cursor":{"x":44}}],[0.071774,{"lines":{"27":[["(gdb) # this shuld be the address of a string                                             ",{}]]},"cursor":{"x":45}}],[1.027789,{"lines":{"0":[["Function \"0x80485ab\" not defined.                                                         ",{}]],"1":[["Make breakpoint pending on future shared library load? (y or [n]) n                       ",{}]],"2":[["(gdb) break *0x80485ab                                                                    ",{}]],"3":[["Breakpoint 2 at 0x80485ab                                                                 ",{}]],"4":[["(gdb) # 0x80485ab <main+68>:call   0x8048380 <strcmp@plt>                                 ",{}]],"5":[["(gdb) # we have a breakpoint before calling strcmp!                                       ",{}]],"6":[["(gdb) r 1234                                                                              ",{}]],"7":[["Starting program: /home/r1x/gdb/password 1234                                             ",{}]],"8":[["warning: Could not load shared library symbols for linux-gate.so.1.                       ",{}]],"9":[["Do you need \"set solib-search-path\" or \"set sysroot\"?                                     ",{}]],"10":[["                                                                                          ",{}]],"11":[["Breakpoint 1, 0x0804856a in main ()                                                       ",{}]],"12":[["(gdb) c                                                                                   ",{}]],"13":[["Continuing.                                                                               ",{}]],"14":[["                                                                                          ",{}]],"15":[["Breakpoint 2, 0x080485ab in main ()                                                       ",{}]],"16":[["(gdb) # OK here we are. strcmp compares two strings and if they are different             ",{}]],"17":[["(gdb) # the program says the pwd is wrong                                                 ",{}]],"18":[["(gdb) # guess what? the two strings are the good password and the one we inserted, probabl",{}]],"19":[["y                                                                                         ",{}]],"20":[["(gdb) # let                                                                               ",{}]],"21":[["(gdb) # let's check                                                                       ",{}]],"22":[["(gdb) # 0x80485a8 <main+65>:mov    DWORD PTR [esp],eax                                    ",{}]],"23":[["(gdb) # this is done before strcmp                                                        ",{}]],"24":[["(gdb) x/wx $esp                                                                           ",{}]],"25":[["0xbffff550:     0xbffff75f                                                                ",{}]],"26":[["(gdb) # this shuld be the address of a string                                             ",{}]],"27":[["                                                                                          ",{}]]},"cursor":{"x":0}}],[6.2e-05,{"lines":{"27":[["(gdb)                                                                                     ",{}]]},"cursor":{"x":6}}],[1.413611,{"lines":{"27":[["(gdb) x                                                                                   ",{}]]},"cursor":{"x":7}}],[0.086011,{"lines":{"27":[["(gdb) x/                                                                                  ",{}]]},"cursor":{"x":8}}],[0.11249,{"lines":{"27":[["(gdb) x/s                                                                                 ",{}]]},"cursor":{"x":9}}],[0.119508,{"cursor":{"x":10}}],[3.395378,{"lines":{"27":[["(gdb) x/s 0xbfff                                                                          ",{}]]},"cursor":{"x":16}}],[0.000328,{"lines":{"27":[["(gdb) x/s 0xbffff75f                                                                      ",{}]]},"cursor":{"x":20}}],[0.541735,{"lines":{"0":[["Make breakpoint pending on future shared library load? (y or [n]) n                       ",{}]],"1":[["(gdb) break *0x80485ab                                                                    ",{}]],"2":[["Breakpoint 2 at 0x80485ab                                                                 ",{}]],"3":[["(gdb) # 0x80485ab <main+68>:call   0x8048380 <strcmp@plt>                                 ",{}]],"4":[["(gdb) # we have a breakpoint before calling strcmp!                                       ",{}]],"5":[["(gdb) r 1234                                                                              ",{}]],"6":[["Starting program: /home/r1x/gdb/password 1234                                             ",{}]],"7":[["warning: Could not load shared library symbols for linux-gate.so.1.                       ",{}]],"8":[["Do you need \"set solib-search-path\" or \"set sysroot\"?                                     ",{}]],"9":[["                                                                                          ",{}]],"10":[["Breakpoint 1, 0x0804856a in main ()                                                       ",{}]],"11":[["(gdb) c                                                                                   ",{}]],"12":[["Continuing.                                                                               ",{}]],"13":[["                                                                                          ",{}]],"14":[["Breakpoint 2, 0x080485ab in main ()                                                       ",{}]],"15":[["(gdb) # OK here we are. strcmp compares two strings and if they are different             ",{}]],"16":[["(gdb) # the program says the pwd is wrong                                                 ",{}]],"17":[["(gdb) # guess what? the two strings are the good password and the one we inserted, probabl",{}]],"18":[["y                                                                                         ",{}]],"19":[["(gdb) # let                                                                               ",{}]],"20":[["(gdb) # let's check                                                                       ",{}]],"21":[["(gdb) # 0x80485a8 <main+65>:mov    DWORD PTR [esp],eax                                    ",{}]],"22":[["(gdb) # this is done before strcmp                                                        ",{}]],"23":[["(gdb) x/wx $esp                                                                           ",{}]],"24":[["0xbffff550:     0xbffff75f                                                                ",{}]],"25":[["(gdb) # this shuld be the address of a string                                             ",{}]],"26":[["(gdb) x/s 0xbffff75f                                                                      ",{}]],"27":[["                                                                                          ",{}]]},"cursor":{"x":0}}],[0.000595,{"lines":{"0":[["(gdb) break *0x80485ab                                                                    ",{}]],"1":[["Breakpoint 2 at 0x80485ab                                                                 ",{}]],"2":[["(gdb) # 0x80485ab <main+68>:call   0x8048380 <strcmp@plt>                                 ",{}]],"3":[["(gdb) # we have a breakpoint before calling strcmp!                                       ",{}]],"4":[["(gdb) r 1234                                                                              ",{}]],"5":[["Starting program: /home/r1x/gdb/password 1234                                             ",{}]],"6":[["warning: Could not load shared library symbols for linux-gate.so.1.                       ",{}]],"7":[["Do you need \"set solib-search-path\" or \"set sysroot\"?                                     ",{}]],"8":[["                                                                                          ",{}]],"9":[["Breakpoint 1, 0x0804856a in main ()                                                       ",{}]],"10":[["(gdb) c                                                                                   ",{}]],"11":[["Continuing.                                                                               ",{}]],"12":[["                                                                                          ",{}]],"13":[["Breakpoint 2, 0x080485ab in main ()                                                       ",{}]],"14":[["(gdb) # OK here we are. strcmp compares two strings and if they are different             ",{}]],"15":[["(gdb) # the program says the pwd is wrong                                                 ",{}]],"16":[["(gdb) # guess what? the two strings are the good password and the one we inserted, probabl",{}]],"17":[["y                                                                                         ",{}]],"18":[["(gdb) # let                                                                               ",{}]],"19":[["(gdb) # let's check                                                                       ",{}]],"20":[["(gdb) # 0x80485a8 <main+65>:mov    DWORD PTR [esp],eax                                    ",{}]],"21":[["(gdb) # this is done before strcmp                                                        ",{}]],"22":[["(gdb) x/wx $esp                                                                           ",{}]],"23":[["0xbffff550:     0xbffff75f                                                                ",{}]],"24":[["(gdb) # this shuld be the address of a string                                             ",{}]],"25":[["(gdb) x/s 0xbffff75f                                                                      ",{}]],"26":[["0xbffff75f:     \"1234\"                                                                    ",{}]],"27":[["(gdb)                                                                                     ",{}]]},"cursor":{"x":6}}],[1.344003,{"lines":{"27":[["(gdb) #                                                                                   ",{}]]},"cursor":{"x":7}}],[0.085539,{"cursor":{"x":8}}],[0.43513,{"lines":{"27":[["(gdb) # A                                                                                 ",{}]]},"cursor":{"x":9}}],[0.197107,{"lines":{"27":[["(gdb) # AH                                                                                ",{}]]},"cursor":{"x":10}}],[0.475102,{"lines":{"27":[["(gdb) # AH!                                                                               ",{}]]},"cursor":{"x":11}}],[0.124777,{"cursor":{"x":12}}],[0.307116,{"lines":{"27":[["(gdb) # AH! t                                                                             ",{}]]},"cursor":{"x":13}}],[0.092973,{"lines":{"27":[["(gdb) # AH! th                                                                            ",{}]]},"cursor":{"x":14}}],[0.024106,{"lines":{"27":[["(gdb) # AH! thi                                                                           ",{}]]},"cursor":{"x":15}}],[0.120391,{"lines":{"27":[["(gdb) # AH! this                                                                          ",{}]]},"cursor":{"x":16}}],[0.06372899999999999,{"cursor":{"x":17}}],[0.087823,{"lines":{"27":[["(gdb) # AH! this i                                                                        ",{}]]},"cursor":{"x":18}}],[0.135842,{"lines":{"27":[["(gdb) # AH! this is                                                                       ",{}]]},"cursor":{"x":19}}],[0.056284,{"cursor":{"x":20}}],[0.159524,{"lines":{"27":[["(gdb) # AH! this is t                                                                     ",{}]]},"cursor":{"x":21}}],[0.08866499999999999,{"lines":{"27":[["(gdb) # AH! this is th                                                                    ",{}]]},"cursor":{"x":22}}],[0.047935,{"lines":{"27":[["(gdb) # AH! this is the                                                                   ",{}]]},"cursor":{"x":23}}],[0.272148,{"cursor":{"x":24}}],[0.183581,{"lines":{"27":[["(gdb) # AH! this is the o                                                                 ",{}]]},"cursor":{"x":25}}],[0.111847,{"lines":{"27":[["(gdb) # AH! this is the on                                                                ",{}]]},"cursor":{"x":26}}],[0.103948,{"lines":{"27":[["(gdb) # AH! this is the one                                                               ",{}]]},"cursor":{"x":27}}],[0.111813,{"cursor":{"x":28}}],[0.151805,{"lines":{"27":[["(gdb) # AH! this is the one w                                                             ",{}]]},"cursor":{"x":29}}],[0.168237,{"lines":{"27":[["(gdb) # AH! this is the one we                                                            ",{}]]},"cursor":{"x":30}}],[0.095585,{"cursor":{"x":31}}],[0.128766,{"lines":{"27":[["(gdb) # AH! this is the one we i                                                          ",{}]]},"cursor":{"x":32}}],[0.071936,{"lines":{"27":[["(gdb) # AH! this is the one we in                                                         ",{}]]},"cursor":{"x":33}}],[0.087895,{"lines":{"27":[["(gdb) # AH! this is the one we ins                                                        ",{}]]},"cursor":{"x":34}}],[0.945948,{"lines":{"27":[["(gdb) # AH! this is the one we inse                                                       ",{}]]},"cursor":{"x":35}}],[0.10237,{"lines":{"27":[["(gdb) # AH! this is the one we inser                                                      ",{}]]},"cursor":{"x":36}}],[0.232472,{"lines":{"27":[["(gdb) # AH! this is the one we insert                                                     ",{}]]},"cursor":{"x":37}}],[0.049062,{"lines":{"27":[["(gdb) # AH! this is the one we inserte                                                    ",{}]]},"cursor":{"x":38}}],[0.158822,{"lines":{"27":[["(gdb) # AH! this is the one we inserted                                                   ",{}]]},"cursor":{"x":39}}],[0.247599,{"lines":{"27":[["(gdb) # AH! this is the one we inserted!                                                  ",{}]]},"cursor":{"x":40}}],[0.930109,{"lines":{"0":[["Breakpoint 2 at 0x80485ab                                                                 ",{}]],"1":[["(gdb) # 0x80485ab <main+68>:call   0x8048380 <strcmp@plt>                                 ",{}]],"2":[["(gdb) # we have a breakpoint before calling strcmp!                                       ",{}]],"3":[["(gdb) r 1234                                                                              ",{}]],"4":[["Starting program: /home/r1x/gdb/password 1234                                             ",{}]],"5":[["warning: Could not load shared library symbols for linux-gate.so.1.                       ",{}]],"6":[["Do you need \"set solib-search-path\" or \"set sysroot\"?                                     ",{}]],"7":[["                                                                                          ",{}]],"8":[["Breakpoint 1, 0x0804856a in main ()                                                       ",{}]],"9":[["(gdb) c                                                                                   ",{}]],"10":[["Continuing.                                                                               ",{}]],"11":[["                                                                                          ",{}]],"12":[["Breakpoint 2, 0x080485ab in main ()                                                       ",{}]],"13":[["(gdb) # OK here we are. strcmp compares two strings and if they are different             ",{}]],"14":[["(gdb) # the program says the pwd is wrong                                                 ",{}]],"15":[["(gdb) # guess what? the two strings are the good password and the one we inserted, probabl",{}]],"16":[["y                                                                                         ",{}]],"17":[["(gdb) # let                                                                               ",{}]],"18":[["(gdb) # let's check                                                                       ",{}]],"19":[["(gdb) # 0x80485a8 <main+65>:mov    DWORD PTR [esp],eax                                    ",{}]],"20":[["(gdb) # this is done before strcmp                                                        ",{}]],"21":[["(gdb) x/wx $esp                                                                           ",{}]],"22":[["0xbffff550:     0xbffff75f                                                                ",{}]],"23":[["(gdb) # this shuld be the address of a string                                             ",{}]],"24":[["(gdb) x/s 0xbffff75f                                                                      ",{}]],"25":[["0xbffff75f:     \"1234\"                                                                    ",{}]],"26":[["(gdb) # AH! this is the one we inserted!                                                  ",{}]],"27":[["                                                                                          ",{}]]},"cursor":{"x":0}}],[0.000154,{"lines":{"27":[["(gdb)                                                                                     ",{}]]},"cursor":{"x":6}}],[10.404709,{"lines":{"27":[["(gdb) #                                                                                   ",{}]]},"cursor":{"x":7}}],[0.767199,{"cursor":{"x":8}}],[0.208921,{"lines":{"27":[["(gdb) # 0x80485a0 <main+57>:mov    DWORD PTR [esp+0x4],eax                                ",{}]]},"cursor":{"x":58}}],[0.919548,{"lines":{"0":[["(gdb) # 0x80485ab <main+68>:call   0x8048380 <strcmp@plt>                                 ",{}]],"1":[["(gdb) # we have a breakpoint before calling strcmp!                                       ",{}]],"2":[["(gdb) r 1234                                                                              ",{}]],"3":[["Starting program: /home/r1x/gdb/password 1234                                             ",{}]],"4":[["warning: Could not load shared library symbols for linux-gate.so.1.                       ",{}]],"5":[["Do you need \"set solib-search-path\" or \"set sysroot\"?                                     ",{}]],"6":[["                                                                                          ",{}]],"7":[["Breakpoint 1, 0x0804856a in main ()                                                       ",{}]],"8":[["(gdb) c                                                                                   ",{}]],"9":[["Continuing.                                                                               ",{}]],"10":[["                                                                                          ",{}]],"11":[["Breakpoint 2, 0x080485ab in main ()                                                       ",{}]],"12":[["(gdb) # OK here we are. strcmp compares two strings and if they are different             ",{}]],"13":[["(gdb) # the program says the pwd is wrong                                                 ",{}]],"14":[["(gdb) # guess what? the two strings are the good password and the one we inserted, probabl",{}]],"15":[["y                                                                                         ",{}]],"16":[["(gdb) # let                                                                               ",{}]],"17":[["(gdb) # let's check                                                                       ",{}]],"18":[["(gdb) # 0x80485a8 <main+65>:mov    DWORD PTR [esp],eax                                    ",{}]],"19":[["(gdb) # this is done before strcmp                                                        ",{}]],"20":[["(gdb) x/wx $esp                                                                           ",{}]],"21":[["0xbffff550:     0xbffff75f                                                                ",{}]],"22":[["(gdb) # this shuld be the address of a string                                             ",{}]],"23":[["(gdb) x/s 0xbffff75f                                                                      ",{}]],"24":[["0xbffff75f:     \"1234\"                                                                    ",{}]],"25":[["(gdb) # AH! this is the one we inserted!                                                  ",{}]],"26":[["(gdb) # 0x80485a0 <main+57>:mov    DWORD PTR [esp+0x4],eax                                ",{}]],"27":[["(gdb)                                                                                     ",{}]]},"cursor":{"x":6}}],[0.7676539999999999,{"lines":{"27":[["(gdb) #                                                                                   ",{}]]},"cursor":{"x":7}}],[0.083758,{"cursor":{"x":8}}],[0.233666,{"lines":{"27":[["(gdb) # t                                                                                 ",{}]]},"cursor":{"x":9}}],[0.10648,{"lines":{"27":[["(gdb) # th                                                                                ",{}]]},"cursor":{"x":10}}],[0.028523,{"lines":{"27":[["(gdb) # thi                                                                               ",{}]]},"cursor":{"x":11}}],[0.112534,{"lines":{"27":[["(gdb) # this                                                                              ",{}]]},"cursor":{"x":12}}],[0.056455,{"cursor":{"x":13}}],[0.080023,{"lines":{"27":[["(gdb) # this i                                                                            ",{}]]},"cursor":{"x":14}}],[0.127883,{"lines":{"27":[["(gdb) # this is                                                                           ",{}]]},"cursor":{"x":15}}],[0.09589399999999999,{"cursor":{"x":16}}],[0.098824,{"lines":{"27":[["(gdb) # this is d                                                                         ",{}]]},"cursor":{"x":17}}],[0.061286,{"lines":{"27":[["(gdb) # this is do                                                                        ",{}]]},"cursor":{"x":18}}],[0.128096,{"lines":{"27":[["(gdb) # this is don                                                                       ",{}]]},"cursor":{"x":19}}],[0.08714,{"lines":{"27":[["(gdb) # this is done                                                                      ",{}]]},"cursor":{"x":20}}],[0.730502,{"cursor":{"x":21}}],[0.61599,{"lines":{"27":[["(gdb) # this is done b                                                                    ",{}]]},"cursor":{"x":22}}],[0.110356,{"lines":{"27":[["(gdb) # this is done be                                                                   ",{}]]},"cursor":{"x":23}}],[0.191786,{"lines":{"27":[["(gdb) # this is done bef                                                                  ",{}]]},"cursor":{"x":24}}],[0.127863,{"lines":{"27":[["(gdb) # this is done befo                                                                 ",{}]]},"cursor":{"x":25}}],[0.104266,{"lines":{"27":[["(gdb) # this is done befor                                                                ",{}]]},"cursor":{"x":26}}],[0.030635,{"lines":{"27":[["(gdb) # this is done before                                                               ",{}]]},"cursor":{"x":27}}],[0.941955,{"cursor":{"x":28}}],[1.886025,{"lines":{"27":[["(gdb) # this is done before s                                                             ",{}]]},"cursor":{"x":29}}],[0.221146,{"lines":{"27":[["(gdb) # this is done before st                                                            ",{}]]},"cursor":{"x":30}}],[0.175751,{"lines":{"27":[["(gdb) # this is done before str                                                           ",{}]]},"cursor":{"x":31}}],[0.224139,{"lines":{"27":[["(gdb) # this is done before strc                                                          ",{}]]},"cursor":{"x":32}}],[0.135106,{"lines":{"27":[["(gdb) # this is done before strcm                                                         ",{}]]},"cursor":{"x":33}}],[0.208146,{"lines":{"27":[["(gdb) # this is done before strcmp                                                        ",{}]]},"cursor":{"x":34}}],[0.843051,{"cursor":{"x":35}}],[0.117796,{"lines":{"27":[["(gdb) # this is done before strcmp a                                                      ",{}]]},"cursor":{"x":36}}],[0.08035399999999999,{"lines":{"27":[["(gdb) # this is done before strcmp an                                                     ",{}]]},"cursor":{"x":37}}],[0.575995,{"lines":{"27":[["(gdb) # this is done before strcmp a                                                      ",{}]]},"cursor":{"x":36}}],[0.143278,{"lines":{"27":[["(gdb) # this is done before strcmp                                                        ",{}]]},"cursor":{"x":35}}],[0.841889,{"lines":{"27":[["(gdb) # this is done before strcmp a                                                      ",{}]]},"cursor":{"x":36}}],[0.125077,{"lines":{"27":[["(gdb) # this is done before strcmp al                                                     ",{}]]},"cursor":{"x":37}}],[0.097037,{"lines":{"27":[["(gdb) # this is done before strcmp als                                                    ",{}]]},"cursor":{"x":38}}],[0.128116,{"lines":{"27":[["(gdb) # this is done before strcmp also                                                   ",{}]]},"cursor":{"x":39}}],[0.778262,{"lines":{"0":[["(gdb) # we have a breakpoint before calling strcmp!                                       ",{}]],"1":[["(gdb) r 1234                                                                              ",{}]],"2":[["Starting program: /home/r1x/gdb/password 1234                                             ",{}]],"3":[["warning: Could not load shared library symbols for linux-gate.so.1.                       ",{}]],"4":[["Do you need \"set solib-search-path\" or \"set sysroot\"?                                     ",{}]],"5":[["                                                                                          ",{}]],"6":[["Breakpoint 1, 0x0804856a in main ()                                                       ",{}]],"7":[["(gdb) c                                                                                   ",{}]],"8":[["Continuing.                                                                               ",{}]],"9":[["                                                                                          ",{}]],"10":[["Breakpoint 2, 0x080485ab in main ()                                                       ",{}]],"11":[["(gdb) # OK here we are. strcmp compares two strings and if they are different             ",{}]],"12":[["(gdb) # the program says the pwd is wrong                                                 ",{}]],"13":[["(gdb) # guess what? the two strings are the good password and the one we inserted, probabl",{}]],"14":[["y                                                                                         ",{}]],"15":[["(gdb) # let                                                                               ",{}]],"16":[["(gdb) # let's check                                                                       ",{}]],"17":[["(gdb) # 0x80485a8 <main+65>:mov    DWORD PTR [esp],eax                                    ",{}]],"18":[["(gdb) # this is done before strcmp                                                        ",{}]],"19":[["(gdb) x/wx $esp                                                                           ",{}]],"20":[["0xbffff550:     0xbffff75f                                                                ",{}]],"21":[["(gdb) # this shuld be the address of a string                                             ",{}]],"22":[["(gdb) x/s 0xbffff75f                                                                      ",{}]],"23":[["0xbffff75f:     \"1234\"                                                                    ",{}]],"24":[["(gdb) # AH! this is the one we inserted!                                                  ",{}]],"25":[["(gdb) # 0x80485a0 <main+57>:mov    DWORD PTR [esp+0x4],eax                                ",{}]],"26":[["(gdb) # this is done before strcmp also                                                   ",{}]],"27":[["(gdb)                                                                                     ",{}]]},"cursor":{"x":6}}],[3.261504,{"lines":{"27":[["(gdb) # this is done before strcmp also                                                   ",{}]]},"cursor":{"x":39}}],[0.23998,{"lines":{"27":[["(gdb) # 0x80485a0 <main+57>:mov    DWORD PTR [esp+0x4],eax                                ",{}]]},"cursor":{"x":58}}],[0.256074,{"lines":{"27":[["(gdb) # AH! this is the one we inserted!                                                  ",{}]]},"cursor":{"x":40}}],[0.328158,{"lines":{"27":[["(gdb) x/s 0xbffff75f                                                                      ",{}]]},"cursor":{"x":20}}],[0.466772,{"lines":{"27":[["(gdb) # this shuld be the address of a string                                             ",{}]]},"cursor":{"x":45}}],[0.575754,{"lines":{"27":[["(gdb) x/wx $esp                                                                           ",{}]]},"cursor":{"x":15}}],[1.471268,{"lines":{"27":[["(gdb) x/wx $esp+                                                                          ",{}]]},"cursor":{"x":16}}],[0.477845,{"lines":{"27":[["(gdb) x/wx $esp+4                                                                         ",{}]]},"cursor":{"x":17}}],[0.104187,{"lines":{"0":[["Starting program: /home/r1x/gdb/password 1234                                             ",{}]],"1":[["warning: Could not load shared library symbols for linux-gate.so.1.                       ",{}]],"2":[["Do you need \"set solib-search-path\" or \"set sysroot\"?                                     ",{}]],"3":[["                                                                                          ",{}]],"4":[["Breakpoint 1, 0x0804856a in main ()                                                       ",{}]],"5":[["(gdb) c                                                                                   ",{}]],"6":[["Continuing.                                                                               ",{}]],"7":[["                                                                                          ",{}]],"8":[["Breakpoint 2, 0x080485ab in main ()                                                       ",{}]],"9":[["(gdb) # OK here we are. strcmp compares two strings and if they are different             ",{}]],"10":[["(gdb) # the program says the pwd is wrong                                                 ",{}]],"11":[["(gdb) # guess what? the two strings are the good password and the one we inserted, probabl",{}]],"12":[["y                                                                                         ",{}]],"13":[["(gdb) # let                                                                               ",{}]],"14":[["(gdb) # let's check                                                                       ",{}]],"15":[["(gdb) # 0x80485a8 <main+65>:mov    DWORD PTR [esp],eax                                    ",{}]],"16":[["(gdb) # this is done before strcmp                                                        ",{}]],"17":[["(gdb) x/wx $esp                                                                           ",{}]],"18":[["0xbffff550:     0xbffff75f                                                                ",{}]],"19":[["(gdb) # this shuld be the address of a string                                             ",{}]],"20":[["(gdb) x/s 0xbffff75f                                                                      ",{}]],"21":[["0xbffff75f:     \"1234\"                                                                    ",{}]],"22":[["(gdb) # AH! this is the one we inserted!                                                  ",{}]],"23":[["(gdb) # 0x80485a0 <main+57>:mov    DWORD PTR [esp+0x4],eax                                ",{}]],"24":[["(gdb) # this is done before strcmp also                                                   ",{}]],"25":[["(gdb) x/wx $esp+4                                                                         ",{}]],"26":[["0xbffff554:     0x0804b008                                                                ",{}]],"27":[["(gdb)                                                                                     ",{}]]},"cursor":{"x":6}}],[2.121122,{"lines":{"27":[["(gdb) x                                                                                   ",{}]]},"cursor":{"x":7}}],[0.101606,{"lines":{"27":[["(gdb) x/                                                                                  ",{}]]},"cursor":{"x":8}}],[0.096694,{"lines":{"27":[["(gdb) x/s                                                                                 ",{}]]},"cursor":{"x":9}}],[0.08781700000000001,{"cursor":{"x":10}}],[3.195742,{"lines":{"27":[["(gdb) x/s 0x0804b008                                                                      ",{}]]},"cursor":{"x":20}}],[0.326977,{"lines":{"0":[["Do you need \"set solib-search-path\" or \"set sysroot\"?                                     ",{}]],"1":[["                                                                                          ",{}]],"2":[["Breakpoint 1, 0x0804856a in main ()                                                       ",{}]],"3":[["(gdb) c                                                                                   ",{}]],"4":[["Continuing.                                                                               ",{}]],"5":[["                                                                                          ",{}]],"6":[["Breakpoint 2, 0x080485ab in main ()                                                       ",{}]],"7":[["(gdb) # OK here we are. strcmp compares two strings and if they are different             ",{}]],"8":[["(gdb) # the program says the pwd is wrong                                                 ",{}]],"9":[["(gdb) # guess what? the two strings are the good password and the one we inserted, probabl",{}]],"10":[["y                                                                                         ",{}]],"11":[["(gdb) # let                                                                               ",{}]],"12":[["(gdb) # let's check                                                                       ",{}]],"13":[["(gdb) # 0x80485a8 <main+65>:mov    DWORD PTR [esp],eax                                    ",{}]],"14":[["(gdb) # this is done before strcmp                                                        ",{}]],"15":[["(gdb) x/wx $esp                                                                           ",{}]],"16":[["0xbffff550:     0xbffff75f                                                                ",{}]],"17":[["(gdb) # this shuld be the address of a string                                             ",{}]],"18":[["(gdb) x/s 0xbffff75f                                                                      ",{}]],"19":[["0xbffff75f:     \"1234\"                                                                    ",{}]],"20":[["(gdb) # AH! this is the one we inserted!                                                  ",{}]],"21":[["(gdb) # 0x80485a0 <main+57>:mov    DWORD PTR [esp+0x4],eax                                ",{}]],"22":[["(gdb) # this is done before strcmp also                                                   ",{}]],"23":[["(gdb) x/wx $esp+4                                                                         ",{}]],"24":[["0xbffff554:     0x0804b008                                                                ",{}]],"25":[["(gdb) x/s 0x0804b008                                                                      ",{}]],"26":[["0x804b008:      \"YVGGYRSYNT\"                                                              ",{}]],"27":[["(gdb)                                                                                     ",{}]]},"cursor":{"x":6}}],[1.335951,{"lines":{"27":[["(gdb) #                                                                                   ",{}]]},"cursor":{"x":7}}],[0.101622,{"cursor":{"x":8}}],[1.19985,{"lines":{"27":[["(gdb) # Y                                                                                 ",{}]]},"cursor":{"x":9}}],[0.07149800000000001,{"lines":{"27":[["(gdb) # YE                                                                                ",{}]]},"cursor":{"x":10}}],[0.169006,{"lines":{"27":[["(gdb) # YES                                                                               ",{}]]},"cursor":{"x":11}}],[0.626149,{"lines":{"27":[["(gdb) # YES!                                                                              ",{}]]},"cursor":{"x":12}}],[0.663947,{"cursor":{"x":13}}],[0.303735,{"lines":{"27":[["(gdb) # YES! l                                                                            ",{}]]},"cursor":{"x":14}}],[0.173272,{"lines":{"27":[["(gdb) # YES! lo                                                                           ",{}]]},"cursor":{"x":15}}],[0.152761,{"lines":{"27":[["(gdb) # YES! lok                                                                          ",{}]]},"cursor":{"x":16}}],[0.6255039999999999,{"lines":{"27":[["(gdb) # YES! lo                                                                           ",{}]]},"cursor":{"x":15}}],[0.182174,{"lines":{"27":[["(gdb) # YES! loo                                                                          ",{}]]},"cursor":{"x":16}}],[0.031347,{"lines":{"27":[["(gdb) # YES! look                                                                         ",{}]]},"cursor":{"x":17}}],[0.143222,{"lines":{"27":[["(gdb) # YES! looks                                                                        ",{}]]},"cursor":{"x":18}}],[0.088826,{"cursor":{"x":19}}],[0.095539,{"lines":{"27":[["(gdb) # YES! looks l                                                                      ",{}]]},"cursor":{"x":20}}],[0.208299,{"lines":{"27":[["(gdb) # YES! looks li                                                                     ",{}]]},"cursor":{"x":21}}],[0.586969,{"lines":{"27":[["(gdb) # YES! looks lik                                                                    ",{}]]},"cursor":{"x":22}}],[0.133409,{"lines":{"27":[["(gdb) # YES! looks like                                                                   ",{}]]},"cursor":{"x":23}}],[0.09536600000000001,{"cursor":{"x":24}}],[0.09664200000000001,{"lines":{"27":[["(gdb) # YES! looks like a                                                                 ",{}]]},"cursor":{"x":25}}],[0.055942,{"cursor":{"x":26}}],[0.120371,{"lines":{"27":[["(gdb) # YES! looks like a p                                                               ",{}]]},"cursor":{"x":27}}],[0.175952,{"lines":{"27":[["(gdb) # YES! looks like a pw                                                              ",{}]]},"cursor":{"x":28}}],[0.12782,{"lines":{"27":[["(gdb) # YES! looks like a pwd                                                             ",{}]]},"cursor":{"x":29}}],[0.13503,{"cursor":{"x":30}}],[0.200651,{"lines":{"27":[["(gdb) # YES! looks like a pwd ;                                                           ",{}]]},"cursor":{"x":31}}],[0.224381,{"lines":{"27":[["(gdb) # YES! looks like a pwd ;)                                                          ",{}]]},"cursor":{"x":32}}],[0.37777,{"lines":{"0":[["                                                                                          ",{}]],"1":[["Breakpoint 1, 0x0804856a in main ()                                                       ",{}]],"2":[["(gdb) c                                                                                   ",{}]],"3":[["Continuing.                                                                               ",{}]],"4":[["                                                                                          ",{}]],"5":[["Breakpoint 2, 0x080485ab in main ()                                                       ",{}]],"6":[["(gdb) # OK here we are. strcmp compares two strings and if they are different             ",{}]],"7":[["(gdb) # the program says the pwd is wrong                                                 ",{}]],"8":[["(gdb) # guess what? the two strings are the good password and the one we inserted, probabl",{}]],"9":[["y                                                                                         ",{}]],"10":[["(gdb) # let                                                                               ",{}]],"11":[["(gdb) # let's check                                                                       ",{}]],"12":[["(gdb) # 0x80485a8 <main+65>:mov    DWORD PTR [esp],eax                                    ",{}]],"13":[["(gdb) # this is done before strcmp                                                        ",{}]],"14":[["(gdb) x/wx $esp                                                                           ",{}]],"15":[["0xbffff550:     0xbffff75f                                                                ",{}]],"16":[["(gdb) # this shuld be the address of a string                                             ",{}]],"17":[["(gdb) x/s 0xbffff75f                                                                      ",{}]],"18":[["0xbffff75f:     \"1234\"                                                                    ",{}]],"19":[["(gdb) # AH! this is the one we inserted!                                                  ",{}]],"20":[["(gdb) # 0x80485a0 <main+57>:mov    DWORD PTR [esp+0x4],eax                                ",{}]],"21":[["(gdb) # this is done before strcmp also                                                   ",{}]],"22":[["(gdb) x/wx $esp+4                                                                         ",{}]],"23":[["0xbffff554:     0x0804b008                                                                ",{}]],"24":[["(gdb) x/s 0x0804b008                                                                      ",{}]],"25":[["0x804b008:      \"YVGGYRSYNT\"                                                              ",{}]],"26":[["(gdb) # YES! looks like a pwd ;)                                                          ",{}]],"27":[["(gdb)                                                                                     ",{}]]},"cursor":{"x":6}}],[2.695998,{"lines":{"0":[["Breakpoint 2, 0x080485ab in main ()                                                       ",{}]],"1":[["(gdb) # OK here we are. strcmp compares two strings and if they are different             ",{}]],"2":[["(gdb) # the program says the pwd is wrong                                                 ",{}]],"3":[["(gdb) # guess what? the two strings are the good password and the one we inserted, probabl",{}]],"4":[["y                                                                                         ",{}]],"5":[["(gdb) # let                                                                               ",{}]],"6":[["(gdb) # let's check                                                                       ",{}]],"7":[["(gdb) # 0x80485a8 <main+65>:mov    DWORD PTR [esp],eax                                    ",{}]],"8":[["(gdb) # this is done before strcmp                                                        ",{}]],"9":[["(gdb) x/wx $esp                                                                           ",{}]],"10":[["0xbffff550:     0xbffff75f                                                                ",{}]],"11":[["(gdb) # this shuld be the address of a string                                             ",{}]],"12":[["(gdb) x/s 0xbffff75f                                                                      ",{}]],"13":[["0xbffff75f:     \"1234\"                                                                    ",{}]],"14":[["(gdb) # AH! this is the one we inserted!                                                  ",{}]],"15":[["(gdb) # 0x80485a0 <main+57>:mov    DWORD PTR [esp+0x4],eax                                ",{}]],"16":[["(gdb) # this is done before strcmp also                                                   ",{}]],"17":[["(gdb) x/wx $esp+4                                                                         ",{}]],"18":[["0xbffff554:     0x0804b008                                                                ",{}]],"19":[["(gdb) x/s 0x0804b008                                                                      ",{}]],"20":[["0x804b008:      \"YVGGYRSYNT\"                                                              ",{}]],"21":[["(gdb) # YES! looks like a pwd ;)                                                          ",{}]],"22":[["(gdb) quit                                                                                ",{}]],"23":[["A debugging session is active.                                                            ",{}]],"24":[["                                                                                          ",{}]],"25":[["        Inferior 1 [process 2539] will be killed.                                         ",{}]],"26":[["                                                                                          ",{}]],"27":[["Quit anyway? (y or n)                                                                     ",{}]]},"cursor":{"x":22}}],[1.504236,{"lines":{"27":[["Quit anyway? (y or n) y                                                                   ",{}]]},"cursor":{"x":23}}],[0.061081,{"lines":{"0":[["(gdb) # OK here we are. strcmp compares two strings and if they are different             ",{}]],"1":[["(gdb) # the program says the pwd is wrong                                                 ",{}]],"2":[["(gdb) # guess what? the two strings are the good password and the one we inserted, probabl",{}]],"3":[["y                                                                                         ",{}]],"4":[["(gdb) # let                                                                               ",{}]],"5":[["(gdb) # let's check                                                                       ",{}]],"6":[["(gdb) # 0x80485a8 <main+65>:mov    DWORD PTR [esp],eax                                    ",{}]],"7":[["(gdb) # this is done before strcmp                                                        ",{}]],"8":[["(gdb) x/wx $esp                                                                           ",{}]],"9":[["0xbffff550:     0xbffff75f                                                                ",{}]],"10":[["(gdb) # this shuld be the address of a string                                             ",{}]],"11":[["(gdb) x/s 0xbffff75f                                                                      ",{}]],"12":[["0xbffff75f:     \"1234\"                                                                    ",{}]],"13":[["(gdb) # AH! this is the one we inserted!                                                  ",{}]],"14":[["(gdb) # 0x80485a0 <main+57>:mov    DWORD PTR [esp+0x4],eax                                ",{}]],"15":[["(gdb) # this is done before strcmp also                                                   ",{}]],"16":[["(gdb) x/wx $esp+4                                                                         ",{}]],"17":[["0xbffff554:     0x0804b008                                                                ",{}]],"18":[["(gdb) x/s 0x0804b008                                                                      ",{}]],"19":[["0x804b008:      \"YVGGYRSYNT\"                                                              ",{}]],"20":[["(gdb) # YES! looks like a pwd ;)                                                          ",{}]],"21":[["(gdb) quit                                                                                ",{}]],"22":[["A debugging session is active.                                                            ",{}]],"23":[["                                                                                          ",{}]],"24":[["        Inferior 1 [process 2539] will be killed.                                         ",{}]],"25":[["                                                                                          ",{}]],"26":[["Quit anyway? (y or n) y                                                                   ",{}]],"27":[["                                                                                          ",{}]]},"cursor":{"x":0}}],[0.001809,{"lines":{"27":[["r1x@testbed",{"fg":2,"bold":true}],[" ~/gdb $",{"fg":4,"bold":true}],["                                                                       ",{}]]},"cursor":{"x":20}}],[1.222852,{"lines":{"27":[["r1x@testbed",{"fg":2,"bold":true}],[" ~/gdb $",{"fg":4,"bold":true}],[" .                                                                     ",{}]]},"cursor":{"x":21}}],[0.167184,{"lines":{"27":[["r1x@testbed",{"fg":2,"bold":true}],[" ~/gdb $",{"fg":4,"bold":true}],[" ./                                                                    ",{}]]},"cursor":{"x":22}}],[0.231934,{"lines":{"27":[["r1x@testbed",{"fg":2,"bold":true}],[" ~/gdb $",{"fg":4,"bold":true}],[" ./p                                                                   ",{}]]},"cursor":{"x":23}}],[0.434934,{"lines":{"27":[["r1x@testbed",{"fg":2,"bold":true}],[" ~/gdb $",{"fg":4,"bold":true}],[" ./pa                                                                  ",{}]]},"cursor":{"x":24}}],[0.245316,{"lines":{"27":[["r1x@testbed",{"fg":2,"bold":true}],[" ~/gdb $",{"fg":4,"bold":true}],[" ./password                                                            ",{}]]},"cursor":{"x":31}}],[3.80395,{"lines":{"27":[["r1x@testbed",{"fg":2,"bold":true}],[" ~/gdb $",{"fg":4,"bold":true}],[" ./password YVGGYRSYNT                                                 ",{}]]},"cursor":{"x":41}}],[0.606921,{"lines":{"0":[["(gdb) # the program says the pwd is wrong                                                 ",{}]],"1":[["(gdb) # guess what? the two strings are the good password and the one we inserted, probabl",{}]],"2":[["y                                                                                         ",{}]],"3":[["(gdb) # let                                                                               ",{}]],"4":[["(gdb) # let's check                                                                       ",{}]],"5":[["(gdb) # 0x80485a8 <main+65>:mov    DWORD PTR [esp],eax                                    ",{}]],"6":[["(gdb) # this is done before strcmp                                                        ",{}]],"7":[["(gdb) x/wx $esp                                                                           ",{}]],"8":[["0xbffff550:     0xbffff75f                                                                ",{}]],"9":[["(gdb) # this shuld be the address of a string                                             ",{}]],"10":[["(gdb) x/s 0xbffff75f                                                                      ",{}]],"11":[["0xbffff75f:     \"1234\"                                                                    ",{}]],"12":[["(gdb) # AH! this is the one we inserted!                                                  ",{}]],"13":[["(gdb) # 0x80485a0 <main+57>:mov    DWORD PTR [esp+0x4],eax                                ",{}]],"14":[["(gdb) # this is done before strcmp also                                                   ",{}]],"15":[["(gdb) x/wx $esp+4                                                                         ",{}]],"16":[["0xbffff554:     0x0804b008                                                                ",{}]],"17":[["(gdb) x/s 0x0804b008                                                                      ",{}]],"18":[["0x804b008:      \"YVGGYRSYNT\"                                                              ",{}]],"19":[["(gdb) # YES! looks like a pwd ;)                                                          ",{}]],"20":[["(gdb) quit                                                                                ",{}]],"21":[["A debugging session is active.                                                            ",{}]],"22":[["                                                                                          ",{}]],"23":[["        Inferior 1 [process 2539] will be killed.                                         ",{}]],"24":[["                                                                                          ",{}]],"25":[["Quit anyway? (y or n) y                                                                   ",{}]],"26":[["r1x@testbed",{"fg":2,"bold":true}],[" ~/gdb $",{"fg":4,"bold":true}],[" ./password YVGGYRSYNT                                                 ",{}]],"27":[["                                                                                          ",{}]]},"cursor":{"x":0}}],[0.001365,{"lines":{"0":[["(gdb) # guess what? the two strings are the good password and the one we inserted, probabl",{}]],"1":[["y                                                                                         ",{}]],"2":[["(gdb) # let                                                                               ",{}]],"3":[["(gdb) # let's check                                                                       ",{}]],"4":[["(gdb) # 0x80485a8 <main+65>:mov    DWORD PTR [esp],eax                                    ",{}]],"5":[["(gdb) # this is done before strcmp                                                        ",{}]],"6":[["(gdb) x/wx $esp                                                                           ",{}]],"7":[["0xbffff550:     0xbffff75f                                                                ",{}]],"8":[["(gdb) # this shuld be the address of a string                                             ",{}]],"9":[["(gdb) x/s 0xbffff75f                                                                      ",{}]],"10":[["0xbffff75f:     \"1234\"                                                                    ",{}]],"11":[["(gdb) # AH! this is the one we inserted!                                                  ",{}]],"12":[["(gdb) # 0x80485a0 <main+57>:mov    DWORD PTR [esp+0x4],eax                                ",{}]],"13":[["(gdb) # this is done before strcmp also                                                   ",{}]],"14":[["(gdb) x/wx $esp+4                                                                         ",{}]],"15":[["0xbffff554:     0x0804b008                                                                ",{}]],"16":[["(gdb) x/s 0x0804b008                                                                      ",{}]],"17":[["0x804b008:      \"YVGGYRSYNT\"                                                              ",{}]],"18":[["(gdb) # YES! looks like a pwd ;)                                                          ",{}]],"19":[["(gdb) quit                                                                                ",{}]],"20":[["A debugging session is active.                                                            ",{}]],"21":[["                                                                                          ",{}]],"22":[["        Inferior 1 [process 2539] will be killed.                                         ",{}]],"23":[["                                                                                          ",{}]],"24":[["Quit anyway? (y or n) y                                                                   ",{}]],"25":[["r1x@testbed",{"fg":2,"bold":true}],[" ~/gdb $",{"fg":4,"bold":true}],[" ./password YVGGYRSYNT                                                 ",{}]],"26":[["You are logged in!                                                                        ",{}]],"27":[["r1x@testbed",{"fg":2,"bold":true}],[" ~/gdb $",{"fg":4,"bold":true}],["                                                                       ",{}]]},"cursor":{"x":20}}],[1.853551,{"lines":{"27":[["r1x@testbed",{"fg":2,"bold":true}],[" ~/gdb $",{"fg":4,"bold":true}],[" #                                                                     ",{}]]},"cursor":{"x":21}}],[0.09415999999999999,{"cursor":{"x":22}}],[0.48933,{"lines":{"27":[["r1x@testbed",{"fg":2,"bold":true}],[" ~/gdb $",{"fg":4,"bold":true}],[" # W                                                                   ",{}]]},"cursor":{"x":23}}],[0.198302,{"lines":{"27":[["r1x@testbed",{"fg":2,"bold":true}],[" ~/gdb $",{"fg":4,"bold":true}],[" # WO                                                                  ",{}]]},"cursor":{"x":24}}],[0.080315,{"lines":{"27":[["r1x@testbed",{"fg":2,"bold":true}],[" ~/gdb $",{"fg":4,"bold":true}],[" # WOW                                                                 ",{}]]},"cursor":{"x":25}}],[0.120074,{"lines":{"27":[["r1x@testbed",{"fg":2,"bold":true}],[" ~/gdb $",{"fg":4,"bold":true}],[" # WOWO                                                                ",{}]]},"cursor":{"x":26}}],[0.103308,{"lines":{"27":[["r1x@testbed",{"fg":2,"bold":true}],[" ~/gdb $",{"fg":4,"bold":true}],[" # WOWOW                                                               ",{}]]},"cursor":{"x":27}}],[0.088671,{"lines":{"27":[["r1x@testbed",{"fg":2,"bold":true}],[" ~/gdb $",{"fg":4,"bold":true}],[" # WOWOWO                                                              ",{}]]},"cursor":{"x":28}}],[0.071646,{"lines":{"27":[["r1x@testbed",{"fg":2,"bold":true}],[" ~/gdb $",{"fg":4,"bold":true}],[" # WOWOWOW                                                             ",{}]]},"cursor":{"x":29}}],[0.394255,{"lines":{"27":[["r1x@testbed",{"fg":2,"bold":true}],[" ~/gdb $",{"fg":4,"bold":true}],[" # WOWOWOW!                                                            ",{}]]},"cursor":{"x":30}}],[0.359606,{"lines":{"0":[["y                                                                                         ",{}]],"1":[["(gdb) # let                                                                               ",{}]],"2":[["(gdb) # let's check                                                                       ",{}]],"3":[["(gdb) # 0x80485a8 <main+65>:mov    DWORD PTR [esp],eax                                    ",{}]],"4":[["(gdb) # this is done before strcmp                                                        ",{}]],"5":[["(gdb) x/wx $esp                                                                           ",{}]],"6":[["0xbffff550:     0xbffff75f                                                                ",{}]],"7":[["(gdb) # this shuld be the address of a string                                             ",{}]],"8":[["(gdb) x/s 0xbffff75f                                                                      ",{}]],"9":[["0xbffff75f:     \"1234\"                                                                    ",{}]],"10":[["(gdb) # AH! this is the one we inserted!                                                  ",{}]],"11":[["(gdb) # 0x80485a0 <main+57>:mov    DWORD PTR [esp+0x4],eax                                ",{}]],"12":[["(gdb) # this is done before strcmp also                                                   ",{}]],"13":[["(gdb) x/wx $esp+4                                                                         ",{}]],"14":[["0xbffff554:     0x0804b008                                                                ",{}]],"15":[["(gdb) x/s 0x0804b008                                                                      ",{}]],"16":[["0x804b008:      \"YVGGYRSYNT\"                                                              ",{}]],"17":[["(gdb) # YES! looks like a pwd ;)                                                          ",{}]],"18":[["(gdb) quit                                                                                ",{}]],"19":[["A debugging session is active.                                                            ",{}]],"20":[["                                                                                          ",{}]],"21":[["        Inferior 1 [process 2539] will be killed.                                         ",{}]],"22":[["                                                                                          ",{}]],"23":[["Quit anyway? (y or n) y                                                                   ",{}]],"24":[["r1x@testbed",{"fg":2,"bold":true}],[" ~/gdb $",{"fg":4,"bold":true}],[" ./password YVGGYRSYNT                                                 ",{}]],"25":[["You are logged in!                                                                        ",{}]],"26":[["r1x@testbed",{"fg":2,"bold":true}],[" ~/gdb $",{"fg":4,"bold":true}],[" # WOWOWOW!                                                            ",{}]],"27":[["r1x@testbed",{"fg":2,"bold":true}],[" ~/gdb $",{"fg":4,"bold":true}],["                                                                       ",{}]]},"cursor":{"x":20}}],[2.077536,{"lines":{"0":[["(gdb) # let                                                                               ",{}]],"1":[["(gdb) # let's check                                                                       ",{}]],"2":[["(gdb) # 0x80485a8 <main+65>:mov    DWORD PTR [esp],eax                                    ",{}]],"3":[["(gdb) # this is done before strcmp                                                        ",{}]],"4":[["(gdb) x/wx $esp                                                                           ",{}]],"5":[["0xbffff550:     0xbffff75f                                                                ",{}]],"6":[["(gdb) # this shuld be the address of a string                                             ",{}]],"7":[["(gdb) x/s 0xbffff75f                                                                      ",{}]],"8":[["0xbffff75f:     \"1234\"                                                                    ",{}]],"9":[["(gdb) # AH! this is the one we inserted!                                                  ",{}]],"10":[["(gdb) # 0x80485a0 <main+57>:mov    DWORD PTR [esp+0x4],eax                                ",{}]],"11":[["(gdb) # this is done before strcmp also                                                   ",{}]],"12":[["(gdb) x/wx $esp+4                                                                         ",{}]],"13":[["0xbffff554:     0x0804b008                                                                ",{}]],"14":[["(gdb) x/s 0x0804b008                                                                      ",{}]],"15":[["0x804b008:      \"YVGGYRSYNT\"                                                              ",{}]],"16":[["(gdb) # YES! looks like a pwd ;)                                                          ",{}]],"17":[["(gdb) quit                                                                                ",{}]],"18":[["A debugging session is active.                                                            ",{}]],"19":[["                                                                                          ",{}]],"20":[["        Inferior 1 [process 2539] will be killed.                                         ",{}]],"21":[["                                                                                          ",{}]],"22":[["Quit anyway? (y or n) y                                                                   ",{}]],"23":[["r1x@testbed",{"fg":2,"bold":true}],[" ~/gdb $",{"fg":4,"bold":true}],[" ./password YVGGYRSYNT                                                 ",{}]],"24":[["You are logged in!                                                                        ",{}]],"25":[["r1x@testbed",{"fg":2,"bold":true}],[" ~/gdb $",{"fg":4,"bold":true}],[" # WOWOWOW!                                                            ",{}]],"26":[["r1x@testbed",{"fg":2,"bold":true}],[" ~/gdb $",{"fg":4,"bold":true}],[" exit                                                                  ",{}]],"27":[["                                                                                          ",{}]]},"cursor":{"x":0}}]]